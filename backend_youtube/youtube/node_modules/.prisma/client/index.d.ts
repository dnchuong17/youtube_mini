
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model forgot_password_code
 * 
 */
export type forgot_password_code = $Result.DefaultSelection<Prisma.$forgot_password_codePayload>
/**
 * Model group_members
 * 
 */
export type group_members = $Result.DefaultSelection<Prisma.$group_membersPayload>
/**
 * Model groups
 * 
 */
export type groups = $Result.DefaultSelection<Prisma.$groupsPayload>
/**
 * Model likes
 * 
 */
export type likes = $Result.DefaultSelection<Prisma.$likesPayload>
/**
 * Model menu_sidebar
 * 
 */
export type menu_sidebar = $Result.DefaultSelection<Prisma.$menu_sidebarPayload>
/**
 * Model messages
 * 
 */
export type messages = $Result.DefaultSelection<Prisma.$messagesPayload>
/**
 * Model permissions
 * 
 */
export type permissions = $Result.DefaultSelection<Prisma.$permissionsPayload>
/**
 * Model role_permissions
 * 
 */
export type role_permissions = $Result.DefaultSelection<Prisma.$role_permissionsPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model subscriptions
 * 
 */
export type subscriptions = $Result.DefaultSelection<Prisma.$subscriptionsPayload>
/**
 * Model user_chats
 * 
 */
export type user_chats = $Result.DefaultSelection<Prisma.$user_chatsPayload>
/**
 * Model user_roles
 * 
 */
export type user_roles = $Result.DefaultSelection<Prisma.$user_rolesPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model video_comments
 * 
 */
export type video_comments = $Result.DefaultSelection<Prisma.$video_commentsPayload>
/**
 * Model video_types
 * 
 */
export type video_types = $Result.DefaultSelection<Prisma.$video_typesPayload>
/**
 * Model videos
 * 
 */
export type videos = $Result.DefaultSelection<Prisma.$videosPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const likes_type: {
  like: 'like',
  dislike: 'dislike'
};

export type likes_type = (typeof likes_type)[keyof typeof likes_type]

}

export type likes_type = $Enums.likes_type

export const likes_type: typeof $Enums.likes_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Forgot_password_codes
 * const forgot_password_codes = await prisma.forgot_password_code.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Forgot_password_codes
   * const forgot_password_codes = await prisma.forgot_password_code.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.forgot_password_code`: Exposes CRUD operations for the **forgot_password_code** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Forgot_password_codes
    * const forgot_password_codes = await prisma.forgot_password_code.findMany()
    * ```
    */
  get forgot_password_code(): Prisma.forgot_password_codeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.group_members`: Exposes CRUD operations for the **group_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Group_members
    * const group_members = await prisma.group_members.findMany()
    * ```
    */
  get group_members(): Prisma.group_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.groups`: Exposes CRUD operations for the **groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups
    * const groups = await prisma.groups.findMany()
    * ```
    */
  get groups(): Prisma.groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.likes`: Exposes CRUD operations for the **likes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.likes.findMany()
    * ```
    */
  get likes(): Prisma.likesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menu_sidebar`: Exposes CRUD operations for the **menu_sidebar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menu_sidebars
    * const menu_sidebars = await prisma.menu_sidebar.findMany()
    * ```
    */
  get menu_sidebar(): Prisma.menu_sidebarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissions`: Exposes CRUD operations for the **permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permissions.findMany()
    * ```
    */
  get permissions(): Prisma.permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role_permissions`: Exposes CRUD operations for the **role_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Role_permissions
    * const role_permissions = await prisma.role_permissions.findMany()
    * ```
    */
  get role_permissions(): Prisma.role_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscriptions`: Exposes CRUD operations for the **subscriptions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscriptions.findMany()
    * ```
    */
  get subscriptions(): Prisma.subscriptionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_chats`: Exposes CRUD operations for the **user_chats** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_chats
    * const user_chats = await prisma.user_chats.findMany()
    * ```
    */
  get user_chats(): Prisma.user_chatsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_roles`: Exposes CRUD operations for the **user_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_roles
    * const user_roles = await prisma.user_roles.findMany()
    * ```
    */
  get user_roles(): Prisma.user_rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.video_comments`: Exposes CRUD operations for the **video_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Video_comments
    * const video_comments = await prisma.video_comments.findMany()
    * ```
    */
  get video_comments(): Prisma.video_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.video_types`: Exposes CRUD operations for the **video_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Video_types
    * const video_types = await prisma.video_types.findMany()
    * ```
    */
  get video_types(): Prisma.video_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.videos`: Exposes CRUD operations for the **videos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Videos
    * const videos = await prisma.videos.findMany()
    * ```
    */
  get videos(): Prisma.videosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    forgot_password_code: 'forgot_password_code',
    group_members: 'group_members',
    groups: 'groups',
    likes: 'likes',
    menu_sidebar: 'menu_sidebar',
    messages: 'messages',
    permissions: 'permissions',
    role_permissions: 'role_permissions',
    roles: 'roles',
    subscriptions: 'subscriptions',
    user_chats: 'user_chats',
    user_roles: 'user_roles',
    users: 'users',
    video_comments: 'video_comments',
    video_types: 'video_types',
    videos: 'videos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "forgot_password_code" | "group_members" | "groups" | "likes" | "menu_sidebar" | "messages" | "permissions" | "role_permissions" | "roles" | "subscriptions" | "user_chats" | "user_roles" | "users" | "video_comments" | "video_types" | "videos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      forgot_password_code: {
        payload: Prisma.$forgot_password_codePayload<ExtArgs>
        fields: Prisma.forgot_password_codeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.forgot_password_codeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.forgot_password_codeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          findFirst: {
            args: Prisma.forgot_password_codeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.forgot_password_codeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          findMany: {
            args: Prisma.forgot_password_codeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>[]
          }
          create: {
            args: Prisma.forgot_password_codeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          createMany: {
            args: Prisma.forgot_password_codeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.forgot_password_codeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          update: {
            args: Prisma.forgot_password_codeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          deleteMany: {
            args: Prisma.forgot_password_codeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.forgot_password_codeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.forgot_password_codeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$forgot_password_codePayload>
          }
          aggregate: {
            args: Prisma.Forgot_password_codeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateForgot_password_code>
          }
          groupBy: {
            args: Prisma.forgot_password_codeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Forgot_password_codeGroupByOutputType>[]
          }
          count: {
            args: Prisma.forgot_password_codeCountArgs<ExtArgs>
            result: $Utils.Optional<Forgot_password_codeCountAggregateOutputType> | number
          }
        }
      }
      group_members: {
        payload: Prisma.$group_membersPayload<ExtArgs>
        fields: Prisma.group_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.group_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.group_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          findFirst: {
            args: Prisma.group_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.group_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          findMany: {
            args: Prisma.group_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>[]
          }
          create: {
            args: Prisma.group_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          createMany: {
            args: Prisma.group_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.group_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          update: {
            args: Prisma.group_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          deleteMany: {
            args: Prisma.group_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.group_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.group_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$group_membersPayload>
          }
          aggregate: {
            args: Prisma.Group_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroup_members>
          }
          groupBy: {
            args: Prisma.group_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Group_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.group_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Group_membersCountAggregateOutputType> | number
          }
        }
      }
      groups: {
        payload: Prisma.$groupsPayload<ExtArgs>
        fields: Prisma.groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findFirst: {
            args: Prisma.groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findMany: {
            args: Prisma.groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>[]
          }
          create: {
            args: Prisma.groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          createMany: {
            args: Prisma.groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          update: {
            args: Prisma.groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          deleteMany: {
            args: Prisma.groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          aggregate: {
            args: Prisma.GroupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGroups>
          }
          groupBy: {
            args: Prisma.groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<GroupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.groupsCountArgs<ExtArgs>
            result: $Utils.Optional<GroupsCountAggregateOutputType> | number
          }
        }
      }
      likes: {
        payload: Prisma.$likesPayload<ExtArgs>
        fields: Prisma.likesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.likesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.likesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          findFirst: {
            args: Prisma.likesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.likesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          findMany: {
            args: Prisma.likesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>[]
          }
          create: {
            args: Prisma.likesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          createMany: {
            args: Prisma.likesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.likesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          update: {
            args: Prisma.likesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          deleteMany: {
            args: Prisma.likesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.likesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.likesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          aggregate: {
            args: Prisma.LikesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLikes>
          }
          groupBy: {
            args: Prisma.likesGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikesGroupByOutputType>[]
          }
          count: {
            args: Prisma.likesCountArgs<ExtArgs>
            result: $Utils.Optional<LikesCountAggregateOutputType> | number
          }
        }
      }
      menu_sidebar: {
        payload: Prisma.$menu_sidebarPayload<ExtArgs>
        fields: Prisma.menu_sidebarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.menu_sidebarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.menu_sidebarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          findFirst: {
            args: Prisma.menu_sidebarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.menu_sidebarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          findMany: {
            args: Prisma.menu_sidebarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>[]
          }
          create: {
            args: Prisma.menu_sidebarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          createMany: {
            args: Prisma.menu_sidebarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.menu_sidebarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          update: {
            args: Prisma.menu_sidebarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          deleteMany: {
            args: Prisma.menu_sidebarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.menu_sidebarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.menu_sidebarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_sidebarPayload>
          }
          aggregate: {
            args: Prisma.Menu_sidebarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenu_sidebar>
          }
          groupBy: {
            args: Prisma.menu_sidebarGroupByArgs<ExtArgs>
            result: $Utils.Optional<Menu_sidebarGroupByOutputType>[]
          }
          count: {
            args: Prisma.menu_sidebarCountArgs<ExtArgs>
            result: $Utils.Optional<Menu_sidebarCountAggregateOutputType> | number
          }
        }
      }
      messages: {
        payload: Prisma.$messagesPayload<ExtArgs>
        fields: Prisma.messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findFirst: {
            args: Prisma.messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findMany: {
            args: Prisma.messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          create: {
            args: Prisma.messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          createMany: {
            args: Prisma.messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          update: {
            args: Prisma.messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          deleteMany: {
            args: Prisma.messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          aggregate: {
            args: Prisma.MessagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessages>
          }
          groupBy: {
            args: Prisma.messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.messagesCountArgs<ExtArgs>
            result: $Utils.Optional<MessagesCountAggregateOutputType> | number
          }
        }
      }
      permissions: {
        payload: Prisma.$permissionsPayload<ExtArgs>
        fields: Prisma.permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findFirst: {
            args: Prisma.permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findMany: {
            args: Prisma.permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          create: {
            args: Prisma.permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          createMany: {
            args: Prisma.permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          update: {
            args: Prisma.permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          deleteMany: {
            args: Prisma.permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          aggregate: {
            args: Prisma.PermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissions>
          }
          groupBy: {
            args: Prisma.permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionsCountAggregateOutputType> | number
          }
        }
      }
      role_permissions: {
        payload: Prisma.$role_permissionsPayload<ExtArgs>
        fields: Prisma.role_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.role_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.role_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findFirst: {
            args: Prisma.role_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.role_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          findMany: {
            args: Prisma.role_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>[]
          }
          create: {
            args: Prisma.role_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          createMany: {
            args: Prisma.role_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.role_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          update: {
            args: Prisma.role_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.role_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.role_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.role_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Role_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole_permissions>
          }
          groupBy: {
            args: Prisma.role_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.role_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Role_permissionsCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      subscriptions: {
        payload: Prisma.$subscriptionsPayload<ExtArgs>
        fields: Prisma.subscriptionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscriptionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscriptionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          findFirst: {
            args: Prisma.subscriptionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscriptionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          findMany: {
            args: Prisma.subscriptionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>[]
          }
          create: {
            args: Prisma.subscriptionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          createMany: {
            args: Prisma.subscriptionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.subscriptionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          update: {
            args: Prisma.subscriptionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          deleteMany: {
            args: Prisma.subscriptionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscriptionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.subscriptionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptions>
          }
          groupBy: {
            args: Prisma.subscriptionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscriptionsCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsCountAggregateOutputType> | number
          }
        }
      }
      user_chats: {
        payload: Prisma.$user_chatsPayload<ExtArgs>
        fields: Prisma.user_chatsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_chatsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_chatsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          findFirst: {
            args: Prisma.user_chatsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_chatsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          findMany: {
            args: Prisma.user_chatsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>[]
          }
          create: {
            args: Prisma.user_chatsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          createMany: {
            args: Prisma.user_chatsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_chatsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          update: {
            args: Prisma.user_chatsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          deleteMany: {
            args: Prisma.user_chatsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_chatsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_chatsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_chatsPayload>
          }
          aggregate: {
            args: Prisma.User_chatsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_chats>
          }
          groupBy: {
            args: Prisma.user_chatsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_chatsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_chatsCountArgs<ExtArgs>
            result: $Utils.Optional<User_chatsCountAggregateOutputType> | number
          }
        }
      }
      user_roles: {
        payload: Prisma.$user_rolesPayload<ExtArgs>
        fields: Prisma.user_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findFirst: {
            args: Prisma.user_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findMany: {
            args: Prisma.user_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          create: {
            args: Prisma.user_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          createMany: {
            args: Prisma.user_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          update: {
            args: Prisma.user_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          deleteMany: {
            args: Prisma.user_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          aggregate: {
            args: Prisma.User_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_roles>
          }
          groupBy: {
            args: Prisma.user_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<User_rolesCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      video_comments: {
        payload: Prisma.$video_commentsPayload<ExtArgs>
        fields: Prisma.video_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.video_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.video_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          findFirst: {
            args: Prisma.video_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.video_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          findMany: {
            args: Prisma.video_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>[]
          }
          create: {
            args: Prisma.video_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          createMany: {
            args: Prisma.video_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.video_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          update: {
            args: Prisma.video_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          deleteMany: {
            args: Prisma.video_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.video_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.video_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_commentsPayload>
          }
          aggregate: {
            args: Prisma.Video_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVideo_comments>
          }
          groupBy: {
            args: Prisma.video_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Video_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.video_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<Video_commentsCountAggregateOutputType> | number
          }
        }
      }
      video_types: {
        payload: Prisma.$video_typesPayload<ExtArgs>
        fields: Prisma.video_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.video_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.video_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          findFirst: {
            args: Prisma.video_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.video_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          findMany: {
            args: Prisma.video_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>[]
          }
          create: {
            args: Prisma.video_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          createMany: {
            args: Prisma.video_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.video_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          update: {
            args: Prisma.video_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          deleteMany: {
            args: Prisma.video_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.video_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.video_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$video_typesPayload>
          }
          aggregate: {
            args: Prisma.Video_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVideo_types>
          }
          groupBy: {
            args: Prisma.video_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Video_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.video_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Video_typesCountAggregateOutputType> | number
          }
        }
      }
      videos: {
        payload: Prisma.$videosPayload<ExtArgs>
        fields: Prisma.videosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.videosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.videosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          findFirst: {
            args: Prisma.videosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.videosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          findMany: {
            args: Prisma.videosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>[]
          }
          create: {
            args: Prisma.videosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          createMany: {
            args: Prisma.videosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.videosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          update: {
            args: Prisma.videosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          deleteMany: {
            args: Prisma.videosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.videosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.videosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          aggregate: {
            args: Prisma.VideosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVideos>
          }
          groupBy: {
            args: Prisma.videosGroupByArgs<ExtArgs>
            result: $Utils.Optional<VideosGroupByOutputType>[]
          }
          count: {
            args: Prisma.videosCountArgs<ExtArgs>
            result: $Utils.Optional<VideosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    forgot_password_code?: forgot_password_codeOmit
    group_members?: group_membersOmit
    groups?: groupsOmit
    likes?: likesOmit
    menu_sidebar?: menu_sidebarOmit
    messages?: messagesOmit
    permissions?: permissionsOmit
    role_permissions?: role_permissionsOmit
    roles?: rolesOmit
    subscriptions?: subscriptionsOmit
    user_chats?: user_chatsOmit
    user_roles?: user_rolesOmit
    users?: usersOmit
    video_comments?: video_commentsOmit
    video_types?: video_typesOmit
    videos?: videosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type GroupsCountOutputType
   */

  export type GroupsCountOutputType = {
    group_members: number
    messages: number
  }

  export type GroupsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    group_members?: boolean | GroupsCountOutputTypeCountGroup_membersArgs
    messages?: boolean | GroupsCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroupsCountOutputType
     */
    select?: GroupsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountGroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
  }

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }


  /**
   * Count Type PermissionsCountOutputType
   */

  export type PermissionsCountOutputType = {
    role_permissions: number
  }

  export type PermissionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | PermissionsCountOutputTypeCountRole_permissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionsCountOutputType
     */
    select?: PermissionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeCountRole_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    role_permissions: number
    user_roles: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | RolesCountOutputTypeCountRole_permissionsArgs
    user_roles?: boolean | RolesCountOutputTypeCountUser_rolesArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountRole_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountUser_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    forgot_password_code: number
    group_members: number
    likes: number
    messages_messages_sender_idTousers: number
    messages_messages_receiver_idTousers: number
    subscriptions_subscriptions_user_idTousers: number
    subscriptions_subscriptions_subscriber_idTousers: number
    user_chats_user_chats_user1_idTousers: number
    user_chats_user_chats_user2_idTousers: number
    user_roles: number
    video_comments: number
    videos: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    forgot_password_code?: boolean | UsersCountOutputTypeCountForgot_password_codeArgs
    group_members?: boolean | UsersCountOutputTypeCountGroup_membersArgs
    likes?: boolean | UsersCountOutputTypeCountLikesArgs
    messages_messages_sender_idTousers?: boolean | UsersCountOutputTypeCountMessages_messages_sender_idTousersArgs
    messages_messages_receiver_idTousers?: boolean | UsersCountOutputTypeCountMessages_messages_receiver_idTousersArgs
    subscriptions_subscriptions_user_idTousers?: boolean | UsersCountOutputTypeCountSubscriptions_subscriptions_user_idTousersArgs
    subscriptions_subscriptions_subscriber_idTousers?: boolean | UsersCountOutputTypeCountSubscriptions_subscriptions_subscriber_idTousersArgs
    user_chats_user_chats_user1_idTousers?: boolean | UsersCountOutputTypeCountUser_chats_user_chats_user1_idTousersArgs
    user_chats_user_chats_user2_idTousers?: boolean | UsersCountOutputTypeCountUser_chats_user_chats_user2_idTousersArgs
    user_roles?: boolean | UsersCountOutputTypeCountUser_rolesArgs
    video_comments?: boolean | UsersCountOutputTypeCountVideo_commentsArgs
    videos?: boolean | UsersCountOutputTypeCountVideosArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountForgot_password_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: forgot_password_codeWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountGroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMessages_messages_sender_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMessages_messages_receiver_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSubscriptions_subscriptions_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSubscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_chats_user_chats_user1_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_chatsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_chats_user_chats_user2_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_chatsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountVideo_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_commentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountVideosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
  }


  /**
   * Count Type Video_typesCountOutputType
   */

  export type Video_typesCountOutputType = {
    videos: number
  }

  export type Video_typesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    videos?: boolean | Video_typesCountOutputTypeCountVideosArgs
  }

  // Custom InputTypes
  /**
   * Video_typesCountOutputType without action
   */
  export type Video_typesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Video_typesCountOutputType
     */
    select?: Video_typesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Video_typesCountOutputType without action
   */
  export type Video_typesCountOutputTypeCountVideosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
  }


  /**
   * Count Type VideosCountOutputType
   */

  export type VideosCountOutputType = {
    likes: number
    video_comments: number
  }

  export type VideosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    likes?: boolean | VideosCountOutputTypeCountLikesArgs
    video_comments?: boolean | VideosCountOutputTypeCountVideo_commentsArgs
  }

  // Custom InputTypes
  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VideosCountOutputType
     */
    select?: VideosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
  }

  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeCountVideo_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_commentsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model forgot_password_code
   */

  export type AggregateForgot_password_code = {
    _count: Forgot_password_codeCountAggregateOutputType | null
    _avg: Forgot_password_codeAvgAggregateOutputType | null
    _sum: Forgot_password_codeSumAggregateOutputType | null
    _min: Forgot_password_codeMinAggregateOutputType | null
    _max: Forgot_password_codeMaxAggregateOutputType | null
  }

  export type Forgot_password_codeAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Forgot_password_codeSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Forgot_password_codeMinAggregateOutputType = {
    id: number | null
    forgot_code: string | null
    user_id: number | null
    expired: Date | null
  }

  export type Forgot_password_codeMaxAggregateOutputType = {
    id: number | null
    forgot_code: string | null
    user_id: number | null
    expired: Date | null
  }

  export type Forgot_password_codeCountAggregateOutputType = {
    id: number
    forgot_code: number
    user_id: number
    expired: number
    _all: number
  }


  export type Forgot_password_codeAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Forgot_password_codeSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Forgot_password_codeMinAggregateInputType = {
    id?: true
    forgot_code?: true
    user_id?: true
    expired?: true
  }

  export type Forgot_password_codeMaxAggregateInputType = {
    id?: true
    forgot_code?: true
    user_id?: true
    expired?: true
  }

  export type Forgot_password_codeCountAggregateInputType = {
    id?: true
    forgot_code?: true
    user_id?: true
    expired?: true
    _all?: true
  }

  export type Forgot_password_codeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which forgot_password_code to aggregate.
     */
    where?: forgot_password_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of forgot_password_codes to fetch.
     */
    orderBy?: forgot_password_codeOrderByWithRelationInput | forgot_password_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: forgot_password_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` forgot_password_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` forgot_password_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned forgot_password_codes
    **/
    _count?: true | Forgot_password_codeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Forgot_password_codeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Forgot_password_codeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Forgot_password_codeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Forgot_password_codeMaxAggregateInputType
  }

  export type GetForgot_password_codeAggregateType<T extends Forgot_password_codeAggregateArgs> = {
        [P in keyof T & keyof AggregateForgot_password_code]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateForgot_password_code[P]>
      : GetScalarType<T[P], AggregateForgot_password_code[P]>
  }




  export type forgot_password_codeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: forgot_password_codeWhereInput
    orderBy?: forgot_password_codeOrderByWithAggregationInput | forgot_password_codeOrderByWithAggregationInput[]
    by: Forgot_password_codeScalarFieldEnum[] | Forgot_password_codeScalarFieldEnum
    having?: forgot_password_codeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Forgot_password_codeCountAggregateInputType | true
    _avg?: Forgot_password_codeAvgAggregateInputType
    _sum?: Forgot_password_codeSumAggregateInputType
    _min?: Forgot_password_codeMinAggregateInputType
    _max?: Forgot_password_codeMaxAggregateInputType
  }

  export type Forgot_password_codeGroupByOutputType = {
    id: number
    forgot_code: string | null
    user_id: number | null
    expired: Date | null
    _count: Forgot_password_codeCountAggregateOutputType | null
    _avg: Forgot_password_codeAvgAggregateOutputType | null
    _sum: Forgot_password_codeSumAggregateOutputType | null
    _min: Forgot_password_codeMinAggregateOutputType | null
    _max: Forgot_password_codeMaxAggregateOutputType | null
  }

  type GetForgot_password_codeGroupByPayload<T extends forgot_password_codeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Forgot_password_codeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Forgot_password_codeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Forgot_password_codeGroupByOutputType[P]>
            : GetScalarType<T[P], Forgot_password_codeGroupByOutputType[P]>
        }
      >
    >


  export type forgot_password_codeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    forgot_code?: boolean
    user_id?: boolean
    expired?: boolean
    users?: boolean | forgot_password_code$usersArgs<ExtArgs>
  }, ExtArgs["result"]["forgot_password_code"]>



  export type forgot_password_codeSelectScalar = {
    id?: boolean
    forgot_code?: boolean
    user_id?: boolean
    expired?: boolean
  }

  export type forgot_password_codeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "forgot_code" | "user_id" | "expired", ExtArgs["result"]["forgot_password_code"]>
  export type forgot_password_codeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | forgot_password_code$usersArgs<ExtArgs>
  }

  export type $forgot_password_codePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "forgot_password_code"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      forgot_code: string | null
      user_id: number | null
      expired: Date | null
    }, ExtArgs["result"]["forgot_password_code"]>
    composites: {}
  }

  type forgot_password_codeGetPayload<S extends boolean | null | undefined | forgot_password_codeDefaultArgs> = $Result.GetResult<Prisma.$forgot_password_codePayload, S>

  type forgot_password_codeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<forgot_password_codeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Forgot_password_codeCountAggregateInputType | true
    }

  export interface forgot_password_codeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['forgot_password_code'], meta: { name: 'forgot_password_code' } }
    /**
     * Find zero or one Forgot_password_code that matches the filter.
     * @param {forgot_password_codeFindUniqueArgs} args - Arguments to find a Forgot_password_code
     * @example
     * // Get one Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends forgot_password_codeFindUniqueArgs>(args: SelectSubset<T, forgot_password_codeFindUniqueArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Forgot_password_code that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {forgot_password_codeFindUniqueOrThrowArgs} args - Arguments to find a Forgot_password_code
     * @example
     * // Get one Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends forgot_password_codeFindUniqueOrThrowArgs>(args: SelectSubset<T, forgot_password_codeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Forgot_password_code that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeFindFirstArgs} args - Arguments to find a Forgot_password_code
     * @example
     * // Get one Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends forgot_password_codeFindFirstArgs>(args?: SelectSubset<T, forgot_password_codeFindFirstArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Forgot_password_code that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeFindFirstOrThrowArgs} args - Arguments to find a Forgot_password_code
     * @example
     * // Get one Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends forgot_password_codeFindFirstOrThrowArgs>(args?: SelectSubset<T, forgot_password_codeFindFirstOrThrowArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Forgot_password_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Forgot_password_codes
     * const forgot_password_codes = await prisma.forgot_password_code.findMany()
     * 
     * // Get first 10 Forgot_password_codes
     * const forgot_password_codes = await prisma.forgot_password_code.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const forgot_password_codeWithIdOnly = await prisma.forgot_password_code.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends forgot_password_codeFindManyArgs>(args?: SelectSubset<T, forgot_password_codeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Forgot_password_code.
     * @param {forgot_password_codeCreateArgs} args - Arguments to create a Forgot_password_code.
     * @example
     * // Create one Forgot_password_code
     * const Forgot_password_code = await prisma.forgot_password_code.create({
     *   data: {
     *     // ... data to create a Forgot_password_code
     *   }
     * })
     * 
     */
    create<T extends forgot_password_codeCreateArgs>(args: SelectSubset<T, forgot_password_codeCreateArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Forgot_password_codes.
     * @param {forgot_password_codeCreateManyArgs} args - Arguments to create many Forgot_password_codes.
     * @example
     * // Create many Forgot_password_codes
     * const forgot_password_code = await prisma.forgot_password_code.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends forgot_password_codeCreateManyArgs>(args?: SelectSubset<T, forgot_password_codeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Forgot_password_code.
     * @param {forgot_password_codeDeleteArgs} args - Arguments to delete one Forgot_password_code.
     * @example
     * // Delete one Forgot_password_code
     * const Forgot_password_code = await prisma.forgot_password_code.delete({
     *   where: {
     *     // ... filter to delete one Forgot_password_code
     *   }
     * })
     * 
     */
    delete<T extends forgot_password_codeDeleteArgs>(args: SelectSubset<T, forgot_password_codeDeleteArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Forgot_password_code.
     * @param {forgot_password_codeUpdateArgs} args - Arguments to update one Forgot_password_code.
     * @example
     * // Update one Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends forgot_password_codeUpdateArgs>(args: SelectSubset<T, forgot_password_codeUpdateArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Forgot_password_codes.
     * @param {forgot_password_codeDeleteManyArgs} args - Arguments to filter Forgot_password_codes to delete.
     * @example
     * // Delete a few Forgot_password_codes
     * const { count } = await prisma.forgot_password_code.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends forgot_password_codeDeleteManyArgs>(args?: SelectSubset<T, forgot_password_codeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Forgot_password_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Forgot_password_codes
     * const forgot_password_code = await prisma.forgot_password_code.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends forgot_password_codeUpdateManyArgs>(args: SelectSubset<T, forgot_password_codeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Forgot_password_code.
     * @param {forgot_password_codeUpsertArgs} args - Arguments to update or create a Forgot_password_code.
     * @example
     * // Update or create a Forgot_password_code
     * const forgot_password_code = await prisma.forgot_password_code.upsert({
     *   create: {
     *     // ... data to create a Forgot_password_code
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Forgot_password_code we want to update
     *   }
     * })
     */
    upsert<T extends forgot_password_codeUpsertArgs>(args: SelectSubset<T, forgot_password_codeUpsertArgs<ExtArgs>>): Prisma__forgot_password_codeClient<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Forgot_password_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeCountArgs} args - Arguments to filter Forgot_password_codes to count.
     * @example
     * // Count the number of Forgot_password_codes
     * const count = await prisma.forgot_password_code.count({
     *   where: {
     *     // ... the filter for the Forgot_password_codes we want to count
     *   }
     * })
    **/
    count<T extends forgot_password_codeCountArgs>(
      args?: Subset<T, forgot_password_codeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Forgot_password_codeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Forgot_password_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Forgot_password_codeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Forgot_password_codeAggregateArgs>(args: Subset<T, Forgot_password_codeAggregateArgs>): Prisma.PrismaPromise<GetForgot_password_codeAggregateType<T>>

    /**
     * Group by Forgot_password_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {forgot_password_codeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends forgot_password_codeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: forgot_password_codeGroupByArgs['orderBy'] }
        : { orderBy?: forgot_password_codeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, forgot_password_codeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetForgot_password_codeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the forgot_password_code model
   */
  readonly fields: forgot_password_codeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for forgot_password_code.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__forgot_password_codeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends forgot_password_code$usersArgs<ExtArgs> = {}>(args?: Subset<T, forgot_password_code$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the forgot_password_code model
   */ 
  interface forgot_password_codeFieldRefs {
    readonly id: FieldRef<"forgot_password_code", 'Int'>
    readonly forgot_code: FieldRef<"forgot_password_code", 'String'>
    readonly user_id: FieldRef<"forgot_password_code", 'Int'>
    readonly expired: FieldRef<"forgot_password_code", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * forgot_password_code findUnique
   */
  export type forgot_password_codeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter, which forgot_password_code to fetch.
     */
    where: forgot_password_codeWhereUniqueInput
  }

  /**
   * forgot_password_code findUniqueOrThrow
   */
  export type forgot_password_codeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter, which forgot_password_code to fetch.
     */
    where: forgot_password_codeWhereUniqueInput
  }

  /**
   * forgot_password_code findFirst
   */
  export type forgot_password_codeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter, which forgot_password_code to fetch.
     */
    where?: forgot_password_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of forgot_password_codes to fetch.
     */
    orderBy?: forgot_password_codeOrderByWithRelationInput | forgot_password_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for forgot_password_codes.
     */
    cursor?: forgot_password_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` forgot_password_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` forgot_password_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of forgot_password_codes.
     */
    distinct?: Forgot_password_codeScalarFieldEnum | Forgot_password_codeScalarFieldEnum[]
  }

  /**
   * forgot_password_code findFirstOrThrow
   */
  export type forgot_password_codeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter, which forgot_password_code to fetch.
     */
    where?: forgot_password_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of forgot_password_codes to fetch.
     */
    orderBy?: forgot_password_codeOrderByWithRelationInput | forgot_password_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for forgot_password_codes.
     */
    cursor?: forgot_password_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` forgot_password_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` forgot_password_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of forgot_password_codes.
     */
    distinct?: Forgot_password_codeScalarFieldEnum | Forgot_password_codeScalarFieldEnum[]
  }

  /**
   * forgot_password_code findMany
   */
  export type forgot_password_codeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter, which forgot_password_codes to fetch.
     */
    where?: forgot_password_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of forgot_password_codes to fetch.
     */
    orderBy?: forgot_password_codeOrderByWithRelationInput | forgot_password_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing forgot_password_codes.
     */
    cursor?: forgot_password_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` forgot_password_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` forgot_password_codes.
     */
    skip?: number
    distinct?: Forgot_password_codeScalarFieldEnum | Forgot_password_codeScalarFieldEnum[]
  }

  /**
   * forgot_password_code create
   */
  export type forgot_password_codeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * The data needed to create a forgot_password_code.
     */
    data?: XOR<forgot_password_codeCreateInput, forgot_password_codeUncheckedCreateInput>
  }

  /**
   * forgot_password_code createMany
   */
  export type forgot_password_codeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many forgot_password_codes.
     */
    data: forgot_password_codeCreateManyInput | forgot_password_codeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * forgot_password_code update
   */
  export type forgot_password_codeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * The data needed to update a forgot_password_code.
     */
    data: XOR<forgot_password_codeUpdateInput, forgot_password_codeUncheckedUpdateInput>
    /**
     * Choose, which forgot_password_code to update.
     */
    where: forgot_password_codeWhereUniqueInput
  }

  /**
   * forgot_password_code updateMany
   */
  export type forgot_password_codeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update forgot_password_codes.
     */
    data: XOR<forgot_password_codeUpdateManyMutationInput, forgot_password_codeUncheckedUpdateManyInput>
    /**
     * Filter which forgot_password_codes to update
     */
    where?: forgot_password_codeWhereInput
    /**
     * Limit how many forgot_password_codes to update.
     */
    limit?: number
  }

  /**
   * forgot_password_code upsert
   */
  export type forgot_password_codeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * The filter to search for the forgot_password_code to update in case it exists.
     */
    where: forgot_password_codeWhereUniqueInput
    /**
     * In case the forgot_password_code found by the `where` argument doesn't exist, create a new forgot_password_code with this data.
     */
    create: XOR<forgot_password_codeCreateInput, forgot_password_codeUncheckedCreateInput>
    /**
     * In case the forgot_password_code was found with the provided `where` argument, update it with this data.
     */
    update: XOR<forgot_password_codeUpdateInput, forgot_password_codeUncheckedUpdateInput>
  }

  /**
   * forgot_password_code delete
   */
  export type forgot_password_codeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    /**
     * Filter which forgot_password_code to delete.
     */
    where: forgot_password_codeWhereUniqueInput
  }

  /**
   * forgot_password_code deleteMany
   */
  export type forgot_password_codeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which forgot_password_codes to delete
     */
    where?: forgot_password_codeWhereInput
    /**
     * Limit how many forgot_password_codes to delete.
     */
    limit?: number
  }

  /**
   * forgot_password_code.users
   */
  export type forgot_password_code$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * forgot_password_code without action
   */
  export type forgot_password_codeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
  }


  /**
   * Model group_members
   */

  export type AggregateGroup_members = {
    _count: Group_membersCountAggregateOutputType | null
    _avg: Group_membersAvgAggregateOutputType | null
    _sum: Group_membersSumAggregateOutputType | null
    _min: Group_membersMinAggregateOutputType | null
    _max: Group_membersMaxAggregateOutputType | null
  }

  export type Group_membersAvgAggregateOutputType = {
    group_member_id: number | null
    group_id: number | null
    user_id: number | null
  }

  export type Group_membersSumAggregateOutputType = {
    group_member_id: number | null
    group_id: number | null
    user_id: number | null
  }

  export type Group_membersMinAggregateOutputType = {
    group_member_id: number | null
    group_id: number | null
    user_id: number | null
    joined_at: Date | null
  }

  export type Group_membersMaxAggregateOutputType = {
    group_member_id: number | null
    group_id: number | null
    user_id: number | null
    joined_at: Date | null
  }

  export type Group_membersCountAggregateOutputType = {
    group_member_id: number
    group_id: number
    user_id: number
    joined_at: number
    _all: number
  }


  export type Group_membersAvgAggregateInputType = {
    group_member_id?: true
    group_id?: true
    user_id?: true
  }

  export type Group_membersSumAggregateInputType = {
    group_member_id?: true
    group_id?: true
    user_id?: true
  }

  export type Group_membersMinAggregateInputType = {
    group_member_id?: true
    group_id?: true
    user_id?: true
    joined_at?: true
  }

  export type Group_membersMaxAggregateInputType = {
    group_member_id?: true
    group_id?: true
    user_id?: true
    joined_at?: true
  }

  export type Group_membersCountAggregateInputType = {
    group_member_id?: true
    group_id?: true
    user_id?: true
    joined_at?: true
    _all?: true
  }

  export type Group_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_members to aggregate.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned group_members
    **/
    _count?: true | Group_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Group_membersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Group_membersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Group_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Group_membersMaxAggregateInputType
  }

  export type GetGroup_membersAggregateType<T extends Group_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateGroup_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroup_members[P]>
      : GetScalarType<T[P], AggregateGroup_members[P]>
  }




  export type group_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithAggregationInput | group_membersOrderByWithAggregationInput[]
    by: Group_membersScalarFieldEnum[] | Group_membersScalarFieldEnum
    having?: group_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Group_membersCountAggregateInputType | true
    _avg?: Group_membersAvgAggregateInputType
    _sum?: Group_membersSumAggregateInputType
    _min?: Group_membersMinAggregateInputType
    _max?: Group_membersMaxAggregateInputType
  }

  export type Group_membersGroupByOutputType = {
    group_member_id: number
    group_id: number
    user_id: number
    joined_at: Date | null
    _count: Group_membersCountAggregateOutputType | null
    _avg: Group_membersAvgAggregateOutputType | null
    _sum: Group_membersSumAggregateOutputType | null
    _min: Group_membersMinAggregateOutputType | null
    _max: Group_membersMaxAggregateOutputType | null
  }

  type GetGroup_membersGroupByPayload<T extends group_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Group_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Group_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Group_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Group_membersGroupByOutputType[P]>
        }
      >
    >


  export type group_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_member_id?: boolean
    group_id?: boolean
    user_id?: boolean
    joined_at?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["group_members"]>



  export type group_membersSelectScalar = {
    group_member_id?: boolean
    group_id?: boolean
    user_id?: boolean
    joined_at?: boolean
  }

  export type group_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_member_id" | "group_id" | "user_id" | "joined_at", ExtArgs["result"]["group_members"]>
  export type group_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $group_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "group_members"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      group_member_id: number
      group_id: number
      user_id: number
      joined_at: Date | null
    }, ExtArgs["result"]["group_members"]>
    composites: {}
  }

  type group_membersGetPayload<S extends boolean | null | undefined | group_membersDefaultArgs> = $Result.GetResult<Prisma.$group_membersPayload, S>

  type group_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<group_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Group_membersCountAggregateInputType | true
    }

  export interface group_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['group_members'], meta: { name: 'group_members' } }
    /**
     * Find zero or one Group_members that matches the filter.
     * @param {group_membersFindUniqueArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends group_membersFindUniqueArgs>(args: SelectSubset<T, group_membersFindUniqueArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Group_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {group_membersFindUniqueOrThrowArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends group_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, group_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindFirstArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends group_membersFindFirstArgs>(args?: SelectSubset<T, group_membersFindFirstArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Group_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindFirstOrThrowArgs} args - Arguments to find a Group_members
     * @example
     * // Get one Group_members
     * const group_members = await prisma.group_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends group_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, group_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Group_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Group_members
     * const group_members = await prisma.group_members.findMany()
     * 
     * // Get first 10 Group_members
     * const group_members = await prisma.group_members.findMany({ take: 10 })
     * 
     * // Only select the `group_member_id`
     * const group_membersWithGroup_member_idOnly = await prisma.group_members.findMany({ select: { group_member_id: true } })
     * 
     */
    findMany<T extends group_membersFindManyArgs>(args?: SelectSubset<T, group_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Group_members.
     * @param {group_membersCreateArgs} args - Arguments to create a Group_members.
     * @example
     * // Create one Group_members
     * const Group_members = await prisma.group_members.create({
     *   data: {
     *     // ... data to create a Group_members
     *   }
     * })
     * 
     */
    create<T extends group_membersCreateArgs>(args: SelectSubset<T, group_membersCreateArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Group_members.
     * @param {group_membersCreateManyArgs} args - Arguments to create many Group_members.
     * @example
     * // Create many Group_members
     * const group_members = await prisma.group_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends group_membersCreateManyArgs>(args?: SelectSubset<T, group_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Group_members.
     * @param {group_membersDeleteArgs} args - Arguments to delete one Group_members.
     * @example
     * // Delete one Group_members
     * const Group_members = await prisma.group_members.delete({
     *   where: {
     *     // ... filter to delete one Group_members
     *   }
     * })
     * 
     */
    delete<T extends group_membersDeleteArgs>(args: SelectSubset<T, group_membersDeleteArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Group_members.
     * @param {group_membersUpdateArgs} args - Arguments to update one Group_members.
     * @example
     * // Update one Group_members
     * const group_members = await prisma.group_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends group_membersUpdateArgs>(args: SelectSubset<T, group_membersUpdateArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Group_members.
     * @param {group_membersDeleteManyArgs} args - Arguments to filter Group_members to delete.
     * @example
     * // Delete a few Group_members
     * const { count } = await prisma.group_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends group_membersDeleteManyArgs>(args?: SelectSubset<T, group_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Group_members
     * const group_members = await prisma.group_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends group_membersUpdateManyArgs>(args: SelectSubset<T, group_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Group_members.
     * @param {group_membersUpsertArgs} args - Arguments to update or create a Group_members.
     * @example
     * // Update or create a Group_members
     * const group_members = await prisma.group_members.upsert({
     *   create: {
     *     // ... data to create a Group_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Group_members we want to update
     *   }
     * })
     */
    upsert<T extends group_membersUpsertArgs>(args: SelectSubset<T, group_membersUpsertArgs<ExtArgs>>): Prisma__group_membersClient<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersCountArgs} args - Arguments to filter Group_members to count.
     * @example
     * // Count the number of Group_members
     * const count = await prisma.group_members.count({
     *   where: {
     *     // ... the filter for the Group_members we want to count
     *   }
     * })
    **/
    count<T extends group_membersCountArgs>(
      args?: Subset<T, group_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Group_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Group_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Group_membersAggregateArgs>(args: Subset<T, Group_membersAggregateArgs>): Prisma.PrismaPromise<GetGroup_membersAggregateType<T>>

    /**
     * Group by Group_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {group_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends group_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: group_membersGroupByArgs['orderBy'] }
        : { orderBy?: group_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, group_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroup_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the group_members model
   */
  readonly fields: group_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for group_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__group_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the group_members model
   */ 
  interface group_membersFieldRefs {
    readonly group_member_id: FieldRef<"group_members", 'Int'>
    readonly group_id: FieldRef<"group_members", 'Int'>
    readonly user_id: FieldRef<"group_members", 'Int'>
    readonly joined_at: FieldRef<"group_members", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * group_members findUnique
   */
  export type group_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members findUniqueOrThrow
   */
  export type group_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members findFirst
   */
  export type group_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_members.
     */
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members findFirstOrThrow
   */
  export type group_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of group_members.
     */
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members findMany
   */
  export type group_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter, which group_members to fetch.
     */
    where?: group_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of group_members to fetch.
     */
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing group_members.
     */
    cursor?: group_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` group_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` group_members.
     */
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * group_members create
   */
  export type group_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a group_members.
     */
    data: XOR<group_membersCreateInput, group_membersUncheckedCreateInput>
  }

  /**
   * group_members createMany
   */
  export type group_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many group_members.
     */
    data: group_membersCreateManyInput | group_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * group_members update
   */
  export type group_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a group_members.
     */
    data: XOR<group_membersUpdateInput, group_membersUncheckedUpdateInput>
    /**
     * Choose, which group_members to update.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members updateMany
   */
  export type group_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update group_members.
     */
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyInput>
    /**
     * Filter which group_members to update
     */
    where?: group_membersWhereInput
    /**
     * Limit how many group_members to update.
     */
    limit?: number
  }

  /**
   * group_members upsert
   */
  export type group_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the group_members to update in case it exists.
     */
    where: group_membersWhereUniqueInput
    /**
     * In case the group_members found by the `where` argument doesn't exist, create a new group_members with this data.
     */
    create: XOR<group_membersCreateInput, group_membersUncheckedCreateInput>
    /**
     * In case the group_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<group_membersUpdateInput, group_membersUncheckedUpdateInput>
  }

  /**
   * group_members delete
   */
  export type group_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    /**
     * Filter which group_members to delete.
     */
    where: group_membersWhereUniqueInput
  }

  /**
   * group_members deleteMany
   */
  export type group_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which group_members to delete
     */
    where?: group_membersWhereInput
    /**
     * Limit how many group_members to delete.
     */
    limit?: number
  }

  /**
   * group_members without action
   */
  export type group_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
  }


  /**
   * Model groups
   */

  export type AggregateGroups = {
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  export type GroupsAvgAggregateOutputType = {
    group_id: number | null
  }

  export type GroupsSumAggregateOutputType = {
    group_id: number | null
  }

  export type GroupsMinAggregateOutputType = {
    group_id: number | null
    group_name: string | null
    created_at: Date | null
  }

  export type GroupsMaxAggregateOutputType = {
    group_id: number | null
    group_name: string | null
    created_at: Date | null
  }

  export type GroupsCountAggregateOutputType = {
    group_id: number
    group_name: number
    created_at: number
    _all: number
  }


  export type GroupsAvgAggregateInputType = {
    group_id?: true
  }

  export type GroupsSumAggregateInputType = {
    group_id?: true
  }

  export type GroupsMinAggregateInputType = {
    group_id?: true
    group_name?: true
    created_at?: true
  }

  export type GroupsMaxAggregateInputType = {
    group_id?: true
    group_name?: true
    created_at?: true
  }

  export type GroupsCountAggregateInputType = {
    group_id?: true
    group_name?: true
    created_at?: true
    _all?: true
  }

  export type GroupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to aggregate.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned groups
    **/
    _count?: true | GroupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroupsMaxAggregateInputType
  }

  export type GetGroupsAggregateType<T extends GroupsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroups[P]>
      : GetScalarType<T[P], AggregateGroups[P]>
  }




  export type groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groupsWhereInput
    orderBy?: groupsOrderByWithAggregationInput | groupsOrderByWithAggregationInput[]
    by: GroupsScalarFieldEnum[] | GroupsScalarFieldEnum
    having?: groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroupsCountAggregateInputType | true
    _avg?: GroupsAvgAggregateInputType
    _sum?: GroupsSumAggregateInputType
    _min?: GroupsMinAggregateInputType
    _max?: GroupsMaxAggregateInputType
  }

  export type GroupsGroupByOutputType = {
    group_id: number
    group_name: string
    created_at: Date | null
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  type GetGroupsGroupByPayload<T extends groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroupsGroupByOutputType[P]>
            : GetScalarType<T[P], GroupsGroupByOutputType[P]>
        }
      >
    >


  export type groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    group_name?: boolean
    created_at?: boolean
    group_members?: boolean | groups$group_membersArgs<ExtArgs>
    messages?: boolean | groups$messagesArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups"]>



  export type groupsSelectScalar = {
    group_id?: boolean
    group_name?: boolean
    created_at?: boolean
  }

  export type groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_id" | "group_name" | "created_at", ExtArgs["result"]["groups"]>
  export type groupsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    group_members?: boolean | groups$group_membersArgs<ExtArgs>
    messages?: boolean | groups$messagesArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "groups"
    objects: {
      group_members: Prisma.$group_membersPayload<ExtArgs>[]
      messages: Prisma.$messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      group_id: number
      group_name: string
      created_at: Date | null
    }, ExtArgs["result"]["groups"]>
    composites: {}
  }

  type groupsGetPayload<S extends boolean | null | undefined | groupsDefaultArgs> = $Result.GetResult<Prisma.$groupsPayload, S>

  type groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GroupsCountAggregateInputType | true
    }

  export interface groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['groups'], meta: { name: 'groups' } }
    /**
     * Find zero or one Groups that matches the filter.
     * @param {groupsFindUniqueArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends groupsFindUniqueArgs>(args: SelectSubset<T, groupsFindUniqueArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {groupsFindUniqueOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends groupsFindFirstArgs>(args?: SelectSubset<T, groupsFindFirstArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Groups
     * const groups = await prisma.groups.findMany()
     * 
     * // Get first 10 Groups
     * const groups = await prisma.groups.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const groupsWithGroup_idOnly = await prisma.groups.findMany({ select: { group_id: true } })
     * 
     */
    findMany<T extends groupsFindManyArgs>(args?: SelectSubset<T, groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Groups.
     * @param {groupsCreateArgs} args - Arguments to create a Groups.
     * @example
     * // Create one Groups
     * const Groups = await prisma.groups.create({
     *   data: {
     *     // ... data to create a Groups
     *   }
     * })
     * 
     */
    create<T extends groupsCreateArgs>(args: SelectSubset<T, groupsCreateArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Groups.
     * @param {groupsCreateManyArgs} args - Arguments to create many Groups.
     * @example
     * // Create many Groups
     * const groups = await prisma.groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends groupsCreateManyArgs>(args?: SelectSubset<T, groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Groups.
     * @param {groupsDeleteArgs} args - Arguments to delete one Groups.
     * @example
     * // Delete one Groups
     * const Groups = await prisma.groups.delete({
     *   where: {
     *     // ... filter to delete one Groups
     *   }
     * })
     * 
     */
    delete<T extends groupsDeleteArgs>(args: SelectSubset<T, groupsDeleteArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Groups.
     * @param {groupsUpdateArgs} args - Arguments to update one Groups.
     * @example
     * // Update one Groups
     * const groups = await prisma.groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends groupsUpdateArgs>(args: SelectSubset<T, groupsUpdateArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Groups.
     * @param {groupsDeleteManyArgs} args - Arguments to filter Groups to delete.
     * @example
     * // Delete a few Groups
     * const { count } = await prisma.groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends groupsDeleteManyArgs>(args?: SelectSubset<T, groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Groups
     * const groups = await prisma.groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends groupsUpdateManyArgs>(args: SelectSubset<T, groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Groups.
     * @param {groupsUpsertArgs} args - Arguments to update or create a Groups.
     * @example
     * // Update or create a Groups
     * const groups = await prisma.groups.upsert({
     *   create: {
     *     // ... data to create a Groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Groups we want to update
     *   }
     * })
     */
    upsert<T extends groupsUpsertArgs>(args: SelectSubset<T, groupsUpsertArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsCountArgs} args - Arguments to filter Groups to count.
     * @example
     * // Count the number of Groups
     * const count = await prisma.groups.count({
     *   where: {
     *     // ... the filter for the Groups we want to count
     *   }
     * })
    **/
    count<T extends groupsCountArgs>(
      args?: Subset<T, groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroupsAggregateArgs>(args: Subset<T, GroupsAggregateArgs>): Prisma.PrismaPromise<GetGroupsAggregateType<T>>

    /**
     * Group by Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: groupsGroupByArgs['orderBy'] }
        : { orderBy?: groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the groups model
   */
  readonly fields: groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    group_members<T extends groups$group_membersArgs<ExtArgs> = {}>(args?: Subset<T, groups$group_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends groups$messagesArgs<ExtArgs> = {}>(args?: Subset<T, groups$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the groups model
   */ 
  interface groupsFieldRefs {
    readonly group_id: FieldRef<"groups", 'Int'>
    readonly group_name: FieldRef<"groups", 'String'>
    readonly created_at: FieldRef<"groups", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * groups findUnique
   */
  export type groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups findUniqueOrThrow
   */
  export type groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups findFirst
   */
  export type groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups findFirstOrThrow
   */
  export type groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups findMany
   */
  export type groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }

  /**
   * groups create
   */
  export type groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to create a groups.
     */
    data: XOR<groupsCreateInput, groupsUncheckedCreateInput>
  }

  /**
   * groups createMany
   */
  export type groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many groups.
     */
    data: groupsCreateManyInput | groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * groups update
   */
  export type groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to update a groups.
     */
    data: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
    /**
     * Choose, which groups to update.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups updateMany
   */
  export type groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update groups.
     */
    data: XOR<groupsUpdateManyMutationInput, groupsUncheckedUpdateManyInput>
    /**
     * Filter which groups to update
     */
    where?: groupsWhereInput
    /**
     * Limit how many groups to update.
     */
    limit?: number
  }

  /**
   * groups upsert
   */
  export type groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The filter to search for the groups to update in case it exists.
     */
    where: groupsWhereUniqueInput
    /**
     * In case the groups found by the `where` argument doesn't exist, create a new groups with this data.
     */
    create: XOR<groupsCreateInput, groupsUncheckedCreateInput>
    /**
     * In case the groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
  }

  /**
   * groups delete
   */
  export type groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter which groups to delete.
     */
    where: groupsWhereUniqueInput
  }

  /**
   * groups deleteMany
   */
  export type groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to delete
     */
    where?: groupsWhereInput
    /**
     * Limit how many groups to delete.
     */
    limit?: number
  }

  /**
   * groups.group_members
   */
  export type groups$group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    cursor?: group_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * groups.messages
   */
  export type groups$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * groups without action
   */
  export type groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
  }


  /**
   * Model likes
   */

  export type AggregateLikes = {
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  export type LikesAvgAggregateOutputType = {
    like_id: number | null
    user_id: number | null
    video_id: number | null
  }

  export type LikesSumAggregateOutputType = {
    like_id: number | null
    user_id: number | null
    video_id: number | null
  }

  export type LikesMinAggregateOutputType = {
    like_id: number | null
    user_id: number | null
    video_id: number | null
    type: $Enums.likes_type | null
    created_at: Date | null
  }

  export type LikesMaxAggregateOutputType = {
    like_id: number | null
    user_id: number | null
    video_id: number | null
    type: $Enums.likes_type | null
    created_at: Date | null
  }

  export type LikesCountAggregateOutputType = {
    like_id: number
    user_id: number
    video_id: number
    type: number
    created_at: number
    _all: number
  }


  export type LikesAvgAggregateInputType = {
    like_id?: true
    user_id?: true
    video_id?: true
  }

  export type LikesSumAggregateInputType = {
    like_id?: true
    user_id?: true
    video_id?: true
  }

  export type LikesMinAggregateInputType = {
    like_id?: true
    user_id?: true
    video_id?: true
    type?: true
    created_at?: true
  }

  export type LikesMaxAggregateInputType = {
    like_id?: true
    user_id?: true
    video_id?: true
    type?: true
    created_at?: true
  }

  export type LikesCountAggregateInputType = {
    like_id?: true
    user_id?: true
    video_id?: true
    type?: true
    created_at?: true
    _all?: true
  }

  export type LikesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which likes to aggregate.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned likes
    **/
    _count?: true | LikesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LikesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LikesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikesMaxAggregateInputType
  }

  export type GetLikesAggregateType<T extends LikesAggregateArgs> = {
        [P in keyof T & keyof AggregateLikes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLikes[P]>
      : GetScalarType<T[P], AggregateLikes[P]>
  }




  export type likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
    orderBy?: likesOrderByWithAggregationInput | likesOrderByWithAggregationInput[]
    by: LikesScalarFieldEnum[] | LikesScalarFieldEnum
    having?: likesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikesCountAggregateInputType | true
    _avg?: LikesAvgAggregateInputType
    _sum?: LikesSumAggregateInputType
    _min?: LikesMinAggregateInputType
    _max?: LikesMaxAggregateInputType
  }

  export type LikesGroupByOutputType = {
    like_id: number
    user_id: number
    video_id: number | null
    type: $Enums.likes_type
    created_at: Date | null
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  type GetLikesGroupByPayload<T extends likesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikesGroupByOutputType[P]>
            : GetScalarType<T[P], LikesGroupByOutputType[P]>
        }
      >
    >


  export type likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    like_id?: boolean
    user_id?: boolean
    video_id?: boolean
    type?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    videos?: boolean | likes$videosArgs<ExtArgs>
  }, ExtArgs["result"]["likes"]>



  export type likesSelectScalar = {
    like_id?: boolean
    user_id?: boolean
    video_id?: boolean
    type?: boolean
    created_at?: boolean
  }

  export type likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"like_id" | "user_id" | "video_id" | "type" | "created_at", ExtArgs["result"]["likes"]>
  export type likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    videos?: boolean | likes$videosArgs<ExtArgs>
  }

  export type $likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "likes"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      videos: Prisma.$videosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      like_id: number
      user_id: number
      video_id: number | null
      type: $Enums.likes_type
      created_at: Date | null
    }, ExtArgs["result"]["likes"]>
    composites: {}
  }

  type likesGetPayload<S extends boolean | null | undefined | likesDefaultArgs> = $Result.GetResult<Prisma.$likesPayload, S>

  type likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LikesCountAggregateInputType | true
    }

  export interface likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['likes'], meta: { name: 'likes' } }
    /**
     * Find zero or one Likes that matches the filter.
     * @param {likesFindUniqueArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends likesFindUniqueArgs>(args: SelectSubset<T, likesFindUniqueArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Likes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {likesFindUniqueOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends likesFindUniqueOrThrowArgs>(args: SelectSubset<T, likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindFirstArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends likesFindFirstArgs>(args?: SelectSubset<T, likesFindFirstArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Likes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindFirstOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends likesFindFirstOrThrowArgs>(args?: SelectSubset<T, likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.likes.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.likes.findMany({ take: 10 })
     * 
     * // Only select the `like_id`
     * const likesWithLike_idOnly = await prisma.likes.findMany({ select: { like_id: true } })
     * 
     */
    findMany<T extends likesFindManyArgs>(args?: SelectSubset<T, likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Likes.
     * @param {likesCreateArgs} args - Arguments to create a Likes.
     * @example
     * // Create one Likes
     * const Likes = await prisma.likes.create({
     *   data: {
     *     // ... data to create a Likes
     *   }
     * })
     * 
     */
    create<T extends likesCreateArgs>(args: SelectSubset<T, likesCreateArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Likes.
     * @param {likesCreateManyArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const likes = await prisma.likes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends likesCreateManyArgs>(args?: SelectSubset<T, likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Likes.
     * @param {likesDeleteArgs} args - Arguments to delete one Likes.
     * @example
     * // Delete one Likes
     * const Likes = await prisma.likes.delete({
     *   where: {
     *     // ... filter to delete one Likes
     *   }
     * })
     * 
     */
    delete<T extends likesDeleteArgs>(args: SelectSubset<T, likesDeleteArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Likes.
     * @param {likesUpdateArgs} args - Arguments to update one Likes.
     * @example
     * // Update one Likes
     * const likes = await prisma.likes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends likesUpdateArgs>(args: SelectSubset<T, likesUpdateArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Likes.
     * @param {likesDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.likes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends likesDeleteManyArgs>(args?: SelectSubset<T, likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const likes = await prisma.likes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends likesUpdateManyArgs>(args: SelectSubset<T, likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Likes.
     * @param {likesUpsertArgs} args - Arguments to update or create a Likes.
     * @example
     * // Update or create a Likes
     * const likes = await prisma.likes.upsert({
     *   create: {
     *     // ... data to create a Likes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Likes we want to update
     *   }
     * })
     */
    upsert<T extends likesUpsertArgs>(args: SelectSubset<T, likesUpsertArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.likes.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends likesCountArgs>(
      args?: Subset<T, likesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikesAggregateArgs>(args: Subset<T, LikesAggregateArgs>): Prisma.PrismaPromise<GetLikesAggregateType<T>>

    /**
     * Group by Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends likesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: likesGroupByArgs['orderBy'] }
        : { orderBy?: likesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the likes model
   */
  readonly fields: likesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for likes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    videos<T extends likes$videosArgs<ExtArgs> = {}>(args?: Subset<T, likes$videosArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the likes model
   */ 
  interface likesFieldRefs {
    readonly like_id: FieldRef<"likes", 'Int'>
    readonly user_id: FieldRef<"likes", 'Int'>
    readonly video_id: FieldRef<"likes", 'Int'>
    readonly type: FieldRef<"likes", 'likes_type'>
    readonly created_at: FieldRef<"likes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * likes findUnique
   */
  export type likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes findUniqueOrThrow
   */
  export type likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes findFirst
   */
  export type likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes findFirstOrThrow
   */
  export type likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes findMany
   */
  export type likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes create
   */
  export type likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The data needed to create a likes.
     */
    data: XOR<likesCreateInput, likesUncheckedCreateInput>
  }

  /**
   * likes createMany
   */
  export type likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many likes.
     */
    data: likesCreateManyInput | likesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * likes update
   */
  export type likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The data needed to update a likes.
     */
    data: XOR<likesUpdateInput, likesUncheckedUpdateInput>
    /**
     * Choose, which likes to update.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes updateMany
   */
  export type likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update likes.
     */
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyInput>
    /**
     * Filter which likes to update
     */
    where?: likesWhereInput
    /**
     * Limit how many likes to update.
     */
    limit?: number
  }

  /**
   * likes upsert
   */
  export type likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The filter to search for the likes to update in case it exists.
     */
    where: likesWhereUniqueInput
    /**
     * In case the likes found by the `where` argument doesn't exist, create a new likes with this data.
     */
    create: XOR<likesCreateInput, likesUncheckedCreateInput>
    /**
     * In case the likes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<likesUpdateInput, likesUncheckedUpdateInput>
  }

  /**
   * likes delete
   */
  export type likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter which likes to delete.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes deleteMany
   */
  export type likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which likes to delete
     */
    where?: likesWhereInput
    /**
     * Limit how many likes to delete.
     */
    limit?: number
  }

  /**
   * likes.videos
   */
  export type likes$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
  }

  /**
   * likes without action
   */
  export type likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
  }


  /**
   * Model menu_sidebar
   */

  export type AggregateMenu_sidebar = {
    _count: Menu_sidebarCountAggregateOutputType | null
    _avg: Menu_sidebarAvgAggregateOutputType | null
    _sum: Menu_sidebarSumAggregateOutputType | null
    _min: Menu_sidebarMinAggregateOutputType | null
    _max: Menu_sidebarMaxAggregateOutputType | null
  }

  export type Menu_sidebarAvgAggregateOutputType = {
    id: number | null
  }

  export type Menu_sidebarSumAggregateOutputType = {
    id: number | null
  }

  export type Menu_sidebarMinAggregateOutputType = {
    id: number | null
    item_name: string | null
    icon: string | null
    created_at: Date | null
  }

  export type Menu_sidebarMaxAggregateOutputType = {
    id: number | null
    item_name: string | null
    icon: string | null
    created_at: Date | null
  }

  export type Menu_sidebarCountAggregateOutputType = {
    id: number
    item_name: number
    icon: number
    created_at: number
    _all: number
  }


  export type Menu_sidebarAvgAggregateInputType = {
    id?: true
  }

  export type Menu_sidebarSumAggregateInputType = {
    id?: true
  }

  export type Menu_sidebarMinAggregateInputType = {
    id?: true
    item_name?: true
    icon?: true
    created_at?: true
  }

  export type Menu_sidebarMaxAggregateInputType = {
    id?: true
    item_name?: true
    icon?: true
    created_at?: true
  }

  export type Menu_sidebarCountAggregateInputType = {
    id?: true
    item_name?: true
    icon?: true
    created_at?: true
    _all?: true
  }

  export type Menu_sidebarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menu_sidebar to aggregate.
     */
    where?: menu_sidebarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_sidebars to fetch.
     */
    orderBy?: menu_sidebarOrderByWithRelationInput | menu_sidebarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: menu_sidebarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_sidebars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_sidebars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned menu_sidebars
    **/
    _count?: true | Menu_sidebarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Menu_sidebarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Menu_sidebarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Menu_sidebarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Menu_sidebarMaxAggregateInputType
  }

  export type GetMenu_sidebarAggregateType<T extends Menu_sidebarAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu_sidebar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu_sidebar[P]>
      : GetScalarType<T[P], AggregateMenu_sidebar[P]>
  }




  export type menu_sidebarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menu_sidebarWhereInput
    orderBy?: menu_sidebarOrderByWithAggregationInput | menu_sidebarOrderByWithAggregationInput[]
    by: Menu_sidebarScalarFieldEnum[] | Menu_sidebarScalarFieldEnum
    having?: menu_sidebarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Menu_sidebarCountAggregateInputType | true
    _avg?: Menu_sidebarAvgAggregateInputType
    _sum?: Menu_sidebarSumAggregateInputType
    _min?: Menu_sidebarMinAggregateInputType
    _max?: Menu_sidebarMaxAggregateInputType
  }

  export type Menu_sidebarGroupByOutputType = {
    id: number
    item_name: string | null
    icon: string | null
    created_at: Date | null
    _count: Menu_sidebarCountAggregateOutputType | null
    _avg: Menu_sidebarAvgAggregateOutputType | null
    _sum: Menu_sidebarSumAggregateOutputType | null
    _min: Menu_sidebarMinAggregateOutputType | null
    _max: Menu_sidebarMaxAggregateOutputType | null
  }

  type GetMenu_sidebarGroupByPayload<T extends menu_sidebarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Menu_sidebarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Menu_sidebarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Menu_sidebarGroupByOutputType[P]>
            : GetScalarType<T[P], Menu_sidebarGroupByOutputType[P]>
        }
      >
    >


  export type menu_sidebarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    item_name?: boolean
    icon?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["menu_sidebar"]>



  export type menu_sidebarSelectScalar = {
    id?: boolean
    item_name?: boolean
    icon?: boolean
    created_at?: boolean
  }

  export type menu_sidebarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "item_name" | "icon" | "created_at", ExtArgs["result"]["menu_sidebar"]>

  export type $menu_sidebarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "menu_sidebar"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      item_name: string | null
      icon: string | null
      created_at: Date | null
    }, ExtArgs["result"]["menu_sidebar"]>
    composites: {}
  }

  type menu_sidebarGetPayload<S extends boolean | null | undefined | menu_sidebarDefaultArgs> = $Result.GetResult<Prisma.$menu_sidebarPayload, S>

  type menu_sidebarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<menu_sidebarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Menu_sidebarCountAggregateInputType | true
    }

  export interface menu_sidebarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['menu_sidebar'], meta: { name: 'menu_sidebar' } }
    /**
     * Find zero or one Menu_sidebar that matches the filter.
     * @param {menu_sidebarFindUniqueArgs} args - Arguments to find a Menu_sidebar
     * @example
     * // Get one Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends menu_sidebarFindUniqueArgs>(args: SelectSubset<T, menu_sidebarFindUniqueArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Menu_sidebar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {menu_sidebarFindUniqueOrThrowArgs} args - Arguments to find a Menu_sidebar
     * @example
     * // Get one Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends menu_sidebarFindUniqueOrThrowArgs>(args: SelectSubset<T, menu_sidebarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu_sidebar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarFindFirstArgs} args - Arguments to find a Menu_sidebar
     * @example
     * // Get one Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends menu_sidebarFindFirstArgs>(args?: SelectSubset<T, menu_sidebarFindFirstArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu_sidebar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarFindFirstOrThrowArgs} args - Arguments to find a Menu_sidebar
     * @example
     * // Get one Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends menu_sidebarFindFirstOrThrowArgs>(args?: SelectSubset<T, menu_sidebarFindFirstOrThrowArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Menu_sidebars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menu_sidebars
     * const menu_sidebars = await prisma.menu_sidebar.findMany()
     * 
     * // Get first 10 Menu_sidebars
     * const menu_sidebars = await prisma.menu_sidebar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menu_sidebarWithIdOnly = await prisma.menu_sidebar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends menu_sidebarFindManyArgs>(args?: SelectSubset<T, menu_sidebarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Menu_sidebar.
     * @param {menu_sidebarCreateArgs} args - Arguments to create a Menu_sidebar.
     * @example
     * // Create one Menu_sidebar
     * const Menu_sidebar = await prisma.menu_sidebar.create({
     *   data: {
     *     // ... data to create a Menu_sidebar
     *   }
     * })
     * 
     */
    create<T extends menu_sidebarCreateArgs>(args: SelectSubset<T, menu_sidebarCreateArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Menu_sidebars.
     * @param {menu_sidebarCreateManyArgs} args - Arguments to create many Menu_sidebars.
     * @example
     * // Create many Menu_sidebars
     * const menu_sidebar = await prisma.menu_sidebar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends menu_sidebarCreateManyArgs>(args?: SelectSubset<T, menu_sidebarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Menu_sidebar.
     * @param {menu_sidebarDeleteArgs} args - Arguments to delete one Menu_sidebar.
     * @example
     * // Delete one Menu_sidebar
     * const Menu_sidebar = await prisma.menu_sidebar.delete({
     *   where: {
     *     // ... filter to delete one Menu_sidebar
     *   }
     * })
     * 
     */
    delete<T extends menu_sidebarDeleteArgs>(args: SelectSubset<T, menu_sidebarDeleteArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Menu_sidebar.
     * @param {menu_sidebarUpdateArgs} args - Arguments to update one Menu_sidebar.
     * @example
     * // Update one Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends menu_sidebarUpdateArgs>(args: SelectSubset<T, menu_sidebarUpdateArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Menu_sidebars.
     * @param {menu_sidebarDeleteManyArgs} args - Arguments to filter Menu_sidebars to delete.
     * @example
     * // Delete a few Menu_sidebars
     * const { count } = await prisma.menu_sidebar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends menu_sidebarDeleteManyArgs>(args?: SelectSubset<T, menu_sidebarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menu_sidebars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menu_sidebars
     * const menu_sidebar = await prisma.menu_sidebar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends menu_sidebarUpdateManyArgs>(args: SelectSubset<T, menu_sidebarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Menu_sidebar.
     * @param {menu_sidebarUpsertArgs} args - Arguments to update or create a Menu_sidebar.
     * @example
     * // Update or create a Menu_sidebar
     * const menu_sidebar = await prisma.menu_sidebar.upsert({
     *   create: {
     *     // ... data to create a Menu_sidebar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu_sidebar we want to update
     *   }
     * })
     */
    upsert<T extends menu_sidebarUpsertArgs>(args: SelectSubset<T, menu_sidebarUpsertArgs<ExtArgs>>): Prisma__menu_sidebarClient<$Result.GetResult<Prisma.$menu_sidebarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Menu_sidebars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarCountArgs} args - Arguments to filter Menu_sidebars to count.
     * @example
     * // Count the number of Menu_sidebars
     * const count = await prisma.menu_sidebar.count({
     *   where: {
     *     // ... the filter for the Menu_sidebars we want to count
     *   }
     * })
    **/
    count<T extends menu_sidebarCountArgs>(
      args?: Subset<T, menu_sidebarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Menu_sidebarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu_sidebar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Menu_sidebarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Menu_sidebarAggregateArgs>(args: Subset<T, Menu_sidebarAggregateArgs>): Prisma.PrismaPromise<GetMenu_sidebarAggregateType<T>>

    /**
     * Group by Menu_sidebar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_sidebarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends menu_sidebarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: menu_sidebarGroupByArgs['orderBy'] }
        : { orderBy?: menu_sidebarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, menu_sidebarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenu_sidebarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the menu_sidebar model
   */
  readonly fields: menu_sidebarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for menu_sidebar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__menu_sidebarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the menu_sidebar model
   */ 
  interface menu_sidebarFieldRefs {
    readonly id: FieldRef<"menu_sidebar", 'Int'>
    readonly item_name: FieldRef<"menu_sidebar", 'String'>
    readonly icon: FieldRef<"menu_sidebar", 'String'>
    readonly created_at: FieldRef<"menu_sidebar", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * menu_sidebar findUnique
   */
  export type menu_sidebarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter, which menu_sidebar to fetch.
     */
    where: menu_sidebarWhereUniqueInput
  }

  /**
   * menu_sidebar findUniqueOrThrow
   */
  export type menu_sidebarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter, which menu_sidebar to fetch.
     */
    where: menu_sidebarWhereUniqueInput
  }

  /**
   * menu_sidebar findFirst
   */
  export type menu_sidebarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter, which menu_sidebar to fetch.
     */
    where?: menu_sidebarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_sidebars to fetch.
     */
    orderBy?: menu_sidebarOrderByWithRelationInput | menu_sidebarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menu_sidebars.
     */
    cursor?: menu_sidebarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_sidebars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_sidebars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menu_sidebars.
     */
    distinct?: Menu_sidebarScalarFieldEnum | Menu_sidebarScalarFieldEnum[]
  }

  /**
   * menu_sidebar findFirstOrThrow
   */
  export type menu_sidebarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter, which menu_sidebar to fetch.
     */
    where?: menu_sidebarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_sidebars to fetch.
     */
    orderBy?: menu_sidebarOrderByWithRelationInput | menu_sidebarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menu_sidebars.
     */
    cursor?: menu_sidebarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_sidebars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_sidebars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menu_sidebars.
     */
    distinct?: Menu_sidebarScalarFieldEnum | Menu_sidebarScalarFieldEnum[]
  }

  /**
   * menu_sidebar findMany
   */
  export type menu_sidebarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter, which menu_sidebars to fetch.
     */
    where?: menu_sidebarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_sidebars to fetch.
     */
    orderBy?: menu_sidebarOrderByWithRelationInput | menu_sidebarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing menu_sidebars.
     */
    cursor?: menu_sidebarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_sidebars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_sidebars.
     */
    skip?: number
    distinct?: Menu_sidebarScalarFieldEnum | Menu_sidebarScalarFieldEnum[]
  }

  /**
   * menu_sidebar create
   */
  export type menu_sidebarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * The data needed to create a menu_sidebar.
     */
    data?: XOR<menu_sidebarCreateInput, menu_sidebarUncheckedCreateInput>
  }

  /**
   * menu_sidebar createMany
   */
  export type menu_sidebarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many menu_sidebars.
     */
    data: menu_sidebarCreateManyInput | menu_sidebarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * menu_sidebar update
   */
  export type menu_sidebarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * The data needed to update a menu_sidebar.
     */
    data: XOR<menu_sidebarUpdateInput, menu_sidebarUncheckedUpdateInput>
    /**
     * Choose, which menu_sidebar to update.
     */
    where: menu_sidebarWhereUniqueInput
  }

  /**
   * menu_sidebar updateMany
   */
  export type menu_sidebarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update menu_sidebars.
     */
    data: XOR<menu_sidebarUpdateManyMutationInput, menu_sidebarUncheckedUpdateManyInput>
    /**
     * Filter which menu_sidebars to update
     */
    where?: menu_sidebarWhereInput
    /**
     * Limit how many menu_sidebars to update.
     */
    limit?: number
  }

  /**
   * menu_sidebar upsert
   */
  export type menu_sidebarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * The filter to search for the menu_sidebar to update in case it exists.
     */
    where: menu_sidebarWhereUniqueInput
    /**
     * In case the menu_sidebar found by the `where` argument doesn't exist, create a new menu_sidebar with this data.
     */
    create: XOR<menu_sidebarCreateInput, menu_sidebarUncheckedCreateInput>
    /**
     * In case the menu_sidebar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<menu_sidebarUpdateInput, menu_sidebarUncheckedUpdateInput>
  }

  /**
   * menu_sidebar delete
   */
  export type menu_sidebarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
    /**
     * Filter which menu_sidebar to delete.
     */
    where: menu_sidebarWhereUniqueInput
  }

  /**
   * menu_sidebar deleteMany
   */
  export type menu_sidebarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menu_sidebars to delete
     */
    where?: menu_sidebarWhereInput
    /**
     * Limit how many menu_sidebars to delete.
     */
    limit?: number
  }

  /**
   * menu_sidebar without action
   */
  export type menu_sidebarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_sidebar
     */
    select?: menu_sidebarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_sidebar
     */
    omit?: menu_sidebarOmit<ExtArgs> | null
  }


  /**
   * Model messages
   */

  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesAvgAggregateOutputType = {
    message_id: number | null
    sender_id: number | null
    receiver_id: number | null
    group_id: number | null
  }

  export type MessagesSumAggregateOutputType = {
    message_id: number | null
    sender_id: number | null
    receiver_id: number | null
    group_id: number | null
  }

  export type MessagesMinAggregateOutputType = {
    message_id: number | null
    sender_id: number | null
    receiver_id: number | null
    group_id: number | null
    message_text: string | null
    created_at: Date | null
  }

  export type MessagesMaxAggregateOutputType = {
    message_id: number | null
    sender_id: number | null
    receiver_id: number | null
    group_id: number | null
    message_text: string | null
    created_at: Date | null
  }

  export type MessagesCountAggregateOutputType = {
    message_id: number
    sender_id: number
    receiver_id: number
    group_id: number
    message_text: number
    created_at: number
    _all: number
  }


  export type MessagesAvgAggregateInputType = {
    message_id?: true
    sender_id?: true
    receiver_id?: true
    group_id?: true
  }

  export type MessagesSumAggregateInputType = {
    message_id?: true
    sender_id?: true
    receiver_id?: true
    group_id?: true
  }

  export type MessagesMinAggregateInputType = {
    message_id?: true
    sender_id?: true
    receiver_id?: true
    group_id?: true
    message_text?: true
    created_at?: true
  }

  export type MessagesMaxAggregateInputType = {
    message_id?: true
    sender_id?: true
    receiver_id?: true
    group_id?: true
    message_text?: true
    created_at?: true
  }

  export type MessagesCountAggregateInputType = {
    message_id?: true
    sender_id?: true
    receiver_id?: true
    group_id?: true
    message_text?: true
    created_at?: true
    _all?: true
  }

  export type MessagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to aggregate.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithAggregationInput | messagesOrderByWithAggregationInput[]
    by: MessagesScalarFieldEnum[] | MessagesScalarFieldEnum
    having?: messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _avg?: MessagesAvgAggregateInputType
    _sum?: MessagesSumAggregateInputType
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }

  export type MessagesGroupByOutputType = {
    message_id: number
    sender_id: number
    receiver_id: number | null
    group_id: number | null
    message_text: string
    created_at: Date | null
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    message_id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    group_id?: boolean
    message_text?: boolean
    created_at?: boolean
    users_messages_sender_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_messages_receiver_idTousers?: boolean | messages$users_messages_receiver_idTousersArgs<ExtArgs>
    groups?: boolean | messages$groupsArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>



  export type messagesSelectScalar = {
    message_id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    group_id?: boolean
    message_text?: boolean
    created_at?: boolean
  }

  export type messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"message_id" | "sender_id" | "receiver_id" | "group_id" | "message_text" | "created_at", ExtArgs["result"]["messages"]>
  export type messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_messages_sender_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_messages_receiver_idTousers?: boolean | messages$users_messages_receiver_idTousersArgs<ExtArgs>
    groups?: boolean | messages$groupsArgs<ExtArgs>
  }

  export type $messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "messages"
    objects: {
      users_messages_sender_idTousers: Prisma.$usersPayload<ExtArgs>
      users_messages_receiver_idTousers: Prisma.$usersPayload<ExtArgs> | null
      groups: Prisma.$groupsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      message_id: number
      sender_id: number
      receiver_id: number | null
      group_id: number | null
      message_text: string
      created_at: Date | null
    }, ExtArgs["result"]["messages"]>
    composites: {}
  }

  type messagesGetPayload<S extends boolean | null | undefined | messagesDefaultArgs> = $Result.GetResult<Prisma.$messagesPayload, S>

  type messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessagesCountAggregateInputType | true
    }

  export interface messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['messages'], meta: { name: 'messages' } }
    /**
     * Find zero or one Messages that matches the filter.
     * @param {messagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends messagesFindUniqueArgs>(args: SelectSubset<T, messagesFindUniqueArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {messagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends messagesFindFirstArgs>(args?: SelectSubset<T, messagesFindFirstArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `message_id`
     * const messagesWithMessage_idOnly = await prisma.messages.findMany({ select: { message_id: true } })
     * 
     */
    findMany<T extends messagesFindManyArgs>(args?: SelectSubset<T, messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Messages.
     * @param {messagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
     */
    create<T extends messagesCreateArgs>(args: SelectSubset<T, messagesCreateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {messagesCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends messagesCreateManyArgs>(args?: SelectSubset<T, messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Messages.
     * @param {messagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
     */
    delete<T extends messagesDeleteArgs>(args: SelectSubset<T, messagesDeleteArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Messages.
     * @param {messagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends messagesUpdateArgs>(args: SelectSubset<T, messagesUpdateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {messagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends messagesDeleteManyArgs>(args?: SelectSubset<T, messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends messagesUpdateManyArgs>(args: SelectSubset<T, messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Messages.
     * @param {messagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
     */
    upsert<T extends messagesUpsertArgs>(args: SelectSubset<T, messagesUpsertArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends messagesCountArgs>(
      args?: Subset<T, messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): Prisma.PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: messagesGroupByArgs['orderBy'] }
        : { orderBy?: messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the messages model
   */
  readonly fields: messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_messages_sender_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users_messages_receiver_idTousers<T extends messages$users_messages_receiver_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, messages$users_messages_receiver_idTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    groups<T extends messages$groupsArgs<ExtArgs> = {}>(args?: Subset<T, messages$groupsArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the messages model
   */ 
  interface messagesFieldRefs {
    readonly message_id: FieldRef<"messages", 'Int'>
    readonly sender_id: FieldRef<"messages", 'Int'>
    readonly receiver_id: FieldRef<"messages", 'Int'>
    readonly group_id: FieldRef<"messages", 'Int'>
    readonly message_text: FieldRef<"messages", 'String'>
    readonly created_at: FieldRef<"messages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * messages findUnique
   */
  export type messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findUniqueOrThrow
   */
  export type messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findFirst
   */
  export type messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findFirstOrThrow
   */
  export type messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findMany
   */
  export type messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages create
   */
  export type messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a messages.
     */
    data: XOR<messagesCreateInput, messagesUncheckedCreateInput>
  }

  /**
   * messages createMany
   */
  export type messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * messages update
   */
  export type messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a messages.
     */
    data: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
    /**
     * Choose, which messages to update.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages updateMany
   */
  export type messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
  }

  /**
   * messages upsert
   */
  export type messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the messages to update in case it exists.
     */
    where: messagesWhereUniqueInput
    /**
     * In case the messages found by the `where` argument doesn't exist, create a new messages with this data.
     */
    create: XOR<messagesCreateInput, messagesUncheckedCreateInput>
    /**
     * In case the messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
  }

  /**
   * messages delete
   */
  export type messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter which messages to delete.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages deleteMany
   */
  export type messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to delete
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to delete.
     */
    limit?: number
  }

  /**
   * messages.users_messages_receiver_idTousers
   */
  export type messages$users_messages_receiver_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * messages.groups
   */
  export type messages$groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the groups
     */
    omit?: groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: groupsInclude<ExtArgs> | null
    where?: groupsWhereInput
  }

  /**
   * messages without action
   */
  export type messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
  }


  /**
   * Model permissions
   */

  export type AggregatePermissions = {
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  export type PermissionsAvgAggregateOutputType = {
    permission_id: number | null
  }

  export type PermissionsSumAggregateOutputType = {
    permission_id: number | null
  }

  export type PermissionsMinAggregateOutputType = {
    permission_id: number | null
    permission_name: string | null
    description: string | null
  }

  export type PermissionsMaxAggregateOutputType = {
    permission_id: number | null
    permission_name: string | null
    description: string | null
  }

  export type PermissionsCountAggregateOutputType = {
    permission_id: number
    permission_name: number
    description: number
    _all: number
  }


  export type PermissionsAvgAggregateInputType = {
    permission_id?: true
  }

  export type PermissionsSumAggregateInputType = {
    permission_id?: true
  }

  export type PermissionsMinAggregateInputType = {
    permission_id?: true
    permission_name?: true
    description?: true
  }

  export type PermissionsMaxAggregateInputType = {
    permission_id?: true
    permission_name?: true
    description?: true
  }

  export type PermissionsCountAggregateInputType = {
    permission_id?: true
    permission_name?: true
    description?: true
    _all?: true
  }

  export type PermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to aggregate.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionsMaxAggregateInputType
  }

  export type GetPermissionsAggregateType<T extends PermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissions[P]>
      : GetScalarType<T[P], AggregatePermissions[P]>
  }




  export type permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionsWhereInput
    orderBy?: permissionsOrderByWithAggregationInput | permissionsOrderByWithAggregationInput[]
    by: PermissionsScalarFieldEnum[] | PermissionsScalarFieldEnum
    having?: permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionsCountAggregateInputType | true
    _avg?: PermissionsAvgAggregateInputType
    _sum?: PermissionsSumAggregateInputType
    _min?: PermissionsMinAggregateInputType
    _max?: PermissionsMaxAggregateInputType
  }

  export type PermissionsGroupByOutputType = {
    permission_id: number
    permission_name: string
    description: string | null
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  type GetPermissionsGroupByPayload<T extends permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
        }
      >
    >


  export type permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    permission_name?: boolean
    description?: boolean
    role_permissions?: boolean | permissions$role_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissions"]>



  export type permissionsSelectScalar = {
    permission_id?: boolean
    permission_name?: boolean
    description?: boolean
  }

  export type permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"permission_id" | "permission_name" | "description", ExtArgs["result"]["permissions"]>
  export type permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | permissions$role_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permissions"
    objects: {
      role_permissions: Prisma.$role_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      permission_id: number
      permission_name: string
      description: string | null
    }, ExtArgs["result"]["permissions"]>
    composites: {}
  }

  type permissionsGetPayload<S extends boolean | null | undefined | permissionsDefaultArgs> = $Result.GetResult<Prisma.$permissionsPayload, S>

  type permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionsCountAggregateInputType | true
    }

  export interface permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permissions'], meta: { name: 'permissions' } }
    /**
     * Find zero or one Permissions that matches the filter.
     * @param {permissionsFindUniqueArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionsFindUniqueArgs>(args: SelectSubset<T, permissionsFindUniqueArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionsFindUniqueOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionsFindFirstArgs>(args?: SelectSubset<T, permissionsFindFirstArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permissions.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permissions.findMany({ take: 10 })
     * 
     * // Only select the `permission_id`
     * const permissionsWithPermission_idOnly = await prisma.permissions.findMany({ select: { permission_id: true } })
     * 
     */
    findMany<T extends permissionsFindManyArgs>(args?: SelectSubset<T, permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissions.
     * @param {permissionsCreateArgs} args - Arguments to create a Permissions.
     * @example
     * // Create one Permissions
     * const Permissions = await prisma.permissions.create({
     *   data: {
     *     // ... data to create a Permissions
     *   }
     * })
     * 
     */
    create<T extends permissionsCreateArgs>(args: SelectSubset<T, permissionsCreateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionsCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permissions = await prisma.permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionsCreateManyArgs>(args?: SelectSubset<T, permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permissions.
     * @param {permissionsDeleteArgs} args - Arguments to delete one Permissions.
     * @example
     * // Delete one Permissions
     * const Permissions = await prisma.permissions.delete({
     *   where: {
     *     // ... filter to delete one Permissions
     *   }
     * })
     * 
     */
    delete<T extends permissionsDeleteArgs>(args: SelectSubset<T, permissionsDeleteArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissions.
     * @param {permissionsUpdateArgs} args - Arguments to update one Permissions.
     * @example
     * // Update one Permissions
     * const permissions = await prisma.permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionsUpdateArgs>(args: SelectSubset<T, permissionsUpdateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionsDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionsDeleteManyArgs>(args?: SelectSubset<T, permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permissions = await prisma.permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionsUpdateManyArgs>(args: SelectSubset<T, permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permissions.
     * @param {permissionsUpsertArgs} args - Arguments to update or create a Permissions.
     * @example
     * // Update or create a Permissions
     * const permissions = await prisma.permissions.upsert({
     *   create: {
     *     // ... data to create a Permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissions we want to update
     *   }
     * })
     */
    upsert<T extends permissionsUpsertArgs>(args: SelectSubset<T, permissionsUpsertArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permissions.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionsCountArgs>(
      args?: Subset<T, permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionsAggregateArgs>(args: Subset<T, PermissionsAggregateArgs>): Prisma.PrismaPromise<GetPermissionsAggregateType<T>>

    /**
     * Group by Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionsGroupByArgs['orderBy'] }
        : { orderBy?: permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permissions model
   */
  readonly fields: permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role_permissions<T extends permissions$role_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, permissions$role_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permissions model
   */ 
  interface permissionsFieldRefs {
    readonly permission_id: FieldRef<"permissions", 'Int'>
    readonly permission_name: FieldRef<"permissions", 'String'>
    readonly description: FieldRef<"permissions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * permissions findUnique
   */
  export type permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findUniqueOrThrow
   */
  export type permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findFirst
   */
  export type permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findFirstOrThrow
   */
  export type permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findMany
   */
  export type permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions create
   */
  export type permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a permissions.
     */
    data: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
  }

  /**
   * permissions createMany
   */
  export type permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionsCreateManyInput | permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permissions update
   */
  export type permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a permissions.
     */
    data: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
    /**
     * Choose, which permissions to update.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions updateMany
   */
  export type permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionsUpdateManyMutationInput, permissionsUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permissions upsert
   */
  export type permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the permissions to update in case it exists.
     */
    where: permissionsWhereUniqueInput
    /**
     * In case the permissions found by the `where` argument doesn't exist, create a new permissions with this data.
     */
    create: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
    /**
     * In case the permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
  }

  /**
   * permissions delete
   */
  export type permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter which permissions to delete.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions deleteMany
   */
  export type permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permissions.role_permissions
   */
  export type permissions$role_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    cursor?: role_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * permissions without action
   */
  export type permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
  }


  /**
   * Model role_permissions
   */

  export type AggregateRole_permissions = {
    _count: Role_permissionsCountAggregateOutputType | null
    _avg: Role_permissionsAvgAggregateOutputType | null
    _sum: Role_permissionsSumAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  export type Role_permissionsAvgAggregateOutputType = {
    role_permission_id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsSumAggregateOutputType = {
    role_permission_id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsMinAggregateOutputType = {
    role_permission_id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsMaxAggregateOutputType = {
    role_permission_id: number | null
    role_id: number | null
    permission_id: number | null
  }

  export type Role_permissionsCountAggregateOutputType = {
    role_permission_id: number
    role_id: number
    permission_id: number
    _all: number
  }


  export type Role_permissionsAvgAggregateInputType = {
    role_permission_id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsSumAggregateInputType = {
    role_permission_id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsMinAggregateInputType = {
    role_permission_id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsMaxAggregateInputType = {
    role_permission_id?: true
    role_id?: true
    permission_id?: true
  }

  export type Role_permissionsCountAggregateInputType = {
    role_permission_id?: true
    role_id?: true
    permission_id?: true
    _all?: true
  }

  export type Role_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to aggregate.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned role_permissions
    **/
    _count?: true | Role_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Role_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Role_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Role_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type GetRole_permissionsAggregateType<T extends Role_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRole_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole_permissions[P]>
      : GetScalarType<T[P], AggregateRole_permissions[P]>
  }




  export type role_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithAggregationInput | role_permissionsOrderByWithAggregationInput[]
    by: Role_permissionsScalarFieldEnum[] | Role_permissionsScalarFieldEnum
    having?: role_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Role_permissionsCountAggregateInputType | true
    _avg?: Role_permissionsAvgAggregateInputType
    _sum?: Role_permissionsSumAggregateInputType
    _min?: Role_permissionsMinAggregateInputType
    _max?: Role_permissionsMaxAggregateInputType
  }

  export type Role_permissionsGroupByOutputType = {
    role_permission_id: number
    role_id: number
    permission_id: number
    _count: Role_permissionsCountAggregateOutputType | null
    _avg: Role_permissionsAvgAggregateOutputType | null
    _sum: Role_permissionsSumAggregateOutputType | null
    _min: Role_permissionsMinAggregateOutputType | null
    _max: Role_permissionsMaxAggregateOutputType | null
  }

  type GetRole_permissionsGroupByPayload<T extends role_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Role_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Role_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Role_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type role_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role_permission_id?: boolean
    role_id?: boolean
    permission_id?: boolean
    roles?: boolean | rolesDefaultArgs<ExtArgs>
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role_permissions"]>



  export type role_permissionsSelectScalar = {
    role_permission_id?: boolean
    role_id?: boolean
    permission_id?: boolean
  }

  export type role_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"role_permission_id" | "role_id" | "permission_id", ExtArgs["result"]["role_permissions"]>
  export type role_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | rolesDefaultArgs<ExtArgs>
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }

  export type $role_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role_permissions"
    objects: {
      roles: Prisma.$rolesPayload<ExtArgs>
      permissions: Prisma.$permissionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      role_permission_id: number
      role_id: number
      permission_id: number
    }, ExtArgs["result"]["role_permissions"]>
    composites: {}
  }

  type role_permissionsGetPayload<S extends boolean | null | undefined | role_permissionsDefaultArgs> = $Result.GetResult<Prisma.$role_permissionsPayload, S>

  type role_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<role_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Role_permissionsCountAggregateInputType | true
    }

  export interface role_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role_permissions'], meta: { name: 'role_permissions' } }
    /**
     * Find zero or one Role_permissions that matches the filter.
     * @param {role_permissionsFindUniqueArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends role_permissionsFindUniqueArgs>(args: SelectSubset<T, role_permissionsFindUniqueArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {role_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends role_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, role_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends role_permissionsFindFirstArgs>(args?: SelectSubset<T, role_permissionsFindFirstArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindFirstOrThrowArgs} args - Arguments to find a Role_permissions
     * @example
     * // Get one Role_permissions
     * const role_permissions = await prisma.role_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends role_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, role_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Role_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany()
     * 
     * // Get first 10 Role_permissions
     * const role_permissions = await prisma.role_permissions.findMany({ take: 10 })
     * 
     * // Only select the `role_permission_id`
     * const role_permissionsWithRole_permission_idOnly = await prisma.role_permissions.findMany({ select: { role_permission_id: true } })
     * 
     */
    findMany<T extends role_permissionsFindManyArgs>(args?: SelectSubset<T, role_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role_permissions.
     * @param {role_permissionsCreateArgs} args - Arguments to create a Role_permissions.
     * @example
     * // Create one Role_permissions
     * const Role_permissions = await prisma.role_permissions.create({
     *   data: {
     *     // ... data to create a Role_permissions
     *   }
     * })
     * 
     */
    create<T extends role_permissionsCreateArgs>(args: SelectSubset<T, role_permissionsCreateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Role_permissions.
     * @param {role_permissionsCreateManyArgs} args - Arguments to create many Role_permissions.
     * @example
     * // Create many Role_permissions
     * const role_permissions = await prisma.role_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends role_permissionsCreateManyArgs>(args?: SelectSubset<T, role_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role_permissions.
     * @param {role_permissionsDeleteArgs} args - Arguments to delete one Role_permissions.
     * @example
     * // Delete one Role_permissions
     * const Role_permissions = await prisma.role_permissions.delete({
     *   where: {
     *     // ... filter to delete one Role_permissions
     *   }
     * })
     * 
     */
    delete<T extends role_permissionsDeleteArgs>(args: SelectSubset<T, role_permissionsDeleteArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role_permissions.
     * @param {role_permissionsUpdateArgs} args - Arguments to update one Role_permissions.
     * @example
     * // Update one Role_permissions
     * const role_permissions = await prisma.role_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends role_permissionsUpdateArgs>(args: SelectSubset<T, role_permissionsUpdateArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Role_permissions.
     * @param {role_permissionsDeleteManyArgs} args - Arguments to filter Role_permissions to delete.
     * @example
     * // Delete a few Role_permissions
     * const { count } = await prisma.role_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends role_permissionsDeleteManyArgs>(args?: SelectSubset<T, role_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Role_permissions
     * const role_permissions = await prisma.role_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends role_permissionsUpdateManyArgs>(args: SelectSubset<T, role_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role_permissions.
     * @param {role_permissionsUpsertArgs} args - Arguments to update or create a Role_permissions.
     * @example
     * // Update or create a Role_permissions
     * const role_permissions = await prisma.role_permissions.upsert({
     *   create: {
     *     // ... data to create a Role_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role_permissions we want to update
     *   }
     * })
     */
    upsert<T extends role_permissionsUpsertArgs>(args: SelectSubset<T, role_permissionsUpsertArgs<ExtArgs>>): Prisma__role_permissionsClient<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsCountArgs} args - Arguments to filter Role_permissions to count.
     * @example
     * // Count the number of Role_permissions
     * const count = await prisma.role_permissions.count({
     *   where: {
     *     // ... the filter for the Role_permissions we want to count
     *   }
     * })
    **/
    count<T extends role_permissionsCountArgs>(
      args?: Subset<T, role_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Role_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Role_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Role_permissionsAggregateArgs>(args: Subset<T, Role_permissionsAggregateArgs>): Prisma.PrismaPromise<GetRole_permissionsAggregateType<T>>

    /**
     * Group by Role_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends role_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: role_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: role_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, role_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRole_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role_permissions model
   */
  readonly fields: role_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__role_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permissions<T extends permissionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionsDefaultArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role_permissions model
   */ 
  interface role_permissionsFieldRefs {
    readonly role_permission_id: FieldRef<"role_permissions", 'Int'>
    readonly role_id: FieldRef<"role_permissions", 'Int'>
    readonly permission_id: FieldRef<"role_permissions", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * role_permissions findUnique
   */
  export type role_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findUniqueOrThrow
   */
  export type role_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions findFirst
   */
  export type role_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findFirstOrThrow
   */
  export type role_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_permissions.
     */
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions findMany
   */
  export type role_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_permissions to fetch.
     */
    where?: role_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_permissions to fetch.
     */
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing role_permissions.
     */
    cursor?: role_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_permissions.
     */
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * role_permissions create
   */
  export type role_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a role_permissions.
     */
    data: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
  }

  /**
   * role_permissions createMany
   */
  export type role_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many role_permissions.
     */
    data: role_permissionsCreateManyInput | role_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role_permissions update
   */
  export type role_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a role_permissions.
     */
    data: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
    /**
     * Choose, which role_permissions to update.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions updateMany
   */
  export type role_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update role_permissions.
     */
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which role_permissions to update
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to update.
     */
    limit?: number
  }

  /**
   * role_permissions upsert
   */
  export type role_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the role_permissions to update in case it exists.
     */
    where: role_permissionsWhereUniqueInput
    /**
     * In case the role_permissions found by the `where` argument doesn't exist, create a new role_permissions with this data.
     */
    create: XOR<role_permissionsCreateInput, role_permissionsUncheckedCreateInput>
    /**
     * In case the role_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<role_permissionsUpdateInput, role_permissionsUncheckedUpdateInput>
  }

  /**
   * role_permissions delete
   */
  export type role_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    /**
     * Filter which role_permissions to delete.
     */
    where: role_permissionsWhereUniqueInput
  }

  /**
   * role_permissions deleteMany
   */
  export type role_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_permissions to delete
     */
    where?: role_permissionsWhereInput
    /**
     * Limit how many role_permissions to delete.
     */
    limit?: number
  }

  /**
   * role_permissions without action
   */
  export type role_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    role_id: number | null
  }

  export type RolesSumAggregateOutputType = {
    role_id: number | null
  }

  export type RolesMinAggregateOutputType = {
    role_id: number | null
    role_name: string | null
  }

  export type RolesMaxAggregateOutputType = {
    role_id: number | null
    role_name: string | null
  }

  export type RolesCountAggregateOutputType = {
    role_id: number
    role_name: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    role_id?: true
  }

  export type RolesSumAggregateInputType = {
    role_id?: true
  }

  export type RolesMinAggregateInputType = {
    role_id?: true
    role_name?: true
  }

  export type RolesMaxAggregateInputType = {
    role_id?: true
    role_name?: true
  }

  export type RolesCountAggregateInputType = {
    role_id?: true
    role_name?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    role_id: number
    role_name: string
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role_id?: boolean
    role_name?: boolean
    role_permissions?: boolean | roles$role_permissionsArgs<ExtArgs>
    user_roles?: boolean | roles$user_rolesArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>



  export type rolesSelectScalar = {
    role_id?: boolean
    role_name?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"role_id" | "role_name", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role_permissions?: boolean | roles$role_permissionsArgs<ExtArgs>
    user_roles?: boolean | roles$user_rolesArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      role_permissions: Prisma.$role_permissionsPayload<ExtArgs>[]
      user_roles: Prisma.$user_rolesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      role_id: number
      role_name: string
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `role_id`
     * const rolesWithRole_idOnly = await prisma.roles.findMany({ select: { role_id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role_permissions<T extends roles$role_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, roles$role_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_roles<T extends roles$user_rolesArgs<ExtArgs> = {}>(args?: Subset<T, roles$user_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */ 
  interface rolesFieldRefs {
    readonly role_id: FieldRef<"roles", 'Int'>
    readonly role_name: FieldRef<"roles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.role_permissions
   */
  export type roles$role_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_permissions
     */
    select?: role_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_permissions
     */
    omit?: role_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_permissionsInclude<ExtArgs> | null
    where?: role_permissionsWhereInput
    orderBy?: role_permissionsOrderByWithRelationInput | role_permissionsOrderByWithRelationInput[]
    cursor?: role_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_permissionsScalarFieldEnum | Role_permissionsScalarFieldEnum[]
  }

  /**
   * roles.user_roles
   */
  export type roles$user_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    cursor?: user_rolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model subscriptions
   */

  export type AggregateSubscriptions = {
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  export type SubscriptionsAvgAggregateOutputType = {
    subscription_id: number | null
    user_id: number | null
    subscriber_id: number | null
  }

  export type SubscriptionsSumAggregateOutputType = {
    subscription_id: number | null
    user_id: number | null
    subscriber_id: number | null
  }

  export type SubscriptionsMinAggregateOutputType = {
    subscription_id: number | null
    user_id: number | null
    subscriber_id: number | null
    created_at: Date | null
  }

  export type SubscriptionsMaxAggregateOutputType = {
    subscription_id: number | null
    user_id: number | null
    subscriber_id: number | null
    created_at: Date | null
  }

  export type SubscriptionsCountAggregateOutputType = {
    subscription_id: number
    user_id: number
    subscriber_id: number
    created_at: number
    _all: number
  }


  export type SubscriptionsAvgAggregateInputType = {
    subscription_id?: true
    user_id?: true
    subscriber_id?: true
  }

  export type SubscriptionsSumAggregateInputType = {
    subscription_id?: true
    user_id?: true
    subscriber_id?: true
  }

  export type SubscriptionsMinAggregateInputType = {
    subscription_id?: true
    user_id?: true
    subscriber_id?: true
    created_at?: true
  }

  export type SubscriptionsMaxAggregateInputType = {
    subscription_id?: true
    user_id?: true
    subscriber_id?: true
    created_at?: true
  }

  export type SubscriptionsCountAggregateInputType = {
    subscription_id?: true
    user_id?: true
    subscriber_id?: true
    created_at?: true
    _all?: true
  }

  export type SubscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscriptions to aggregate.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscriptions
    **/
    _count?: true | SubscriptionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type GetSubscriptionsAggregateType<T extends SubscriptionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptions[P]>
      : GetScalarType<T[P], AggregateSubscriptions[P]>
  }




  export type subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionsWhereInput
    orderBy?: subscriptionsOrderByWithAggregationInput | subscriptionsOrderByWithAggregationInput[]
    by: SubscriptionsScalarFieldEnum[] | SubscriptionsScalarFieldEnum
    having?: subscriptionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionsCountAggregateInputType | true
    _avg?: SubscriptionsAvgAggregateInputType
    _sum?: SubscriptionsSumAggregateInputType
    _min?: SubscriptionsMinAggregateInputType
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type SubscriptionsGroupByOutputType = {
    subscription_id: number
    user_id: number
    subscriber_id: number
    created_at: Date | null
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  type GetSubscriptionsGroupByPayload<T extends subscriptionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
        }
      >
    >


  export type subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    subscription_id?: boolean
    user_id?: boolean
    subscriber_id?: boolean
    created_at?: boolean
    users_subscriptions_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_subscriptions_subscriber_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptions"]>



  export type subscriptionsSelectScalar = {
    subscription_id?: boolean
    user_id?: boolean
    subscriber_id?: boolean
    created_at?: boolean
  }

  export type subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"subscription_id" | "user_id" | "subscriber_id" | "created_at", ExtArgs["result"]["subscriptions"]>
  export type subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_subscriptions_user_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_subscriptions_subscriber_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscriptions"
    objects: {
      users_subscriptions_user_idTousers: Prisma.$usersPayload<ExtArgs>
      users_subscriptions_subscriber_idTousers: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      subscription_id: number
      user_id: number
      subscriber_id: number
      created_at: Date | null
    }, ExtArgs["result"]["subscriptions"]>
    composites: {}
  }

  type subscriptionsGetPayload<S extends boolean | null | undefined | subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$subscriptionsPayload, S>

  type subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionsCountAggregateInputType | true
    }

  export interface subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscriptions'], meta: { name: 'subscriptions' } }
    /**
     * Find zero or one Subscriptions that matches the filter.
     * @param {subscriptionsFindUniqueArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscriptionsFindUniqueArgs>(args: SelectSubset<T, subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscriptions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindFirstArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscriptionsFindFirstArgs>(args?: SelectSubset<T, subscriptionsFindFirstArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscriptions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindFirstOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany({ take: 10 })
     * 
     * // Only select the `subscription_id`
     * const subscriptionsWithSubscription_idOnly = await prisma.subscriptions.findMany({ select: { subscription_id: true } })
     * 
     */
    findMany<T extends subscriptionsFindManyArgs>(args?: SelectSubset<T, subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscriptions.
     * @param {subscriptionsCreateArgs} args - Arguments to create a Subscriptions.
     * @example
     * // Create one Subscriptions
     * const Subscriptions = await prisma.subscriptions.create({
     *   data: {
     *     // ... data to create a Subscriptions
     *   }
     * })
     * 
     */
    create<T extends subscriptionsCreateArgs>(args: SelectSubset<T, subscriptionsCreateArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscriptions.
     * @param {subscriptionsCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscriptions = await prisma.subscriptions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscriptionsCreateManyArgs>(args?: SelectSubset<T, subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subscriptions.
     * @param {subscriptionsDeleteArgs} args - Arguments to delete one Subscriptions.
     * @example
     * // Delete one Subscriptions
     * const Subscriptions = await prisma.subscriptions.delete({
     *   where: {
     *     // ... filter to delete one Subscriptions
     *   }
     * })
     * 
     */
    delete<T extends subscriptionsDeleteArgs>(args: SelectSubset<T, subscriptionsDeleteArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscriptions.
     * @param {subscriptionsUpdateArgs} args - Arguments to update one Subscriptions.
     * @example
     * // Update one Subscriptions
     * const subscriptions = await prisma.subscriptions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscriptionsUpdateArgs>(args: SelectSubset<T, subscriptionsUpdateArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscriptions.
     * @param {subscriptionsDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscriptions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscriptionsDeleteManyArgs>(args?: SelectSubset<T, subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscriptions = await prisma.subscriptions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscriptionsUpdateManyArgs>(args: SelectSubset<T, subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscriptions.
     * @param {subscriptionsUpsertArgs} args - Arguments to update or create a Subscriptions.
     * @example
     * // Update or create a Subscriptions
     * const subscriptions = await prisma.subscriptions.upsert({
     *   create: {
     *     // ... data to create a Subscriptions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscriptions we want to update
     *   }
     * })
     */
    upsert<T extends subscriptionsUpsertArgs>(args: SelectSubset<T, subscriptionsUpsertArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscriptions.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends subscriptionsCountArgs>(
      args?: Subset<T, subscriptionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionsAggregateArgs>(args: Subset<T, SubscriptionsAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionsAggregateType<T>>

    /**
     * Group by Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscriptionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscriptionsGroupByArgs['orderBy'] }
        : { orderBy?: subscriptionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscriptions model
   */
  readonly fields: subscriptionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscriptions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_subscriptions_user_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users_subscriptions_subscriber_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscriptions model
   */ 
  interface subscriptionsFieldRefs {
    readonly subscription_id: FieldRef<"subscriptions", 'Int'>
    readonly user_id: FieldRef<"subscriptions", 'Int'>
    readonly subscriber_id: FieldRef<"subscriptions", 'Int'>
    readonly created_at: FieldRef<"subscriptions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * subscriptions findUnique
   */
  export type subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions findUniqueOrThrow
   */
  export type subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions findFirst
   */
  export type subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions findFirstOrThrow
   */
  export type subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions findMany
   */
  export type subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions create
   */
  export type subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to create a subscriptions.
     */
    data: XOR<subscriptionsCreateInput, subscriptionsUncheckedCreateInput>
  }

  /**
   * subscriptions createMany
   */
  export type subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscriptions.
     */
    data: subscriptionsCreateManyInput | subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscriptions update
   */
  export type subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to update a subscriptions.
     */
    data: XOR<subscriptionsUpdateInput, subscriptionsUncheckedUpdateInput>
    /**
     * Choose, which subscriptions to update.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions updateMany
   */
  export type subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscriptions.
     */
    data: XOR<subscriptionsUpdateManyMutationInput, subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which subscriptions to update
     */
    where?: subscriptionsWhereInput
    /**
     * Limit how many subscriptions to update.
     */
    limit?: number
  }

  /**
   * subscriptions upsert
   */
  export type subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The filter to search for the subscriptions to update in case it exists.
     */
    where: subscriptionsWhereUniqueInput
    /**
     * In case the subscriptions found by the `where` argument doesn't exist, create a new subscriptions with this data.
     */
    create: XOR<subscriptionsCreateInput, subscriptionsUncheckedCreateInput>
    /**
     * In case the subscriptions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscriptionsUpdateInput, subscriptionsUncheckedUpdateInput>
  }

  /**
   * subscriptions delete
   */
  export type subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter which subscriptions to delete.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions deleteMany
   */
  export type subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscriptions to delete
     */
    where?: subscriptionsWhereInput
    /**
     * Limit how many subscriptions to delete.
     */
    limit?: number
  }

  /**
   * subscriptions without action
   */
  export type subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
  }


  /**
   * Model user_chats
   */

  export type AggregateUser_chats = {
    _count: User_chatsCountAggregateOutputType | null
    _avg: User_chatsAvgAggregateOutputType | null
    _sum: User_chatsSumAggregateOutputType | null
    _min: User_chatsMinAggregateOutputType | null
    _max: User_chatsMaxAggregateOutputType | null
  }

  export type User_chatsAvgAggregateOutputType = {
    chat_id: number | null
    user1_id: number | null
    user2_id: number | null
  }

  export type User_chatsSumAggregateOutputType = {
    chat_id: number | null
    user1_id: number | null
    user2_id: number | null
  }

  export type User_chatsMinAggregateOutputType = {
    chat_id: number | null
    user1_id: number | null
    user2_id: number | null
    created_at: Date | null
  }

  export type User_chatsMaxAggregateOutputType = {
    chat_id: number | null
    user1_id: number | null
    user2_id: number | null
    created_at: Date | null
  }

  export type User_chatsCountAggregateOutputType = {
    chat_id: number
    user1_id: number
    user2_id: number
    created_at: number
    _all: number
  }


  export type User_chatsAvgAggregateInputType = {
    chat_id?: true
    user1_id?: true
    user2_id?: true
  }

  export type User_chatsSumAggregateInputType = {
    chat_id?: true
    user1_id?: true
    user2_id?: true
  }

  export type User_chatsMinAggregateInputType = {
    chat_id?: true
    user1_id?: true
    user2_id?: true
    created_at?: true
  }

  export type User_chatsMaxAggregateInputType = {
    chat_id?: true
    user1_id?: true
    user2_id?: true
    created_at?: true
  }

  export type User_chatsCountAggregateInputType = {
    chat_id?: true
    user1_id?: true
    user2_id?: true
    created_at?: true
    _all?: true
  }

  export type User_chatsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_chats to aggregate.
     */
    where?: user_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_chats to fetch.
     */
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_chats
    **/
    _count?: true | User_chatsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_chatsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_chatsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_chatsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_chatsMaxAggregateInputType
  }

  export type GetUser_chatsAggregateType<T extends User_chatsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_chats]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_chats[P]>
      : GetScalarType<T[P], AggregateUser_chats[P]>
  }




  export type user_chatsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_chatsWhereInput
    orderBy?: user_chatsOrderByWithAggregationInput | user_chatsOrderByWithAggregationInput[]
    by: User_chatsScalarFieldEnum[] | User_chatsScalarFieldEnum
    having?: user_chatsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_chatsCountAggregateInputType | true
    _avg?: User_chatsAvgAggregateInputType
    _sum?: User_chatsSumAggregateInputType
    _min?: User_chatsMinAggregateInputType
    _max?: User_chatsMaxAggregateInputType
  }

  export type User_chatsGroupByOutputType = {
    chat_id: number
    user1_id: number
    user2_id: number
    created_at: Date | null
    _count: User_chatsCountAggregateOutputType | null
    _avg: User_chatsAvgAggregateOutputType | null
    _sum: User_chatsSumAggregateOutputType | null
    _min: User_chatsMinAggregateOutputType | null
    _max: User_chatsMaxAggregateOutputType | null
  }

  type GetUser_chatsGroupByPayload<T extends user_chatsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_chatsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_chatsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_chatsGroupByOutputType[P]>
            : GetScalarType<T[P], User_chatsGroupByOutputType[P]>
        }
      >
    >


  export type user_chatsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    chat_id?: boolean
    user1_id?: boolean
    user2_id?: boolean
    created_at?: boolean
    users_user_chats_user1_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_user_chats_user2_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_chats"]>



  export type user_chatsSelectScalar = {
    chat_id?: boolean
    user1_id?: boolean
    user2_id?: boolean
    created_at?: boolean
  }

  export type user_chatsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"chat_id" | "user1_id" | "user2_id" | "created_at", ExtArgs["result"]["user_chats"]>
  export type user_chatsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_chats_user1_idTousers?: boolean | usersDefaultArgs<ExtArgs>
    users_user_chats_user2_idTousers?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_chatsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_chats"
    objects: {
      users_user_chats_user1_idTousers: Prisma.$usersPayload<ExtArgs>
      users_user_chats_user2_idTousers: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      chat_id: number
      user1_id: number
      user2_id: number
      created_at: Date | null
    }, ExtArgs["result"]["user_chats"]>
    composites: {}
  }

  type user_chatsGetPayload<S extends boolean | null | undefined | user_chatsDefaultArgs> = $Result.GetResult<Prisma.$user_chatsPayload, S>

  type user_chatsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_chatsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_chatsCountAggregateInputType | true
    }

  export interface user_chatsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_chats'], meta: { name: 'user_chats' } }
    /**
     * Find zero or one User_chats that matches the filter.
     * @param {user_chatsFindUniqueArgs} args - Arguments to find a User_chats
     * @example
     * // Get one User_chats
     * const user_chats = await prisma.user_chats.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_chatsFindUniqueArgs>(args: SelectSubset<T, user_chatsFindUniqueArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_chats that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_chatsFindUniqueOrThrowArgs} args - Arguments to find a User_chats
     * @example
     * // Get one User_chats
     * const user_chats = await prisma.user_chats.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_chatsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_chatsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsFindFirstArgs} args - Arguments to find a User_chats
     * @example
     * // Get one User_chats
     * const user_chats = await prisma.user_chats.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_chatsFindFirstArgs>(args?: SelectSubset<T, user_chatsFindFirstArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_chats that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsFindFirstOrThrowArgs} args - Arguments to find a User_chats
     * @example
     * // Get one User_chats
     * const user_chats = await prisma.user_chats.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_chatsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_chatsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_chats
     * const user_chats = await prisma.user_chats.findMany()
     * 
     * // Get first 10 User_chats
     * const user_chats = await prisma.user_chats.findMany({ take: 10 })
     * 
     * // Only select the `chat_id`
     * const user_chatsWithChat_idOnly = await prisma.user_chats.findMany({ select: { chat_id: true } })
     * 
     */
    findMany<T extends user_chatsFindManyArgs>(args?: SelectSubset<T, user_chatsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_chats.
     * @param {user_chatsCreateArgs} args - Arguments to create a User_chats.
     * @example
     * // Create one User_chats
     * const User_chats = await prisma.user_chats.create({
     *   data: {
     *     // ... data to create a User_chats
     *   }
     * })
     * 
     */
    create<T extends user_chatsCreateArgs>(args: SelectSubset<T, user_chatsCreateArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_chats.
     * @param {user_chatsCreateManyArgs} args - Arguments to create many User_chats.
     * @example
     * // Create many User_chats
     * const user_chats = await prisma.user_chats.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_chatsCreateManyArgs>(args?: SelectSubset<T, user_chatsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_chats.
     * @param {user_chatsDeleteArgs} args - Arguments to delete one User_chats.
     * @example
     * // Delete one User_chats
     * const User_chats = await prisma.user_chats.delete({
     *   where: {
     *     // ... filter to delete one User_chats
     *   }
     * })
     * 
     */
    delete<T extends user_chatsDeleteArgs>(args: SelectSubset<T, user_chatsDeleteArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_chats.
     * @param {user_chatsUpdateArgs} args - Arguments to update one User_chats.
     * @example
     * // Update one User_chats
     * const user_chats = await prisma.user_chats.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_chatsUpdateArgs>(args: SelectSubset<T, user_chatsUpdateArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_chats.
     * @param {user_chatsDeleteManyArgs} args - Arguments to filter User_chats to delete.
     * @example
     * // Delete a few User_chats
     * const { count } = await prisma.user_chats.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_chatsDeleteManyArgs>(args?: SelectSubset<T, user_chatsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_chats
     * const user_chats = await prisma.user_chats.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_chatsUpdateManyArgs>(args: SelectSubset<T, user_chatsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_chats.
     * @param {user_chatsUpsertArgs} args - Arguments to update or create a User_chats.
     * @example
     * // Update or create a User_chats
     * const user_chats = await prisma.user_chats.upsert({
     *   create: {
     *     // ... data to create a User_chats
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_chats we want to update
     *   }
     * })
     */
    upsert<T extends user_chatsUpsertArgs>(args: SelectSubset<T, user_chatsUpsertArgs<ExtArgs>>): Prisma__user_chatsClient<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsCountArgs} args - Arguments to filter User_chats to count.
     * @example
     * // Count the number of User_chats
     * const count = await prisma.user_chats.count({
     *   where: {
     *     // ... the filter for the User_chats we want to count
     *   }
     * })
    **/
    count<T extends user_chatsCountArgs>(
      args?: Subset<T, user_chatsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_chatsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_chatsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_chatsAggregateArgs>(args: Subset<T, User_chatsAggregateArgs>): Prisma.PrismaPromise<GetUser_chatsAggregateType<T>>

    /**
     * Group by User_chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_chatsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_chatsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_chatsGroupByArgs['orderBy'] }
        : { orderBy?: user_chatsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_chatsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_chatsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_chats model
   */
  readonly fields: user_chatsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_chats.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_chatsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_user_chats_user1_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users_user_chats_user2_idTousers<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_chats model
   */ 
  interface user_chatsFieldRefs {
    readonly chat_id: FieldRef<"user_chats", 'Int'>
    readonly user1_id: FieldRef<"user_chats", 'Int'>
    readonly user2_id: FieldRef<"user_chats", 'Int'>
    readonly created_at: FieldRef<"user_chats", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_chats findUnique
   */
  export type user_chatsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter, which user_chats to fetch.
     */
    where: user_chatsWhereUniqueInput
  }

  /**
   * user_chats findUniqueOrThrow
   */
  export type user_chatsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter, which user_chats to fetch.
     */
    where: user_chatsWhereUniqueInput
  }

  /**
   * user_chats findFirst
   */
  export type user_chatsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter, which user_chats to fetch.
     */
    where?: user_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_chats to fetch.
     */
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_chats.
     */
    cursor?: user_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_chats.
     */
    distinct?: User_chatsScalarFieldEnum | User_chatsScalarFieldEnum[]
  }

  /**
   * user_chats findFirstOrThrow
   */
  export type user_chatsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter, which user_chats to fetch.
     */
    where?: user_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_chats to fetch.
     */
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_chats.
     */
    cursor?: user_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_chats.
     */
    distinct?: User_chatsScalarFieldEnum | User_chatsScalarFieldEnum[]
  }

  /**
   * user_chats findMany
   */
  export type user_chatsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter, which user_chats to fetch.
     */
    where?: user_chatsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_chats to fetch.
     */
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_chats.
     */
    cursor?: user_chatsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_chats.
     */
    skip?: number
    distinct?: User_chatsScalarFieldEnum | User_chatsScalarFieldEnum[]
  }

  /**
   * user_chats create
   */
  export type user_chatsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_chats.
     */
    data: XOR<user_chatsCreateInput, user_chatsUncheckedCreateInput>
  }

  /**
   * user_chats createMany
   */
  export type user_chatsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_chats.
     */
    data: user_chatsCreateManyInput | user_chatsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_chats update
   */
  export type user_chatsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_chats.
     */
    data: XOR<user_chatsUpdateInput, user_chatsUncheckedUpdateInput>
    /**
     * Choose, which user_chats to update.
     */
    where: user_chatsWhereUniqueInput
  }

  /**
   * user_chats updateMany
   */
  export type user_chatsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_chats.
     */
    data: XOR<user_chatsUpdateManyMutationInput, user_chatsUncheckedUpdateManyInput>
    /**
     * Filter which user_chats to update
     */
    where?: user_chatsWhereInput
    /**
     * Limit how many user_chats to update.
     */
    limit?: number
  }

  /**
   * user_chats upsert
   */
  export type user_chatsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_chats to update in case it exists.
     */
    where: user_chatsWhereUniqueInput
    /**
     * In case the user_chats found by the `where` argument doesn't exist, create a new user_chats with this data.
     */
    create: XOR<user_chatsCreateInput, user_chatsUncheckedCreateInput>
    /**
     * In case the user_chats was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_chatsUpdateInput, user_chatsUncheckedUpdateInput>
  }

  /**
   * user_chats delete
   */
  export type user_chatsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    /**
     * Filter which user_chats to delete.
     */
    where: user_chatsWhereUniqueInput
  }

  /**
   * user_chats deleteMany
   */
  export type user_chatsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_chats to delete
     */
    where?: user_chatsWhereInput
    /**
     * Limit how many user_chats to delete.
     */
    limit?: number
  }

  /**
   * user_chats without action
   */
  export type user_chatsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
  }


  /**
   * Model user_roles
   */

  export type AggregateUser_roles = {
    _count: User_rolesCountAggregateOutputType | null
    _avg: User_rolesAvgAggregateOutputType | null
    _sum: User_rolesSumAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  export type User_rolesAvgAggregateOutputType = {
    user_role_id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_rolesSumAggregateOutputType = {
    user_role_id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_rolesMinAggregateOutputType = {
    user_role_id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_rolesMaxAggregateOutputType = {
    user_role_id: number | null
    user_id: number | null
    role_id: number | null
  }

  export type User_rolesCountAggregateOutputType = {
    user_role_id: number
    user_id: number
    role_id: number
    _all: number
  }


  export type User_rolesAvgAggregateInputType = {
    user_role_id?: true
    user_id?: true
    role_id?: true
  }

  export type User_rolesSumAggregateInputType = {
    user_role_id?: true
    user_id?: true
    role_id?: true
  }

  export type User_rolesMinAggregateInputType = {
    user_role_id?: true
    user_id?: true
    role_id?: true
  }

  export type User_rolesMaxAggregateInputType = {
    user_role_id?: true
    user_id?: true
    role_id?: true
  }

  export type User_rolesCountAggregateInputType = {
    user_role_id?: true
    user_id?: true
    role_id?: true
    _all?: true
  }

  export type User_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to aggregate.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_roles
    **/
    _count?: true | User_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_rolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_rolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_rolesMaxAggregateInputType
  }

  export type GetUser_rolesAggregateType<T extends User_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_roles[P]>
      : GetScalarType<T[P], AggregateUser_roles[P]>
  }




  export type user_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithAggregationInput | user_rolesOrderByWithAggregationInput[]
    by: User_rolesScalarFieldEnum[] | User_rolesScalarFieldEnum
    having?: user_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_rolesCountAggregateInputType | true
    _avg?: User_rolesAvgAggregateInputType
    _sum?: User_rolesSumAggregateInputType
    _min?: User_rolesMinAggregateInputType
    _max?: User_rolesMaxAggregateInputType
  }

  export type User_rolesGroupByOutputType = {
    user_role_id: number
    user_id: number
    role_id: number
    _count: User_rolesCountAggregateOutputType | null
    _avg: User_rolesAvgAggregateOutputType | null
    _sum: User_rolesSumAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  type GetUser_rolesGroupByPayload<T extends user_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
        }
      >
    >


  export type user_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_role_id?: boolean
    user_id?: boolean
    role_id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_roles"]>



  export type user_rolesSelectScalar = {
    user_role_id?: boolean
    user_id?: boolean
    role_id?: boolean
  }

  export type user_rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_role_id" | "user_id" | "role_id", ExtArgs["result"]["user_roles"]>
  export type user_rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }

  export type $user_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_roles"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      roles: Prisma.$rolesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_role_id: number
      user_id: number
      role_id: number
    }, ExtArgs["result"]["user_roles"]>
    composites: {}
  }

  type user_rolesGetPayload<S extends boolean | null | undefined | user_rolesDefaultArgs> = $Result.GetResult<Prisma.$user_rolesPayload, S>

  type user_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_rolesCountAggregateInputType | true
    }

  export interface user_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_roles'], meta: { name: 'user_roles' } }
    /**
     * Find zero or one User_roles that matches the filter.
     * @param {user_rolesFindUniqueArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_rolesFindUniqueArgs>(args: SelectSubset<T, user_rolesFindUniqueArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_rolesFindUniqueOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_rolesFindFirstArgs>(args?: SelectSubset<T, user_rolesFindFirstArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_roles
     * const user_roles = await prisma.user_roles.findMany()
     * 
     * // Get first 10 User_roles
     * const user_roles = await prisma.user_roles.findMany({ take: 10 })
     * 
     * // Only select the `user_role_id`
     * const user_rolesWithUser_role_idOnly = await prisma.user_roles.findMany({ select: { user_role_id: true } })
     * 
     */
    findMany<T extends user_rolesFindManyArgs>(args?: SelectSubset<T, user_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_roles.
     * @param {user_rolesCreateArgs} args - Arguments to create a User_roles.
     * @example
     * // Create one User_roles
     * const User_roles = await prisma.user_roles.create({
     *   data: {
     *     // ... data to create a User_roles
     *   }
     * })
     * 
     */
    create<T extends user_rolesCreateArgs>(args: SelectSubset<T, user_rolesCreateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_roles.
     * @param {user_rolesCreateManyArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_roles = await prisma.user_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_rolesCreateManyArgs>(args?: SelectSubset<T, user_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_roles.
     * @param {user_rolesDeleteArgs} args - Arguments to delete one User_roles.
     * @example
     * // Delete one User_roles
     * const User_roles = await prisma.user_roles.delete({
     *   where: {
     *     // ... filter to delete one User_roles
     *   }
     * })
     * 
     */
    delete<T extends user_rolesDeleteArgs>(args: SelectSubset<T, user_rolesDeleteArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_roles.
     * @param {user_rolesUpdateArgs} args - Arguments to update one User_roles.
     * @example
     * // Update one User_roles
     * const user_roles = await prisma.user_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_rolesUpdateArgs>(args: SelectSubset<T, user_rolesUpdateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_roles.
     * @param {user_rolesDeleteManyArgs} args - Arguments to filter User_roles to delete.
     * @example
     * // Delete a few User_roles
     * const { count } = await prisma.user_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_rolesDeleteManyArgs>(args?: SelectSubset<T, user_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_roles
     * const user_roles = await prisma.user_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_rolesUpdateManyArgs>(args: SelectSubset<T, user_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_roles.
     * @param {user_rolesUpsertArgs} args - Arguments to update or create a User_roles.
     * @example
     * // Update or create a User_roles
     * const user_roles = await prisma.user_roles.upsert({
     *   create: {
     *     // ... data to create a User_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_roles we want to update
     *   }
     * })
     */
    upsert<T extends user_rolesUpsertArgs>(args: SelectSubset<T, user_rolesUpsertArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesCountArgs} args - Arguments to filter User_roles to count.
     * @example
     * // Count the number of User_roles
     * const count = await prisma.user_roles.count({
     *   where: {
     *     // ... the filter for the User_roles we want to count
     *   }
     * })
    **/
    count<T extends user_rolesCountArgs>(
      args?: Subset<T, user_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_rolesAggregateArgs>(args: Subset<T, User_rolesAggregateArgs>): Prisma.PrismaPromise<GetUser_rolesAggregateType<T>>

    /**
     * Group by User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_rolesGroupByArgs['orderBy'] }
        : { orderBy?: user_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_roles model
   */
  readonly fields: user_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_roles model
   */ 
  interface user_rolesFieldRefs {
    readonly user_role_id: FieldRef<"user_roles", 'Int'>
    readonly user_id: FieldRef<"user_roles", 'Int'>
    readonly role_id: FieldRef<"user_roles", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * user_roles findUnique
   */
  export type user_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findUniqueOrThrow
   */
  export type user_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findFirst
   */
  export type user_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findFirstOrThrow
   */
  export type user_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findMany
   */
  export type user_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles create
   */
  export type user_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a user_roles.
     */
    data: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
  }

  /**
   * user_roles createMany
   */
  export type user_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_roles.
     */
    data: user_rolesCreateManyInput | user_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_roles update
   */
  export type user_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a user_roles.
     */
    data: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
    /**
     * Choose, which user_roles to update.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles updateMany
   */
  export type user_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_roles upsert
   */
  export type user_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the user_roles to update in case it exists.
     */
    where: user_rolesWhereUniqueInput
    /**
     * In case the user_roles found by the `where` argument doesn't exist, create a new user_roles with this data.
     */
    create: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
    /**
     * In case the user_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
  }

  /**
   * user_roles delete
   */
  export type user_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter which user_roles to delete.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles deleteMany
   */
  export type user_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to delete
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to delete.
     */
    limit?: number
  }

  /**
   * user_roles without action
   */
  export type user_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    user_id: number | null
  }

  export type UsersSumAggregateOutputType = {
    user_id: number | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: number | null
    full_name: string | null
    email: string | null
    avatar: string | null
    pass_word: string | null
    face_app_id: string | null
    refresh_token: string | null
    secret_code: string | null
    created_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: number | null
    full_name: string | null
    email: string | null
    avatar: string | null
    pass_word: string | null
    face_app_id: string | null
    refresh_token: string | null
    secret_code: string | null
    created_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    full_name: number
    email: number
    avatar: number
    pass_word: number
    face_app_id: number
    refresh_token: number
    secret_code: number
    created_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    user_id?: true
  }

  export type UsersSumAggregateInputType = {
    user_id?: true
  }

  export type UsersMinAggregateInputType = {
    user_id?: true
    full_name?: true
    email?: true
    avatar?: true
    pass_word?: true
    face_app_id?: true
    refresh_token?: true
    secret_code?: true
    created_at?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    full_name?: true
    email?: true
    avatar?: true
    pass_word?: true
    face_app_id?: true
    refresh_token?: true
    secret_code?: true
    created_at?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    full_name?: true
    email?: true
    avatar?: true
    pass_word?: true
    face_app_id?: true
    refresh_token?: true
    secret_code?: true
    created_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    user_id: number
    full_name: string
    email: string
    avatar: string | null
    pass_word: string
    face_app_id: string | null
    refresh_token: string | null
    secret_code: string | null
    created_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    full_name?: boolean
    email?: boolean
    avatar?: boolean
    pass_word?: boolean
    face_app_id?: boolean
    refresh_token?: boolean
    secret_code?: boolean
    created_at?: boolean
    forgot_password_code?: boolean | users$forgot_password_codeArgs<ExtArgs>
    group_members?: boolean | users$group_membersArgs<ExtArgs>
    likes?: boolean | users$likesArgs<ExtArgs>
    messages_messages_sender_idTousers?: boolean | users$messages_messages_sender_idTousersArgs<ExtArgs>
    messages_messages_receiver_idTousers?: boolean | users$messages_messages_receiver_idTousersArgs<ExtArgs>
    subscriptions_subscriptions_user_idTousers?: boolean | users$subscriptions_subscriptions_user_idTousersArgs<ExtArgs>
    subscriptions_subscriptions_subscriber_idTousers?: boolean | users$subscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs>
    user_chats_user_chats_user1_idTousers?: boolean | users$user_chats_user_chats_user1_idTousersArgs<ExtArgs>
    user_chats_user_chats_user2_idTousers?: boolean | users$user_chats_user_chats_user2_idTousersArgs<ExtArgs>
    user_roles?: boolean | users$user_rolesArgs<ExtArgs>
    video_comments?: boolean | users$video_commentsArgs<ExtArgs>
    videos?: boolean | users$videosArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>



  export type usersSelectScalar = {
    user_id?: boolean
    full_name?: boolean
    email?: boolean
    avatar?: boolean
    pass_word?: boolean
    face_app_id?: boolean
    refresh_token?: boolean
    secret_code?: boolean
    created_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "full_name" | "email" | "avatar" | "pass_word" | "face_app_id" | "refresh_token" | "secret_code" | "created_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    forgot_password_code?: boolean | users$forgot_password_codeArgs<ExtArgs>
    group_members?: boolean | users$group_membersArgs<ExtArgs>
    likes?: boolean | users$likesArgs<ExtArgs>
    messages_messages_sender_idTousers?: boolean | users$messages_messages_sender_idTousersArgs<ExtArgs>
    messages_messages_receiver_idTousers?: boolean | users$messages_messages_receiver_idTousersArgs<ExtArgs>
    subscriptions_subscriptions_user_idTousers?: boolean | users$subscriptions_subscriptions_user_idTousersArgs<ExtArgs>
    subscriptions_subscriptions_subscriber_idTousers?: boolean | users$subscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs>
    user_chats_user_chats_user1_idTousers?: boolean | users$user_chats_user_chats_user1_idTousersArgs<ExtArgs>
    user_chats_user_chats_user2_idTousers?: boolean | users$user_chats_user_chats_user2_idTousersArgs<ExtArgs>
    user_roles?: boolean | users$user_rolesArgs<ExtArgs>
    video_comments?: boolean | users$video_commentsArgs<ExtArgs>
    videos?: boolean | users$videosArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      forgot_password_code: Prisma.$forgot_password_codePayload<ExtArgs>[]
      group_members: Prisma.$group_membersPayload<ExtArgs>[]
      likes: Prisma.$likesPayload<ExtArgs>[]
      messages_messages_sender_idTousers: Prisma.$messagesPayload<ExtArgs>[]
      messages_messages_receiver_idTousers: Prisma.$messagesPayload<ExtArgs>[]
      subscriptions_subscriptions_user_idTousers: Prisma.$subscriptionsPayload<ExtArgs>[]
      subscriptions_subscriptions_subscriber_idTousers: Prisma.$subscriptionsPayload<ExtArgs>[]
      user_chats_user_chats_user1_idTousers: Prisma.$user_chatsPayload<ExtArgs>[]
      user_chats_user_chats_user2_idTousers: Prisma.$user_chatsPayload<ExtArgs>[]
      user_roles: Prisma.$user_rolesPayload<ExtArgs>[]
      video_comments: Prisma.$video_commentsPayload<ExtArgs>[]
      videos: Prisma.$videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      full_name: string
      email: string
      avatar: string | null
      pass_word: string
      face_app_id: string | null
      refresh_token: string | null
      secret_code: string | null
      created_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    forgot_password_code<T extends users$forgot_password_codeArgs<ExtArgs> = {}>(args?: Subset<T, users$forgot_password_codeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$forgot_password_codePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    group_members<T extends users$group_membersArgs<ExtArgs> = {}>(args?: Subset<T, users$group_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$group_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends users$likesArgs<ExtArgs> = {}>(args?: Subset<T, users$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages_messages_sender_idTousers<T extends users$messages_messages_sender_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$messages_messages_sender_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages_messages_receiver_idTousers<T extends users$messages_messages_receiver_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$messages_messages_receiver_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscriptions_subscriptions_user_idTousers<T extends users$subscriptions_subscriptions_user_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$subscriptions_subscriptions_user_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscriptions_subscriptions_subscriber_idTousers<T extends users$subscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$subscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_chats_user_chats_user1_idTousers<T extends users$user_chats_user_chats_user1_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_chats_user_chats_user1_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_chats_user_chats_user2_idTousers<T extends users$user_chats_user_chats_user2_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_chats_user_chats_user2_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_chatsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_roles<T extends users$user_rolesArgs<ExtArgs> = {}>(args?: Subset<T, users$user_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    video_comments<T extends users$video_commentsArgs<ExtArgs> = {}>(args?: Subset<T, users$video_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    videos<T extends users$videosArgs<ExtArgs> = {}>(args?: Subset<T, users$videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly user_id: FieldRef<"users", 'Int'>
    readonly full_name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly avatar: FieldRef<"users", 'String'>
    readonly pass_word: FieldRef<"users", 'String'>
    readonly face_app_id: FieldRef<"users", 'String'>
    readonly refresh_token: FieldRef<"users", 'String'>
    readonly secret_code: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.forgot_password_code
   */
  export type users$forgot_password_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the forgot_password_code
     */
    select?: forgot_password_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the forgot_password_code
     */
    omit?: forgot_password_codeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: forgot_password_codeInclude<ExtArgs> | null
    where?: forgot_password_codeWhereInput
    orderBy?: forgot_password_codeOrderByWithRelationInput | forgot_password_codeOrderByWithRelationInput[]
    cursor?: forgot_password_codeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Forgot_password_codeScalarFieldEnum | Forgot_password_codeScalarFieldEnum[]
  }

  /**
   * users.group_members
   */
  export type users$group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the group_members
     */
    select?: group_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the group_members
     */
    omit?: group_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: group_membersInclude<ExtArgs> | null
    where?: group_membersWhereInput
    orderBy?: group_membersOrderByWithRelationInput | group_membersOrderByWithRelationInput[]
    cursor?: group_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Group_membersScalarFieldEnum | Group_membersScalarFieldEnum[]
  }

  /**
   * users.likes
   */
  export type users$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    where?: likesWhereInput
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    cursor?: likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * users.messages_messages_sender_idTousers
   */
  export type users$messages_messages_sender_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * users.messages_messages_receiver_idTousers
   */
  export type users$messages_messages_receiver_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * users.subscriptions_subscriptions_user_idTousers
   */
  export type users$subscriptions_subscriptions_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    where?: subscriptionsWhereInput
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    cursor?: subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * users.subscriptions_subscriptions_subscriber_idTousers
   */
  export type users$subscriptions_subscriptions_subscriber_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    where?: subscriptionsWhereInput
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    cursor?: subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * users.user_chats_user_chats_user1_idTousers
   */
  export type users$user_chats_user_chats_user1_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    where?: user_chatsWhereInput
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    cursor?: user_chatsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_chatsScalarFieldEnum | User_chatsScalarFieldEnum[]
  }

  /**
   * users.user_chats_user_chats_user2_idTousers
   */
  export type users$user_chats_user_chats_user2_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_chats
     */
    select?: user_chatsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_chats
     */
    omit?: user_chatsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_chatsInclude<ExtArgs> | null
    where?: user_chatsWhereInput
    orderBy?: user_chatsOrderByWithRelationInput | user_chatsOrderByWithRelationInput[]
    cursor?: user_chatsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_chatsScalarFieldEnum | User_chatsScalarFieldEnum[]
  }

  /**
   * users.user_roles
   */
  export type users$user_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    cursor?: user_rolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * users.video_comments
   */
  export type users$video_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    where?: video_commentsWhereInput
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    cursor?: video_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Video_commentsScalarFieldEnum | Video_commentsScalarFieldEnum[]
  }

  /**
   * users.videos
   */
  export type users$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    cursor?: videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model video_comments
   */

  export type AggregateVideo_comments = {
    _count: Video_commentsCountAggregateOutputType | null
    _avg: Video_commentsAvgAggregateOutputType | null
    _sum: Video_commentsSumAggregateOutputType | null
    _min: Video_commentsMinAggregateOutputType | null
    _max: Video_commentsMaxAggregateOutputType | null
  }

  export type Video_commentsAvgAggregateOutputType = {
    comment_id: number | null
    user_id: number | null
    video_id: number | null
  }

  export type Video_commentsSumAggregateOutputType = {
    comment_id: number | null
    user_id: number | null
    video_id: number | null
  }

  export type Video_commentsMinAggregateOutputType = {
    comment_id: number | null
    created_at: Date | null
    content: string | null
    reply_list: string | null
    user_id: number | null
    video_id: number | null
  }

  export type Video_commentsMaxAggregateOutputType = {
    comment_id: number | null
    created_at: Date | null
    content: string | null
    reply_list: string | null
    user_id: number | null
    video_id: number | null
  }

  export type Video_commentsCountAggregateOutputType = {
    comment_id: number
    created_at: number
    content: number
    reply_list: number
    user_id: number
    video_id: number
    _all: number
  }


  export type Video_commentsAvgAggregateInputType = {
    comment_id?: true
    user_id?: true
    video_id?: true
  }

  export type Video_commentsSumAggregateInputType = {
    comment_id?: true
    user_id?: true
    video_id?: true
  }

  export type Video_commentsMinAggregateInputType = {
    comment_id?: true
    created_at?: true
    content?: true
    reply_list?: true
    user_id?: true
    video_id?: true
  }

  export type Video_commentsMaxAggregateInputType = {
    comment_id?: true
    created_at?: true
    content?: true
    reply_list?: true
    user_id?: true
    video_id?: true
  }

  export type Video_commentsCountAggregateInputType = {
    comment_id?: true
    created_at?: true
    content?: true
    reply_list?: true
    user_id?: true
    video_id?: true
    _all?: true
  }

  export type Video_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_comments to aggregate.
     */
    where?: video_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_comments to fetch.
     */
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: video_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned video_comments
    **/
    _count?: true | Video_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Video_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Video_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Video_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Video_commentsMaxAggregateInputType
  }

  export type GetVideo_commentsAggregateType<T extends Video_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateVideo_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideo_comments[P]>
      : GetScalarType<T[P], AggregateVideo_comments[P]>
  }




  export type video_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_commentsWhereInput
    orderBy?: video_commentsOrderByWithAggregationInput | video_commentsOrderByWithAggregationInput[]
    by: Video_commentsScalarFieldEnum[] | Video_commentsScalarFieldEnum
    having?: video_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Video_commentsCountAggregateInputType | true
    _avg?: Video_commentsAvgAggregateInputType
    _sum?: Video_commentsSumAggregateInputType
    _min?: Video_commentsMinAggregateInputType
    _max?: Video_commentsMaxAggregateInputType
  }

  export type Video_commentsGroupByOutputType = {
    comment_id: number
    created_at: Date | null
    content: string | null
    reply_list: string | null
    user_id: number | null
    video_id: number | null
    _count: Video_commentsCountAggregateOutputType | null
    _avg: Video_commentsAvgAggregateOutputType | null
    _sum: Video_commentsSumAggregateOutputType | null
    _min: Video_commentsMinAggregateOutputType | null
    _max: Video_commentsMaxAggregateOutputType | null
  }

  type GetVideo_commentsGroupByPayload<T extends video_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Video_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Video_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Video_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Video_commentsGroupByOutputType[P]>
        }
      >
    >


  export type video_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_id?: boolean
    created_at?: boolean
    content?: boolean
    reply_list?: boolean
    user_id?: boolean
    video_id?: boolean
    users?: boolean | video_comments$usersArgs<ExtArgs>
    videos?: boolean | video_comments$videosArgs<ExtArgs>
  }, ExtArgs["result"]["video_comments"]>



  export type video_commentsSelectScalar = {
    comment_id?: boolean
    created_at?: boolean
    content?: boolean
    reply_list?: boolean
    user_id?: boolean
    video_id?: boolean
  }

  export type video_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"comment_id" | "created_at" | "content" | "reply_list" | "user_id" | "video_id", ExtArgs["result"]["video_comments"]>
  export type video_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | video_comments$usersArgs<ExtArgs>
    videos?: boolean | video_comments$videosArgs<ExtArgs>
  }

  export type $video_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "video_comments"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      videos: Prisma.$videosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      comment_id: number
      created_at: Date | null
      content: string | null
      reply_list: string | null
      user_id: number | null
      video_id: number | null
    }, ExtArgs["result"]["video_comments"]>
    composites: {}
  }

  type video_commentsGetPayload<S extends boolean | null | undefined | video_commentsDefaultArgs> = $Result.GetResult<Prisma.$video_commentsPayload, S>

  type video_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<video_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Video_commentsCountAggregateInputType | true
    }

  export interface video_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['video_comments'], meta: { name: 'video_comments' } }
    /**
     * Find zero or one Video_comments that matches the filter.
     * @param {video_commentsFindUniqueArgs} args - Arguments to find a Video_comments
     * @example
     * // Get one Video_comments
     * const video_comments = await prisma.video_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends video_commentsFindUniqueArgs>(args: SelectSubset<T, video_commentsFindUniqueArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Video_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {video_commentsFindUniqueOrThrowArgs} args - Arguments to find a Video_comments
     * @example
     * // Get one Video_comments
     * const video_comments = await prisma.video_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends video_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, video_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Video_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsFindFirstArgs} args - Arguments to find a Video_comments
     * @example
     * // Get one Video_comments
     * const video_comments = await prisma.video_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends video_commentsFindFirstArgs>(args?: SelectSubset<T, video_commentsFindFirstArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Video_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsFindFirstOrThrowArgs} args - Arguments to find a Video_comments
     * @example
     * // Get one Video_comments
     * const video_comments = await prisma.video_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends video_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, video_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Video_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Video_comments
     * const video_comments = await prisma.video_comments.findMany()
     * 
     * // Get first 10 Video_comments
     * const video_comments = await prisma.video_comments.findMany({ take: 10 })
     * 
     * // Only select the `comment_id`
     * const video_commentsWithComment_idOnly = await prisma.video_comments.findMany({ select: { comment_id: true } })
     * 
     */
    findMany<T extends video_commentsFindManyArgs>(args?: SelectSubset<T, video_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Video_comments.
     * @param {video_commentsCreateArgs} args - Arguments to create a Video_comments.
     * @example
     * // Create one Video_comments
     * const Video_comments = await prisma.video_comments.create({
     *   data: {
     *     // ... data to create a Video_comments
     *   }
     * })
     * 
     */
    create<T extends video_commentsCreateArgs>(args: SelectSubset<T, video_commentsCreateArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Video_comments.
     * @param {video_commentsCreateManyArgs} args - Arguments to create many Video_comments.
     * @example
     * // Create many Video_comments
     * const video_comments = await prisma.video_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends video_commentsCreateManyArgs>(args?: SelectSubset<T, video_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Video_comments.
     * @param {video_commentsDeleteArgs} args - Arguments to delete one Video_comments.
     * @example
     * // Delete one Video_comments
     * const Video_comments = await prisma.video_comments.delete({
     *   where: {
     *     // ... filter to delete one Video_comments
     *   }
     * })
     * 
     */
    delete<T extends video_commentsDeleteArgs>(args: SelectSubset<T, video_commentsDeleteArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Video_comments.
     * @param {video_commentsUpdateArgs} args - Arguments to update one Video_comments.
     * @example
     * // Update one Video_comments
     * const video_comments = await prisma.video_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends video_commentsUpdateArgs>(args: SelectSubset<T, video_commentsUpdateArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Video_comments.
     * @param {video_commentsDeleteManyArgs} args - Arguments to filter Video_comments to delete.
     * @example
     * // Delete a few Video_comments
     * const { count } = await prisma.video_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends video_commentsDeleteManyArgs>(args?: SelectSubset<T, video_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Video_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Video_comments
     * const video_comments = await prisma.video_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends video_commentsUpdateManyArgs>(args: SelectSubset<T, video_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Video_comments.
     * @param {video_commentsUpsertArgs} args - Arguments to update or create a Video_comments.
     * @example
     * // Update or create a Video_comments
     * const video_comments = await prisma.video_comments.upsert({
     *   create: {
     *     // ... data to create a Video_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Video_comments we want to update
     *   }
     * })
     */
    upsert<T extends video_commentsUpsertArgs>(args: SelectSubset<T, video_commentsUpsertArgs<ExtArgs>>): Prisma__video_commentsClient<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Video_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsCountArgs} args - Arguments to filter Video_comments to count.
     * @example
     * // Count the number of Video_comments
     * const count = await prisma.video_comments.count({
     *   where: {
     *     // ... the filter for the Video_comments we want to count
     *   }
     * })
    **/
    count<T extends video_commentsCountArgs>(
      args?: Subset<T, video_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Video_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Video_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Video_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Video_commentsAggregateArgs>(args: Subset<T, Video_commentsAggregateArgs>): Prisma.PrismaPromise<GetVideo_commentsAggregateType<T>>

    /**
     * Group by Video_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends video_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: video_commentsGroupByArgs['orderBy'] }
        : { orderBy?: video_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, video_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideo_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the video_comments model
   */
  readonly fields: video_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for video_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__video_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends video_comments$usersArgs<ExtArgs> = {}>(args?: Subset<T, video_comments$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    videos<T extends video_comments$videosArgs<ExtArgs> = {}>(args?: Subset<T, video_comments$videosArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the video_comments model
   */ 
  interface video_commentsFieldRefs {
    readonly comment_id: FieldRef<"video_comments", 'Int'>
    readonly created_at: FieldRef<"video_comments", 'DateTime'>
    readonly content: FieldRef<"video_comments", 'String'>
    readonly reply_list: FieldRef<"video_comments", 'String'>
    readonly user_id: FieldRef<"video_comments", 'Int'>
    readonly video_id: FieldRef<"video_comments", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * video_comments findUnique
   */
  export type video_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter, which video_comments to fetch.
     */
    where: video_commentsWhereUniqueInput
  }

  /**
   * video_comments findUniqueOrThrow
   */
  export type video_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter, which video_comments to fetch.
     */
    where: video_commentsWhereUniqueInput
  }

  /**
   * video_comments findFirst
   */
  export type video_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter, which video_comments to fetch.
     */
    where?: video_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_comments to fetch.
     */
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_comments.
     */
    cursor?: video_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_comments.
     */
    distinct?: Video_commentsScalarFieldEnum | Video_commentsScalarFieldEnum[]
  }

  /**
   * video_comments findFirstOrThrow
   */
  export type video_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter, which video_comments to fetch.
     */
    where?: video_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_comments to fetch.
     */
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_comments.
     */
    cursor?: video_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_comments.
     */
    distinct?: Video_commentsScalarFieldEnum | Video_commentsScalarFieldEnum[]
  }

  /**
   * video_comments findMany
   */
  export type video_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter, which video_comments to fetch.
     */
    where?: video_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_comments to fetch.
     */
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing video_comments.
     */
    cursor?: video_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_comments.
     */
    skip?: number
    distinct?: Video_commentsScalarFieldEnum | Video_commentsScalarFieldEnum[]
  }

  /**
   * video_comments create
   */
  export type video_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * The data needed to create a video_comments.
     */
    data?: XOR<video_commentsCreateInput, video_commentsUncheckedCreateInput>
  }

  /**
   * video_comments createMany
   */
  export type video_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many video_comments.
     */
    data: video_commentsCreateManyInput | video_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * video_comments update
   */
  export type video_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * The data needed to update a video_comments.
     */
    data: XOR<video_commentsUpdateInput, video_commentsUncheckedUpdateInput>
    /**
     * Choose, which video_comments to update.
     */
    where: video_commentsWhereUniqueInput
  }

  /**
   * video_comments updateMany
   */
  export type video_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update video_comments.
     */
    data: XOR<video_commentsUpdateManyMutationInput, video_commentsUncheckedUpdateManyInput>
    /**
     * Filter which video_comments to update
     */
    where?: video_commentsWhereInput
    /**
     * Limit how many video_comments to update.
     */
    limit?: number
  }

  /**
   * video_comments upsert
   */
  export type video_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * The filter to search for the video_comments to update in case it exists.
     */
    where: video_commentsWhereUniqueInput
    /**
     * In case the video_comments found by the `where` argument doesn't exist, create a new video_comments with this data.
     */
    create: XOR<video_commentsCreateInput, video_commentsUncheckedCreateInput>
    /**
     * In case the video_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<video_commentsUpdateInput, video_commentsUncheckedUpdateInput>
  }

  /**
   * video_comments delete
   */
  export type video_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    /**
     * Filter which video_comments to delete.
     */
    where: video_commentsWhereUniqueInput
  }

  /**
   * video_comments deleteMany
   */
  export type video_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_comments to delete
     */
    where?: video_commentsWhereInput
    /**
     * Limit how many video_comments to delete.
     */
    limit?: number
  }

  /**
   * video_comments.users
   */
  export type video_comments$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * video_comments.videos
   */
  export type video_comments$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
  }

  /**
   * video_comments without action
   */
  export type video_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
  }


  /**
   * Model video_types
   */

  export type AggregateVideo_types = {
    _count: Video_typesCountAggregateOutputType | null
    _avg: Video_typesAvgAggregateOutputType | null
    _sum: Video_typesSumAggregateOutputType | null
    _min: Video_typesMinAggregateOutputType | null
    _max: Video_typesMaxAggregateOutputType | null
  }

  export type Video_typesAvgAggregateOutputType = {
    type_id: number | null
  }

  export type Video_typesSumAggregateOutputType = {
    type_id: number | null
  }

  export type Video_typesMinAggregateOutputType = {
    type_id: number | null
    type_name: string | null
    icon: string | null
    created_at: Date | null
  }

  export type Video_typesMaxAggregateOutputType = {
    type_id: number | null
    type_name: string | null
    icon: string | null
    created_at: Date | null
  }

  export type Video_typesCountAggregateOutputType = {
    type_id: number
    type_name: number
    icon: number
    created_at: number
    _all: number
  }


  export type Video_typesAvgAggregateInputType = {
    type_id?: true
  }

  export type Video_typesSumAggregateInputType = {
    type_id?: true
  }

  export type Video_typesMinAggregateInputType = {
    type_id?: true
    type_name?: true
    icon?: true
    created_at?: true
  }

  export type Video_typesMaxAggregateInputType = {
    type_id?: true
    type_name?: true
    icon?: true
    created_at?: true
  }

  export type Video_typesCountAggregateInputType = {
    type_id?: true
    type_name?: true
    icon?: true
    created_at?: true
    _all?: true
  }

  export type Video_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_types to aggregate.
     */
    where?: video_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_types to fetch.
     */
    orderBy?: video_typesOrderByWithRelationInput | video_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: video_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned video_types
    **/
    _count?: true | Video_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Video_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Video_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Video_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Video_typesMaxAggregateInputType
  }

  export type GetVideo_typesAggregateType<T extends Video_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateVideo_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideo_types[P]>
      : GetScalarType<T[P], AggregateVideo_types[P]>
  }




  export type video_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: video_typesWhereInput
    orderBy?: video_typesOrderByWithAggregationInput | video_typesOrderByWithAggregationInput[]
    by: Video_typesScalarFieldEnum[] | Video_typesScalarFieldEnum
    having?: video_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Video_typesCountAggregateInputType | true
    _avg?: Video_typesAvgAggregateInputType
    _sum?: Video_typesSumAggregateInputType
    _min?: Video_typesMinAggregateInputType
    _max?: Video_typesMaxAggregateInputType
  }

  export type Video_typesGroupByOutputType = {
    type_id: number
    type_name: string
    icon: string | null
    created_at: Date | null
    _count: Video_typesCountAggregateOutputType | null
    _avg: Video_typesAvgAggregateOutputType | null
    _sum: Video_typesSumAggregateOutputType | null
    _min: Video_typesMinAggregateOutputType | null
    _max: Video_typesMaxAggregateOutputType | null
  }

  type GetVideo_typesGroupByPayload<T extends video_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Video_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Video_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Video_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Video_typesGroupByOutputType[P]>
        }
      >
    >


  export type video_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    type_id?: boolean
    type_name?: boolean
    icon?: boolean
    created_at?: boolean
    videos?: boolean | video_types$videosArgs<ExtArgs>
    _count?: boolean | Video_typesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["video_types"]>



  export type video_typesSelectScalar = {
    type_id?: boolean
    type_name?: boolean
    icon?: boolean
    created_at?: boolean
  }

  export type video_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"type_id" | "type_name" | "icon" | "created_at", ExtArgs["result"]["video_types"]>
  export type video_typesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    videos?: boolean | video_types$videosArgs<ExtArgs>
    _count?: boolean | Video_typesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $video_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "video_types"
    objects: {
      videos: Prisma.$videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      type_id: number
      type_name: string
      icon: string | null
      created_at: Date | null
    }, ExtArgs["result"]["video_types"]>
    composites: {}
  }

  type video_typesGetPayload<S extends boolean | null | undefined | video_typesDefaultArgs> = $Result.GetResult<Prisma.$video_typesPayload, S>

  type video_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<video_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Video_typesCountAggregateInputType | true
    }

  export interface video_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['video_types'], meta: { name: 'video_types' } }
    /**
     * Find zero or one Video_types that matches the filter.
     * @param {video_typesFindUniqueArgs} args - Arguments to find a Video_types
     * @example
     * // Get one Video_types
     * const video_types = await prisma.video_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends video_typesFindUniqueArgs>(args: SelectSubset<T, video_typesFindUniqueArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Video_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {video_typesFindUniqueOrThrowArgs} args - Arguments to find a Video_types
     * @example
     * // Get one Video_types
     * const video_types = await prisma.video_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends video_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, video_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Video_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesFindFirstArgs} args - Arguments to find a Video_types
     * @example
     * // Get one Video_types
     * const video_types = await prisma.video_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends video_typesFindFirstArgs>(args?: SelectSubset<T, video_typesFindFirstArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Video_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesFindFirstOrThrowArgs} args - Arguments to find a Video_types
     * @example
     * // Get one Video_types
     * const video_types = await prisma.video_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends video_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, video_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Video_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Video_types
     * const video_types = await prisma.video_types.findMany()
     * 
     * // Get first 10 Video_types
     * const video_types = await prisma.video_types.findMany({ take: 10 })
     * 
     * // Only select the `type_id`
     * const video_typesWithType_idOnly = await prisma.video_types.findMany({ select: { type_id: true } })
     * 
     */
    findMany<T extends video_typesFindManyArgs>(args?: SelectSubset<T, video_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Video_types.
     * @param {video_typesCreateArgs} args - Arguments to create a Video_types.
     * @example
     * // Create one Video_types
     * const Video_types = await prisma.video_types.create({
     *   data: {
     *     // ... data to create a Video_types
     *   }
     * })
     * 
     */
    create<T extends video_typesCreateArgs>(args: SelectSubset<T, video_typesCreateArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Video_types.
     * @param {video_typesCreateManyArgs} args - Arguments to create many Video_types.
     * @example
     * // Create many Video_types
     * const video_types = await prisma.video_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends video_typesCreateManyArgs>(args?: SelectSubset<T, video_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Video_types.
     * @param {video_typesDeleteArgs} args - Arguments to delete one Video_types.
     * @example
     * // Delete one Video_types
     * const Video_types = await prisma.video_types.delete({
     *   where: {
     *     // ... filter to delete one Video_types
     *   }
     * })
     * 
     */
    delete<T extends video_typesDeleteArgs>(args: SelectSubset<T, video_typesDeleteArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Video_types.
     * @param {video_typesUpdateArgs} args - Arguments to update one Video_types.
     * @example
     * // Update one Video_types
     * const video_types = await prisma.video_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends video_typesUpdateArgs>(args: SelectSubset<T, video_typesUpdateArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Video_types.
     * @param {video_typesDeleteManyArgs} args - Arguments to filter Video_types to delete.
     * @example
     * // Delete a few Video_types
     * const { count } = await prisma.video_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends video_typesDeleteManyArgs>(args?: SelectSubset<T, video_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Video_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Video_types
     * const video_types = await prisma.video_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends video_typesUpdateManyArgs>(args: SelectSubset<T, video_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Video_types.
     * @param {video_typesUpsertArgs} args - Arguments to update or create a Video_types.
     * @example
     * // Update or create a Video_types
     * const video_types = await prisma.video_types.upsert({
     *   create: {
     *     // ... data to create a Video_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Video_types we want to update
     *   }
     * })
     */
    upsert<T extends video_typesUpsertArgs>(args: SelectSubset<T, video_typesUpsertArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Video_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesCountArgs} args - Arguments to filter Video_types to count.
     * @example
     * // Count the number of Video_types
     * const count = await prisma.video_types.count({
     *   where: {
     *     // ... the filter for the Video_types we want to count
     *   }
     * })
    **/
    count<T extends video_typesCountArgs>(
      args?: Subset<T, video_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Video_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Video_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Video_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Video_typesAggregateArgs>(args: Subset<T, Video_typesAggregateArgs>): Prisma.PrismaPromise<GetVideo_typesAggregateType<T>>

    /**
     * Group by Video_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {video_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends video_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: video_typesGroupByArgs['orderBy'] }
        : { orderBy?: video_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, video_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideo_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the video_types model
   */
  readonly fields: video_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for video_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__video_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    videos<T extends video_types$videosArgs<ExtArgs> = {}>(args?: Subset<T, video_types$videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the video_types model
   */ 
  interface video_typesFieldRefs {
    readonly type_id: FieldRef<"video_types", 'Int'>
    readonly type_name: FieldRef<"video_types", 'String'>
    readonly icon: FieldRef<"video_types", 'String'>
    readonly created_at: FieldRef<"video_types", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * video_types findUnique
   */
  export type video_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter, which video_types to fetch.
     */
    where: video_typesWhereUniqueInput
  }

  /**
   * video_types findUniqueOrThrow
   */
  export type video_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter, which video_types to fetch.
     */
    where: video_typesWhereUniqueInput
  }

  /**
   * video_types findFirst
   */
  export type video_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter, which video_types to fetch.
     */
    where?: video_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_types to fetch.
     */
    orderBy?: video_typesOrderByWithRelationInput | video_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_types.
     */
    cursor?: video_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_types.
     */
    distinct?: Video_typesScalarFieldEnum | Video_typesScalarFieldEnum[]
  }

  /**
   * video_types findFirstOrThrow
   */
  export type video_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter, which video_types to fetch.
     */
    where?: video_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_types to fetch.
     */
    orderBy?: video_typesOrderByWithRelationInput | video_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for video_types.
     */
    cursor?: video_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of video_types.
     */
    distinct?: Video_typesScalarFieldEnum | Video_typesScalarFieldEnum[]
  }

  /**
   * video_types findMany
   */
  export type video_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter, which video_types to fetch.
     */
    where?: video_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of video_types to fetch.
     */
    orderBy?: video_typesOrderByWithRelationInput | video_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing video_types.
     */
    cursor?: video_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` video_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` video_types.
     */
    skip?: number
    distinct?: Video_typesScalarFieldEnum | Video_typesScalarFieldEnum[]
  }

  /**
   * video_types create
   */
  export type video_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * The data needed to create a video_types.
     */
    data: XOR<video_typesCreateInput, video_typesUncheckedCreateInput>
  }

  /**
   * video_types createMany
   */
  export type video_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many video_types.
     */
    data: video_typesCreateManyInput | video_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * video_types update
   */
  export type video_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * The data needed to update a video_types.
     */
    data: XOR<video_typesUpdateInput, video_typesUncheckedUpdateInput>
    /**
     * Choose, which video_types to update.
     */
    where: video_typesWhereUniqueInput
  }

  /**
   * video_types updateMany
   */
  export type video_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update video_types.
     */
    data: XOR<video_typesUpdateManyMutationInput, video_typesUncheckedUpdateManyInput>
    /**
     * Filter which video_types to update
     */
    where?: video_typesWhereInput
    /**
     * Limit how many video_types to update.
     */
    limit?: number
  }

  /**
   * video_types upsert
   */
  export type video_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * The filter to search for the video_types to update in case it exists.
     */
    where: video_typesWhereUniqueInput
    /**
     * In case the video_types found by the `where` argument doesn't exist, create a new video_types with this data.
     */
    create: XOR<video_typesCreateInput, video_typesUncheckedCreateInput>
    /**
     * In case the video_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<video_typesUpdateInput, video_typesUncheckedUpdateInput>
  }

  /**
   * video_types delete
   */
  export type video_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    /**
     * Filter which video_types to delete.
     */
    where: video_typesWhereUniqueInput
  }

  /**
   * video_types deleteMany
   */
  export type video_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which video_types to delete
     */
    where?: video_typesWhereInput
    /**
     * Limit how many video_types to delete.
     */
    limit?: number
  }

  /**
   * video_types.videos
   */
  export type video_types$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    cursor?: videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }

  /**
   * video_types without action
   */
  export type video_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
  }


  /**
   * Model videos
   */

  export type AggregateVideos = {
    _count: VideosCountAggregateOutputType | null
    _avg: VideosAvgAggregateOutputType | null
    _sum: VideosSumAggregateOutputType | null
    _min: VideosMinAggregateOutputType | null
    _max: VideosMaxAggregateOutputType | null
  }

  export type VideosAvgAggregateOutputType = {
    video_id: number | null
    views: number | null
    type_id: number | null
    user_id: number | null
  }

  export type VideosSumAggregateOutputType = {
    video_id: number | null
    views: number | null
    type_id: number | null
    user_id: number | null
  }

  export type VideosMinAggregateOutputType = {
    video_id: number | null
    video_name: string | null
    thumbnail: string | null
    description: string | null
    views: number | null
    type_id: number | null
    user_id: number | null
    source: string | null
    created_at: Date | null
  }

  export type VideosMaxAggregateOutputType = {
    video_id: number | null
    video_name: string | null
    thumbnail: string | null
    description: string | null
    views: number | null
    type_id: number | null
    user_id: number | null
    source: string | null
    created_at: Date | null
  }

  export type VideosCountAggregateOutputType = {
    video_id: number
    video_name: number
    thumbnail: number
    description: number
    views: number
    type_id: number
    user_id: number
    source: number
    created_at: number
    _all: number
  }


  export type VideosAvgAggregateInputType = {
    video_id?: true
    views?: true
    type_id?: true
    user_id?: true
  }

  export type VideosSumAggregateInputType = {
    video_id?: true
    views?: true
    type_id?: true
    user_id?: true
  }

  export type VideosMinAggregateInputType = {
    video_id?: true
    video_name?: true
    thumbnail?: true
    description?: true
    views?: true
    type_id?: true
    user_id?: true
    source?: true
    created_at?: true
  }

  export type VideosMaxAggregateInputType = {
    video_id?: true
    video_name?: true
    thumbnail?: true
    description?: true
    views?: true
    type_id?: true
    user_id?: true
    source?: true
    created_at?: true
  }

  export type VideosCountAggregateInputType = {
    video_id?: true
    video_name?: true
    thumbnail?: true
    description?: true
    views?: true
    type_id?: true
    user_id?: true
    source?: true
    created_at?: true
    _all?: true
  }

  export type VideosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos to aggregate.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned videos
    **/
    _count?: true | VideosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VideosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VideosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VideosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VideosMaxAggregateInputType
  }

  export type GetVideosAggregateType<T extends VideosAggregateArgs> = {
        [P in keyof T & keyof AggregateVideos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideos[P]>
      : GetScalarType<T[P], AggregateVideos[P]>
  }




  export type videosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
    orderBy?: videosOrderByWithAggregationInput | videosOrderByWithAggregationInput[]
    by: VideosScalarFieldEnum[] | VideosScalarFieldEnum
    having?: videosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VideosCountAggregateInputType | true
    _avg?: VideosAvgAggregateInputType
    _sum?: VideosSumAggregateInputType
    _min?: VideosMinAggregateInputType
    _max?: VideosMaxAggregateInputType
  }

  export type VideosGroupByOutputType = {
    video_id: number
    video_name: string
    thumbnail: string | null
    description: string | null
    views: number | null
    type_id: number | null
    user_id: number | null
    source: string | null
    created_at: Date | null
    _count: VideosCountAggregateOutputType | null
    _avg: VideosAvgAggregateOutputType | null
    _sum: VideosSumAggregateOutputType | null
    _min: VideosMinAggregateOutputType | null
    _max: VideosMaxAggregateOutputType | null
  }

  type GetVideosGroupByPayload<T extends videosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VideosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VideosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VideosGroupByOutputType[P]>
            : GetScalarType<T[P], VideosGroupByOutputType[P]>
        }
      >
    >


  export type videosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    video_id?: boolean
    video_name?: boolean
    thumbnail?: boolean
    description?: boolean
    views?: boolean
    type_id?: boolean
    user_id?: boolean
    source?: boolean
    created_at?: boolean
    likes?: boolean | videos$likesArgs<ExtArgs>
    video_comments?: boolean | videos$video_commentsArgs<ExtArgs>
    video_types?: boolean | videos$video_typesArgs<ExtArgs>
    users?: boolean | videos$usersArgs<ExtArgs>
    _count?: boolean | VideosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["videos"]>



  export type videosSelectScalar = {
    video_id?: boolean
    video_name?: boolean
    thumbnail?: boolean
    description?: boolean
    views?: boolean
    type_id?: boolean
    user_id?: boolean
    source?: boolean
    created_at?: boolean
  }

  export type videosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"video_id" | "video_name" | "thumbnail" | "description" | "views" | "type_id" | "user_id" | "source" | "created_at", ExtArgs["result"]["videos"]>
  export type videosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    likes?: boolean | videos$likesArgs<ExtArgs>
    video_comments?: boolean | videos$video_commentsArgs<ExtArgs>
    video_types?: boolean | videos$video_typesArgs<ExtArgs>
    users?: boolean | videos$usersArgs<ExtArgs>
    _count?: boolean | VideosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $videosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "videos"
    objects: {
      likes: Prisma.$likesPayload<ExtArgs>[]
      video_comments: Prisma.$video_commentsPayload<ExtArgs>[]
      video_types: Prisma.$video_typesPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      video_id: number
      video_name: string
      thumbnail: string | null
      description: string | null
      views: number | null
      type_id: number | null
      user_id: number | null
      source: string | null
      created_at: Date | null
    }, ExtArgs["result"]["videos"]>
    composites: {}
  }

  type videosGetPayload<S extends boolean | null | undefined | videosDefaultArgs> = $Result.GetResult<Prisma.$videosPayload, S>

  type videosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<videosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VideosCountAggregateInputType | true
    }

  export interface videosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['videos'], meta: { name: 'videos' } }
    /**
     * Find zero or one Videos that matches the filter.
     * @param {videosFindUniqueArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends videosFindUniqueArgs>(args: SelectSubset<T, videosFindUniqueArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Videos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {videosFindUniqueOrThrowArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends videosFindUniqueOrThrowArgs>(args: SelectSubset<T, videosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindFirstArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends videosFindFirstArgs>(args?: SelectSubset<T, videosFindFirstArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Videos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindFirstOrThrowArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends videosFindFirstOrThrowArgs>(args?: SelectSubset<T, videosFindFirstOrThrowArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Videos
     * const videos = await prisma.videos.findMany()
     * 
     * // Get first 10 Videos
     * const videos = await prisma.videos.findMany({ take: 10 })
     * 
     * // Only select the `video_id`
     * const videosWithVideo_idOnly = await prisma.videos.findMany({ select: { video_id: true } })
     * 
     */
    findMany<T extends videosFindManyArgs>(args?: SelectSubset<T, videosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Videos.
     * @param {videosCreateArgs} args - Arguments to create a Videos.
     * @example
     * // Create one Videos
     * const Videos = await prisma.videos.create({
     *   data: {
     *     // ... data to create a Videos
     *   }
     * })
     * 
     */
    create<T extends videosCreateArgs>(args: SelectSubset<T, videosCreateArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Videos.
     * @param {videosCreateManyArgs} args - Arguments to create many Videos.
     * @example
     * // Create many Videos
     * const videos = await prisma.videos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends videosCreateManyArgs>(args?: SelectSubset<T, videosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Videos.
     * @param {videosDeleteArgs} args - Arguments to delete one Videos.
     * @example
     * // Delete one Videos
     * const Videos = await prisma.videos.delete({
     *   where: {
     *     // ... filter to delete one Videos
     *   }
     * })
     * 
     */
    delete<T extends videosDeleteArgs>(args: SelectSubset<T, videosDeleteArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Videos.
     * @param {videosUpdateArgs} args - Arguments to update one Videos.
     * @example
     * // Update one Videos
     * const videos = await prisma.videos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends videosUpdateArgs>(args: SelectSubset<T, videosUpdateArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Videos.
     * @param {videosDeleteManyArgs} args - Arguments to filter Videos to delete.
     * @example
     * // Delete a few Videos
     * const { count } = await prisma.videos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends videosDeleteManyArgs>(args?: SelectSubset<T, videosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Videos
     * const videos = await prisma.videos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends videosUpdateManyArgs>(args: SelectSubset<T, videosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Videos.
     * @param {videosUpsertArgs} args - Arguments to update or create a Videos.
     * @example
     * // Update or create a Videos
     * const videos = await prisma.videos.upsert({
     *   create: {
     *     // ... data to create a Videos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Videos we want to update
     *   }
     * })
     */
    upsert<T extends videosUpsertArgs>(args: SelectSubset<T, videosUpsertArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosCountArgs} args - Arguments to filter Videos to count.
     * @example
     * // Count the number of Videos
     * const count = await prisma.videos.count({
     *   where: {
     *     // ... the filter for the Videos we want to count
     *   }
     * })
    **/
    count<T extends videosCountArgs>(
      args?: Subset<T, videosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VideosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VideosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VideosAggregateArgs>(args: Subset<T, VideosAggregateArgs>): Prisma.PrismaPromise<GetVideosAggregateType<T>>

    /**
     * Group by Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends videosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: videosGroupByArgs['orderBy'] }
        : { orderBy?: videosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, videosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the videos model
   */
  readonly fields: videosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for videos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__videosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    likes<T extends videos$likesArgs<ExtArgs> = {}>(args?: Subset<T, videos$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    video_comments<T extends videos$video_commentsArgs<ExtArgs> = {}>(args?: Subset<T, videos$video_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$video_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    video_types<T extends videos$video_typesArgs<ExtArgs> = {}>(args?: Subset<T, videos$video_typesArgs<ExtArgs>>): Prisma__video_typesClient<$Result.GetResult<Prisma.$video_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends videos$usersArgs<ExtArgs> = {}>(args?: Subset<T, videos$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the videos model
   */ 
  interface videosFieldRefs {
    readonly video_id: FieldRef<"videos", 'Int'>
    readonly video_name: FieldRef<"videos", 'String'>
    readonly thumbnail: FieldRef<"videos", 'String'>
    readonly description: FieldRef<"videos", 'String'>
    readonly views: FieldRef<"videos", 'Int'>
    readonly type_id: FieldRef<"videos", 'Int'>
    readonly user_id: FieldRef<"videos", 'Int'>
    readonly source: FieldRef<"videos", 'String'>
    readonly created_at: FieldRef<"videos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * videos findUnique
   */
  export type videosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where: videosWhereUniqueInput
  }

  /**
   * videos findUniqueOrThrow
   */
  export type videosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where: videosWhereUniqueInput
  }

  /**
   * videos findFirst
   */
  export type videosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos.
     */
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }

  /**
   * videos findFirstOrThrow
   */
  export type videosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos.
     */
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }

  /**
   * videos findMany
   */
  export type videosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }

  /**
   * videos create
   */
  export type videosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The data needed to create a videos.
     */
    data: XOR<videosCreateInput, videosUncheckedCreateInput>
  }

  /**
   * videos createMany
   */
  export type videosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many videos.
     */
    data: videosCreateManyInput | videosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * videos update
   */
  export type videosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The data needed to update a videos.
     */
    data: XOR<videosUpdateInput, videosUncheckedUpdateInput>
    /**
     * Choose, which videos to update.
     */
    where: videosWhereUniqueInput
  }

  /**
   * videos updateMany
   */
  export type videosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update videos.
     */
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyInput>
    /**
     * Filter which videos to update
     */
    where?: videosWhereInput
    /**
     * Limit how many videos to update.
     */
    limit?: number
  }

  /**
   * videos upsert
   */
  export type videosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The filter to search for the videos to update in case it exists.
     */
    where: videosWhereUniqueInput
    /**
     * In case the videos found by the `where` argument doesn't exist, create a new videos with this data.
     */
    create: XOR<videosCreateInput, videosUncheckedCreateInput>
    /**
     * In case the videos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<videosUpdateInput, videosUncheckedUpdateInput>
  }

  /**
   * videos delete
   */
  export type videosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter which videos to delete.
     */
    where: videosWhereUniqueInput
  }

  /**
   * videos deleteMany
   */
  export type videosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos to delete
     */
    where?: videosWhereInput
    /**
     * Limit how many videos to delete.
     */
    limit?: number
  }

  /**
   * videos.likes
   */
  export type videos$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    where?: likesWhereInput
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    cursor?: likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * videos.video_comments
   */
  export type videos$video_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_comments
     */
    select?: video_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_comments
     */
    omit?: video_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_commentsInclude<ExtArgs> | null
    where?: video_commentsWhereInput
    orderBy?: video_commentsOrderByWithRelationInput | video_commentsOrderByWithRelationInput[]
    cursor?: video_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Video_commentsScalarFieldEnum | Video_commentsScalarFieldEnum[]
  }

  /**
   * videos.video_types
   */
  export type videos$video_typesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the video_types
     */
    select?: video_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the video_types
     */
    omit?: video_typesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: video_typesInclude<ExtArgs> | null
    where?: video_typesWhereInput
  }

  /**
   * videos.users
   */
  export type videos$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * videos without action
   */
  export type videosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the videos
     */
    omit?: videosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: videosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Forgot_password_codeScalarFieldEnum: {
    id: 'id',
    forgot_code: 'forgot_code',
    user_id: 'user_id',
    expired: 'expired'
  };

  export type Forgot_password_codeScalarFieldEnum = (typeof Forgot_password_codeScalarFieldEnum)[keyof typeof Forgot_password_codeScalarFieldEnum]


  export const Group_membersScalarFieldEnum: {
    group_member_id: 'group_member_id',
    group_id: 'group_id',
    user_id: 'user_id',
    joined_at: 'joined_at'
  };

  export type Group_membersScalarFieldEnum = (typeof Group_membersScalarFieldEnum)[keyof typeof Group_membersScalarFieldEnum]


  export const GroupsScalarFieldEnum: {
    group_id: 'group_id',
    group_name: 'group_name',
    created_at: 'created_at'
  };

  export type GroupsScalarFieldEnum = (typeof GroupsScalarFieldEnum)[keyof typeof GroupsScalarFieldEnum]


  export const LikesScalarFieldEnum: {
    like_id: 'like_id',
    user_id: 'user_id',
    video_id: 'video_id',
    type: 'type',
    created_at: 'created_at'
  };

  export type LikesScalarFieldEnum = (typeof LikesScalarFieldEnum)[keyof typeof LikesScalarFieldEnum]


  export const Menu_sidebarScalarFieldEnum: {
    id: 'id',
    item_name: 'item_name',
    icon: 'icon',
    created_at: 'created_at'
  };

  export type Menu_sidebarScalarFieldEnum = (typeof Menu_sidebarScalarFieldEnum)[keyof typeof Menu_sidebarScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    message_id: 'message_id',
    sender_id: 'sender_id',
    receiver_id: 'receiver_id',
    group_id: 'group_id',
    message_text: 'message_text',
    created_at: 'created_at'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const PermissionsScalarFieldEnum: {
    permission_id: 'permission_id',
    permission_name: 'permission_name',
    description: 'description'
  };

  export type PermissionsScalarFieldEnum = (typeof PermissionsScalarFieldEnum)[keyof typeof PermissionsScalarFieldEnum]


  export const Role_permissionsScalarFieldEnum: {
    role_permission_id: 'role_permission_id',
    role_id: 'role_id',
    permission_id: 'permission_id'
  };

  export type Role_permissionsScalarFieldEnum = (typeof Role_permissionsScalarFieldEnum)[keyof typeof Role_permissionsScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    role_id: 'role_id',
    role_name: 'role_name'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const SubscriptionsScalarFieldEnum: {
    subscription_id: 'subscription_id',
    user_id: 'user_id',
    subscriber_id: 'subscriber_id',
    created_at: 'created_at'
  };

  export type SubscriptionsScalarFieldEnum = (typeof SubscriptionsScalarFieldEnum)[keyof typeof SubscriptionsScalarFieldEnum]


  export const User_chatsScalarFieldEnum: {
    chat_id: 'chat_id',
    user1_id: 'user1_id',
    user2_id: 'user2_id',
    created_at: 'created_at'
  };

  export type User_chatsScalarFieldEnum = (typeof User_chatsScalarFieldEnum)[keyof typeof User_chatsScalarFieldEnum]


  export const User_rolesScalarFieldEnum: {
    user_role_id: 'user_role_id',
    user_id: 'user_id',
    role_id: 'role_id'
  };

  export type User_rolesScalarFieldEnum = (typeof User_rolesScalarFieldEnum)[keyof typeof User_rolesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    full_name: 'full_name',
    email: 'email',
    avatar: 'avatar',
    pass_word: 'pass_word',
    face_app_id: 'face_app_id',
    refresh_token: 'refresh_token',
    secret_code: 'secret_code',
    created_at: 'created_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Video_commentsScalarFieldEnum: {
    comment_id: 'comment_id',
    created_at: 'created_at',
    content: 'content',
    reply_list: 'reply_list',
    user_id: 'user_id',
    video_id: 'video_id'
  };

  export type Video_commentsScalarFieldEnum = (typeof Video_commentsScalarFieldEnum)[keyof typeof Video_commentsScalarFieldEnum]


  export const Video_typesScalarFieldEnum: {
    type_id: 'type_id',
    type_name: 'type_name',
    icon: 'icon',
    created_at: 'created_at'
  };

  export type Video_typesScalarFieldEnum = (typeof Video_typesScalarFieldEnum)[keyof typeof Video_typesScalarFieldEnum]


  export const VideosScalarFieldEnum: {
    video_id: 'video_id',
    video_name: 'video_name',
    thumbnail: 'thumbnail',
    description: 'description',
    views: 'views',
    type_id: 'type_id',
    user_id: 'user_id',
    source: 'source',
    created_at: 'created_at'
  };

  export type VideosScalarFieldEnum = (typeof VideosScalarFieldEnum)[keyof typeof VideosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const forgot_password_codeOrderByRelevanceFieldEnum: {
    forgot_code: 'forgot_code'
  };

  export type forgot_password_codeOrderByRelevanceFieldEnum = (typeof forgot_password_codeOrderByRelevanceFieldEnum)[keyof typeof forgot_password_codeOrderByRelevanceFieldEnum]


  export const groupsOrderByRelevanceFieldEnum: {
    group_name: 'group_name'
  };

  export type groupsOrderByRelevanceFieldEnum = (typeof groupsOrderByRelevanceFieldEnum)[keyof typeof groupsOrderByRelevanceFieldEnum]


  export const menu_sidebarOrderByRelevanceFieldEnum: {
    item_name: 'item_name',
    icon: 'icon'
  };

  export type menu_sidebarOrderByRelevanceFieldEnum = (typeof menu_sidebarOrderByRelevanceFieldEnum)[keyof typeof menu_sidebarOrderByRelevanceFieldEnum]


  export const messagesOrderByRelevanceFieldEnum: {
    message_text: 'message_text'
  };

  export type messagesOrderByRelevanceFieldEnum = (typeof messagesOrderByRelevanceFieldEnum)[keyof typeof messagesOrderByRelevanceFieldEnum]


  export const permissionsOrderByRelevanceFieldEnum: {
    permission_name: 'permission_name',
    description: 'description'
  };

  export type permissionsOrderByRelevanceFieldEnum = (typeof permissionsOrderByRelevanceFieldEnum)[keyof typeof permissionsOrderByRelevanceFieldEnum]


  export const rolesOrderByRelevanceFieldEnum: {
    role_name: 'role_name'
  };

  export type rolesOrderByRelevanceFieldEnum = (typeof rolesOrderByRelevanceFieldEnum)[keyof typeof rolesOrderByRelevanceFieldEnum]


  export const usersOrderByRelevanceFieldEnum: {
    full_name: 'full_name',
    email: 'email',
    avatar: 'avatar',
    pass_word: 'pass_word',
    face_app_id: 'face_app_id',
    refresh_token: 'refresh_token',
    secret_code: 'secret_code'
  };

  export type usersOrderByRelevanceFieldEnum = (typeof usersOrderByRelevanceFieldEnum)[keyof typeof usersOrderByRelevanceFieldEnum]


  export const video_commentsOrderByRelevanceFieldEnum: {
    content: 'content',
    reply_list: 'reply_list'
  };

  export type video_commentsOrderByRelevanceFieldEnum = (typeof video_commentsOrderByRelevanceFieldEnum)[keyof typeof video_commentsOrderByRelevanceFieldEnum]


  export const video_typesOrderByRelevanceFieldEnum: {
    type_name: 'type_name',
    icon: 'icon'
  };

  export type video_typesOrderByRelevanceFieldEnum = (typeof video_typesOrderByRelevanceFieldEnum)[keyof typeof video_typesOrderByRelevanceFieldEnum]


  export const videosOrderByRelevanceFieldEnum: {
    video_name: 'video_name',
    thumbnail: 'thumbnail',
    description: 'description',
    source: 'source'
  };

  export type videosOrderByRelevanceFieldEnum = (typeof videosOrderByRelevanceFieldEnum)[keyof typeof videosOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'likes_type'
   */
  export type Enumlikes_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'likes_type'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type forgot_password_codeWhereInput = {
    AND?: forgot_password_codeWhereInput | forgot_password_codeWhereInput[]
    OR?: forgot_password_codeWhereInput[]
    NOT?: forgot_password_codeWhereInput | forgot_password_codeWhereInput[]
    id?: IntFilter<"forgot_password_code"> | number
    forgot_code?: StringNullableFilter<"forgot_password_code"> | string | null
    user_id?: IntNullableFilter<"forgot_password_code"> | number | null
    expired?: DateTimeNullableFilter<"forgot_password_code"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type forgot_password_codeOrderByWithRelationInput = {
    id?: SortOrder
    forgot_code?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    expired?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    _relevance?: forgot_password_codeOrderByRelevanceInput
  }

  export type forgot_password_codeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: forgot_password_codeWhereInput | forgot_password_codeWhereInput[]
    OR?: forgot_password_codeWhereInput[]
    NOT?: forgot_password_codeWhereInput | forgot_password_codeWhereInput[]
    forgot_code?: StringNullableFilter<"forgot_password_code"> | string | null
    user_id?: IntNullableFilter<"forgot_password_code"> | number | null
    expired?: DateTimeNullableFilter<"forgot_password_code"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type forgot_password_codeOrderByWithAggregationInput = {
    id?: SortOrder
    forgot_code?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: forgot_password_codeCountOrderByAggregateInput
    _avg?: forgot_password_codeAvgOrderByAggregateInput
    _max?: forgot_password_codeMaxOrderByAggregateInput
    _min?: forgot_password_codeMinOrderByAggregateInput
    _sum?: forgot_password_codeSumOrderByAggregateInput
  }

  export type forgot_password_codeScalarWhereWithAggregatesInput = {
    AND?: forgot_password_codeScalarWhereWithAggregatesInput | forgot_password_codeScalarWhereWithAggregatesInput[]
    OR?: forgot_password_codeScalarWhereWithAggregatesInput[]
    NOT?: forgot_password_codeScalarWhereWithAggregatesInput | forgot_password_codeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"forgot_password_code"> | number
    forgot_code?: StringNullableWithAggregatesFilter<"forgot_password_code"> | string | null
    user_id?: IntNullableWithAggregatesFilter<"forgot_password_code"> | number | null
    expired?: DateTimeNullableWithAggregatesFilter<"forgot_password_code"> | Date | string | null
  }

  export type group_membersWhereInput = {
    AND?: group_membersWhereInput | group_membersWhereInput[]
    OR?: group_membersWhereInput[]
    NOT?: group_membersWhereInput | group_membersWhereInput[]
    group_member_id?: IntFilter<"group_members"> | number
    group_id?: IntFilter<"group_members"> | number
    user_id?: IntFilter<"group_members"> | number
    joined_at?: DateTimeNullableFilter<"group_members"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type group_membersOrderByWithRelationInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
    joined_at?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type group_membersWhereUniqueInput = Prisma.AtLeast<{
    group_member_id?: number
    AND?: group_membersWhereInput | group_membersWhereInput[]
    OR?: group_membersWhereInput[]
    NOT?: group_membersWhereInput | group_membersWhereInput[]
    group_id?: IntFilter<"group_members"> | number
    user_id?: IntFilter<"group_members"> | number
    joined_at?: DateTimeNullableFilter<"group_members"> | Date | string | null
    groups?: XOR<GroupsScalarRelationFilter, groupsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "group_member_id">

  export type group_membersOrderByWithAggregationInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
    joined_at?: SortOrderInput | SortOrder
    _count?: group_membersCountOrderByAggregateInput
    _avg?: group_membersAvgOrderByAggregateInput
    _max?: group_membersMaxOrderByAggregateInput
    _min?: group_membersMinOrderByAggregateInput
    _sum?: group_membersSumOrderByAggregateInput
  }

  export type group_membersScalarWhereWithAggregatesInput = {
    AND?: group_membersScalarWhereWithAggregatesInput | group_membersScalarWhereWithAggregatesInput[]
    OR?: group_membersScalarWhereWithAggregatesInput[]
    NOT?: group_membersScalarWhereWithAggregatesInput | group_membersScalarWhereWithAggregatesInput[]
    group_member_id?: IntWithAggregatesFilter<"group_members"> | number
    group_id?: IntWithAggregatesFilter<"group_members"> | number
    user_id?: IntWithAggregatesFilter<"group_members"> | number
    joined_at?: DateTimeNullableWithAggregatesFilter<"group_members"> | Date | string | null
  }

  export type groupsWhereInput = {
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    group_id?: IntFilter<"groups"> | number
    group_name?: StringFilter<"groups"> | string
    created_at?: DateTimeNullableFilter<"groups"> | Date | string | null
    group_members?: Group_membersListRelationFilter
    messages?: MessagesListRelationFilter
  }

  export type groupsOrderByWithRelationInput = {
    group_id?: SortOrder
    group_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    group_members?: group_membersOrderByRelationAggregateInput
    messages?: messagesOrderByRelationAggregateInput
    _relevance?: groupsOrderByRelevanceInput
  }

  export type groupsWhereUniqueInput = Prisma.AtLeast<{
    group_id?: number
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    group_name?: StringFilter<"groups"> | string
    created_at?: DateTimeNullableFilter<"groups"> | Date | string | null
    group_members?: Group_membersListRelationFilter
    messages?: MessagesListRelationFilter
  }, "group_id">

  export type groupsOrderByWithAggregationInput = {
    group_id?: SortOrder
    group_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: groupsCountOrderByAggregateInput
    _avg?: groupsAvgOrderByAggregateInput
    _max?: groupsMaxOrderByAggregateInput
    _min?: groupsMinOrderByAggregateInput
    _sum?: groupsSumOrderByAggregateInput
  }

  export type groupsScalarWhereWithAggregatesInput = {
    AND?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    OR?: groupsScalarWhereWithAggregatesInput[]
    NOT?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    group_id?: IntWithAggregatesFilter<"groups"> | number
    group_name?: StringWithAggregatesFilter<"groups"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"groups"> | Date | string | null
  }

  export type likesWhereInput = {
    AND?: likesWhereInput | likesWhereInput[]
    OR?: likesWhereInput[]
    NOT?: likesWhereInput | likesWhereInput[]
    like_id?: IntFilter<"likes"> | number
    user_id?: IntFilter<"likes"> | number
    video_id?: IntNullableFilter<"likes"> | number | null
    type?: Enumlikes_typeFilter<"likes"> | $Enums.likes_type
    created_at?: DateTimeNullableFilter<"likes"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    videos?: XOR<VideosNullableScalarRelationFilter, videosWhereInput> | null
  }

  export type likesOrderByWithRelationInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    videos?: videosOrderByWithRelationInput
  }

  export type likesWhereUniqueInput = Prisma.AtLeast<{
    like_id?: number
    AND?: likesWhereInput | likesWhereInput[]
    OR?: likesWhereInput[]
    NOT?: likesWhereInput | likesWhereInput[]
    user_id?: IntFilter<"likes"> | number
    video_id?: IntNullableFilter<"likes"> | number | null
    type?: Enumlikes_typeFilter<"likes"> | $Enums.likes_type
    created_at?: DateTimeNullableFilter<"likes"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    videos?: XOR<VideosNullableScalarRelationFilter, videosWhereInput> | null
  }, "like_id">

  export type likesOrderByWithAggregationInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrderInput | SortOrder
    type?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: likesCountOrderByAggregateInput
    _avg?: likesAvgOrderByAggregateInput
    _max?: likesMaxOrderByAggregateInput
    _min?: likesMinOrderByAggregateInput
    _sum?: likesSumOrderByAggregateInput
  }

  export type likesScalarWhereWithAggregatesInput = {
    AND?: likesScalarWhereWithAggregatesInput | likesScalarWhereWithAggregatesInput[]
    OR?: likesScalarWhereWithAggregatesInput[]
    NOT?: likesScalarWhereWithAggregatesInput | likesScalarWhereWithAggregatesInput[]
    like_id?: IntWithAggregatesFilter<"likes"> | number
    user_id?: IntWithAggregatesFilter<"likes"> | number
    video_id?: IntNullableWithAggregatesFilter<"likes"> | number | null
    type?: Enumlikes_typeWithAggregatesFilter<"likes"> | $Enums.likes_type
    created_at?: DateTimeNullableWithAggregatesFilter<"likes"> | Date | string | null
  }

  export type menu_sidebarWhereInput = {
    AND?: menu_sidebarWhereInput | menu_sidebarWhereInput[]
    OR?: menu_sidebarWhereInput[]
    NOT?: menu_sidebarWhereInput | menu_sidebarWhereInput[]
    id?: IntFilter<"menu_sidebar"> | number
    item_name?: StringNullableFilter<"menu_sidebar"> | string | null
    icon?: StringNullableFilter<"menu_sidebar"> | string | null
    created_at?: DateTimeNullableFilter<"menu_sidebar"> | Date | string | null
  }

  export type menu_sidebarOrderByWithRelationInput = {
    id?: SortOrder
    item_name?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _relevance?: menu_sidebarOrderByRelevanceInput
  }

  export type menu_sidebarWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: menu_sidebarWhereInput | menu_sidebarWhereInput[]
    OR?: menu_sidebarWhereInput[]
    NOT?: menu_sidebarWhereInput | menu_sidebarWhereInput[]
    item_name?: StringNullableFilter<"menu_sidebar"> | string | null
    icon?: StringNullableFilter<"menu_sidebar"> | string | null
    created_at?: DateTimeNullableFilter<"menu_sidebar"> | Date | string | null
  }, "id">

  export type menu_sidebarOrderByWithAggregationInput = {
    id?: SortOrder
    item_name?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: menu_sidebarCountOrderByAggregateInput
    _avg?: menu_sidebarAvgOrderByAggregateInput
    _max?: menu_sidebarMaxOrderByAggregateInput
    _min?: menu_sidebarMinOrderByAggregateInput
    _sum?: menu_sidebarSumOrderByAggregateInput
  }

  export type menu_sidebarScalarWhereWithAggregatesInput = {
    AND?: menu_sidebarScalarWhereWithAggregatesInput | menu_sidebarScalarWhereWithAggregatesInput[]
    OR?: menu_sidebarScalarWhereWithAggregatesInput[]
    NOT?: menu_sidebarScalarWhereWithAggregatesInput | menu_sidebarScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"menu_sidebar"> | number
    item_name?: StringNullableWithAggregatesFilter<"menu_sidebar"> | string | null
    icon?: StringNullableWithAggregatesFilter<"menu_sidebar"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"menu_sidebar"> | Date | string | null
  }

  export type messagesWhereInput = {
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    message_id?: IntFilter<"messages"> | number
    sender_id?: IntFilter<"messages"> | number
    receiver_id?: IntNullableFilter<"messages"> | number | null
    group_id?: IntNullableFilter<"messages"> | number | null
    message_text?: StringFilter<"messages"> | string
    created_at?: DateTimeNullableFilter<"messages"> | Date | string | null
    users_messages_sender_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_messages_receiver_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    groups?: XOR<GroupsNullableScalarRelationFilter, groupsWhereInput> | null
  }

  export type messagesOrderByWithRelationInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    message_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    users_messages_sender_idTousers?: usersOrderByWithRelationInput
    users_messages_receiver_idTousers?: usersOrderByWithRelationInput
    groups?: groupsOrderByWithRelationInput
    _relevance?: messagesOrderByRelevanceInput
  }

  export type messagesWhereUniqueInput = Prisma.AtLeast<{
    message_id?: number
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    sender_id?: IntFilter<"messages"> | number
    receiver_id?: IntNullableFilter<"messages"> | number | null
    group_id?: IntNullableFilter<"messages"> | number | null
    message_text?: StringFilter<"messages"> | string
    created_at?: DateTimeNullableFilter<"messages"> | Date | string | null
    users_messages_sender_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_messages_receiver_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    groups?: XOR<GroupsNullableScalarRelationFilter, groupsWhereInput> | null
  }, "message_id">

  export type messagesOrderByWithAggregationInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    message_text?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: messagesCountOrderByAggregateInput
    _avg?: messagesAvgOrderByAggregateInput
    _max?: messagesMaxOrderByAggregateInput
    _min?: messagesMinOrderByAggregateInput
    _sum?: messagesSumOrderByAggregateInput
  }

  export type messagesScalarWhereWithAggregatesInput = {
    AND?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    OR?: messagesScalarWhereWithAggregatesInput[]
    NOT?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    message_id?: IntWithAggregatesFilter<"messages"> | number
    sender_id?: IntWithAggregatesFilter<"messages"> | number
    receiver_id?: IntNullableWithAggregatesFilter<"messages"> | number | null
    group_id?: IntNullableWithAggregatesFilter<"messages"> | number | null
    message_text?: StringWithAggregatesFilter<"messages"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"messages"> | Date | string | null
  }

  export type permissionsWhereInput = {
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    permission_id?: IntFilter<"permissions"> | number
    permission_name?: StringFilter<"permissions"> | string
    description?: StringNullableFilter<"permissions"> | string | null
    role_permissions?: Role_permissionsListRelationFilter
  }

  export type permissionsOrderByWithRelationInput = {
    permission_id?: SortOrder
    permission_name?: SortOrder
    description?: SortOrderInput | SortOrder
    role_permissions?: role_permissionsOrderByRelationAggregateInput
    _relevance?: permissionsOrderByRelevanceInput
  }

  export type permissionsWhereUniqueInput = Prisma.AtLeast<{
    permission_id?: number
    permission_name?: string
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    description?: StringNullableFilter<"permissions"> | string | null
    role_permissions?: Role_permissionsListRelationFilter
  }, "permission_id" | "permission_name">

  export type permissionsOrderByWithAggregationInput = {
    permission_id?: SortOrder
    permission_name?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: permissionsCountOrderByAggregateInput
    _avg?: permissionsAvgOrderByAggregateInput
    _max?: permissionsMaxOrderByAggregateInput
    _min?: permissionsMinOrderByAggregateInput
    _sum?: permissionsSumOrderByAggregateInput
  }

  export type permissionsScalarWhereWithAggregatesInput = {
    AND?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    OR?: permissionsScalarWhereWithAggregatesInput[]
    NOT?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    permission_id?: IntWithAggregatesFilter<"permissions"> | number
    permission_name?: StringWithAggregatesFilter<"permissions"> | string
    description?: StringNullableWithAggregatesFilter<"permissions"> | string | null
  }

  export type role_permissionsWhereInput = {
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    role_permission_id?: IntFilter<"role_permissions"> | number
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }

  export type role_permissionsOrderByWithRelationInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    roles?: rolesOrderByWithRelationInput
    permissions?: permissionsOrderByWithRelationInput
  }

  export type role_permissionsWhereUniqueInput = Prisma.AtLeast<{
    role_permission_id?: number
    AND?: role_permissionsWhereInput | role_permissionsWhereInput[]
    OR?: role_permissionsWhereInput[]
    NOT?: role_permissionsWhereInput | role_permissionsWhereInput[]
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }, "role_permission_id">

  export type role_permissionsOrderByWithAggregationInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
    _count?: role_permissionsCountOrderByAggregateInput
    _avg?: role_permissionsAvgOrderByAggregateInput
    _max?: role_permissionsMaxOrderByAggregateInput
    _min?: role_permissionsMinOrderByAggregateInput
    _sum?: role_permissionsSumOrderByAggregateInput
  }

  export type role_permissionsScalarWhereWithAggregatesInput = {
    AND?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    OR?: role_permissionsScalarWhereWithAggregatesInput[]
    NOT?: role_permissionsScalarWhereWithAggregatesInput | role_permissionsScalarWhereWithAggregatesInput[]
    role_permission_id?: IntWithAggregatesFilter<"role_permissions"> | number
    role_id?: IntWithAggregatesFilter<"role_permissions"> | number
    permission_id?: IntWithAggregatesFilter<"role_permissions"> | number
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    role_id?: IntFilter<"roles"> | number
    role_name?: StringFilter<"roles"> | string
    role_permissions?: Role_permissionsListRelationFilter
    user_roles?: User_rolesListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_permissions?: role_permissionsOrderByRelationAggregateInput
    user_roles?: user_rolesOrderByRelationAggregateInput
    _relevance?: rolesOrderByRelevanceInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    role_id?: number
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    role_name?: StringFilter<"roles"> | string
    role_permissions?: Role_permissionsListRelationFilter
    user_roles?: User_rolesListRelationFilter
  }, "role_id">

  export type rolesOrderByWithAggregationInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    role_id?: IntWithAggregatesFilter<"roles"> | number
    role_name?: StringWithAggregatesFilter<"roles"> | string
  }

  export type subscriptionsWhereInput = {
    AND?: subscriptionsWhereInput | subscriptionsWhereInput[]
    OR?: subscriptionsWhereInput[]
    NOT?: subscriptionsWhereInput | subscriptionsWhereInput[]
    subscription_id?: IntFilter<"subscriptions"> | number
    user_id?: IntFilter<"subscriptions"> | number
    subscriber_id?: IntFilter<"subscriptions"> | number
    created_at?: DateTimeNullableFilter<"subscriptions"> | Date | string | null
    users_subscriptions_user_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_subscriptions_subscriber_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type subscriptionsOrderByWithRelationInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    users_subscriptions_user_idTousers?: usersOrderByWithRelationInput
    users_subscriptions_subscriber_idTousers?: usersOrderByWithRelationInput
  }

  export type subscriptionsWhereUniqueInput = Prisma.AtLeast<{
    subscription_id?: number
    AND?: subscriptionsWhereInput | subscriptionsWhereInput[]
    OR?: subscriptionsWhereInput[]
    NOT?: subscriptionsWhereInput | subscriptionsWhereInput[]
    user_id?: IntFilter<"subscriptions"> | number
    subscriber_id?: IntFilter<"subscriptions"> | number
    created_at?: DateTimeNullableFilter<"subscriptions"> | Date | string | null
    users_subscriptions_user_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_subscriptions_subscriber_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "subscription_id">

  export type subscriptionsOrderByWithAggregationInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: subscriptionsCountOrderByAggregateInput
    _avg?: subscriptionsAvgOrderByAggregateInput
    _max?: subscriptionsMaxOrderByAggregateInput
    _min?: subscriptionsMinOrderByAggregateInput
    _sum?: subscriptionsSumOrderByAggregateInput
  }

  export type subscriptionsScalarWhereWithAggregatesInput = {
    AND?: subscriptionsScalarWhereWithAggregatesInput | subscriptionsScalarWhereWithAggregatesInput[]
    OR?: subscriptionsScalarWhereWithAggregatesInput[]
    NOT?: subscriptionsScalarWhereWithAggregatesInput | subscriptionsScalarWhereWithAggregatesInput[]
    subscription_id?: IntWithAggregatesFilter<"subscriptions"> | number
    user_id?: IntWithAggregatesFilter<"subscriptions"> | number
    subscriber_id?: IntWithAggregatesFilter<"subscriptions"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"subscriptions"> | Date | string | null
  }

  export type user_chatsWhereInput = {
    AND?: user_chatsWhereInput | user_chatsWhereInput[]
    OR?: user_chatsWhereInput[]
    NOT?: user_chatsWhereInput | user_chatsWhereInput[]
    chat_id?: IntFilter<"user_chats"> | number
    user1_id?: IntFilter<"user_chats"> | number
    user2_id?: IntFilter<"user_chats"> | number
    created_at?: DateTimeNullableFilter<"user_chats"> | Date | string | null
    users_user_chats_user1_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_user_chats_user2_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_chatsOrderByWithRelationInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    users_user_chats_user1_idTousers?: usersOrderByWithRelationInput
    users_user_chats_user2_idTousers?: usersOrderByWithRelationInput
  }

  export type user_chatsWhereUniqueInput = Prisma.AtLeast<{
    chat_id?: number
    AND?: user_chatsWhereInput | user_chatsWhereInput[]
    OR?: user_chatsWhereInput[]
    NOT?: user_chatsWhereInput | user_chatsWhereInput[]
    user1_id?: IntFilter<"user_chats"> | number
    user2_id?: IntFilter<"user_chats"> | number
    created_at?: DateTimeNullableFilter<"user_chats"> | Date | string | null
    users_user_chats_user1_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
    users_user_chats_user2_idTousers?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "chat_id">

  export type user_chatsOrderByWithAggregationInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: user_chatsCountOrderByAggregateInput
    _avg?: user_chatsAvgOrderByAggregateInput
    _max?: user_chatsMaxOrderByAggregateInput
    _min?: user_chatsMinOrderByAggregateInput
    _sum?: user_chatsSumOrderByAggregateInput
  }

  export type user_chatsScalarWhereWithAggregatesInput = {
    AND?: user_chatsScalarWhereWithAggregatesInput | user_chatsScalarWhereWithAggregatesInput[]
    OR?: user_chatsScalarWhereWithAggregatesInput[]
    NOT?: user_chatsScalarWhereWithAggregatesInput | user_chatsScalarWhereWithAggregatesInput[]
    chat_id?: IntWithAggregatesFilter<"user_chats"> | number
    user1_id?: IntWithAggregatesFilter<"user_chats"> | number
    user2_id?: IntWithAggregatesFilter<"user_chats"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"user_chats"> | Date | string | null
  }

  export type user_rolesWhereInput = {
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    user_role_id?: IntFilter<"user_roles"> | number
    user_id?: IntFilter<"user_roles"> | number
    role_id?: IntFilter<"user_roles"> | number
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }

  export type user_rolesOrderByWithRelationInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
    users?: usersOrderByWithRelationInput
    roles?: rolesOrderByWithRelationInput
  }

  export type user_rolesWhereUniqueInput = Prisma.AtLeast<{
    user_role_id?: number
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    user_id?: IntFilter<"user_roles"> | number
    role_id?: IntFilter<"user_roles"> | number
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }, "user_role_id">

  export type user_rolesOrderByWithAggregationInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
    _count?: user_rolesCountOrderByAggregateInput
    _avg?: user_rolesAvgOrderByAggregateInput
    _max?: user_rolesMaxOrderByAggregateInput
    _min?: user_rolesMinOrderByAggregateInput
    _sum?: user_rolesSumOrderByAggregateInput
  }

  export type user_rolesScalarWhereWithAggregatesInput = {
    AND?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    OR?: user_rolesScalarWhereWithAggregatesInput[]
    NOT?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    user_role_id?: IntWithAggregatesFilter<"user_roles"> | number
    user_id?: IntWithAggregatesFilter<"user_roles"> | number
    role_id?: IntWithAggregatesFilter<"user_roles"> | number
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_id?: IntFilter<"users"> | number
    full_name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    avatar?: StringNullableFilter<"users"> | string | null
    pass_word?: StringFilter<"users"> | string
    face_app_id?: StringNullableFilter<"users"> | string | null
    refresh_token?: StringNullableFilter<"users"> | string | null
    secret_code?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    forgot_password_code?: Forgot_password_codeListRelationFilter
    group_members?: Group_membersListRelationFilter
    likes?: LikesListRelationFilter
    messages_messages_sender_idTousers?: MessagesListRelationFilter
    messages_messages_receiver_idTousers?: MessagesListRelationFilter
    subscriptions_subscriptions_user_idTousers?: SubscriptionsListRelationFilter
    subscriptions_subscriptions_subscriber_idTousers?: SubscriptionsListRelationFilter
    user_chats_user_chats_user1_idTousers?: User_chatsListRelationFilter
    user_chats_user_chats_user2_idTousers?: User_chatsListRelationFilter
    user_roles?: User_rolesListRelationFilter
    video_comments?: Video_commentsListRelationFilter
    videos?: VideosListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    user_id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar?: SortOrderInput | SortOrder
    pass_word?: SortOrder
    face_app_id?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    secret_code?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    forgot_password_code?: forgot_password_codeOrderByRelationAggregateInput
    group_members?: group_membersOrderByRelationAggregateInput
    likes?: likesOrderByRelationAggregateInput
    messages_messages_sender_idTousers?: messagesOrderByRelationAggregateInput
    messages_messages_receiver_idTousers?: messagesOrderByRelationAggregateInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsOrderByRelationAggregateInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsOrderByRelationAggregateInput
    user_chats_user_chats_user1_idTousers?: user_chatsOrderByRelationAggregateInput
    user_chats_user_chats_user2_idTousers?: user_chatsOrderByRelationAggregateInput
    user_roles?: user_rolesOrderByRelationAggregateInput
    video_comments?: video_commentsOrderByRelationAggregateInput
    videos?: videosOrderByRelationAggregateInput
    _relevance?: usersOrderByRelevanceInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    full_name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    avatar?: StringNullableFilter<"users"> | string | null
    pass_word?: StringFilter<"users"> | string
    face_app_id?: StringNullableFilter<"users"> | string | null
    refresh_token?: StringNullableFilter<"users"> | string | null
    secret_code?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    forgot_password_code?: Forgot_password_codeListRelationFilter
    group_members?: Group_membersListRelationFilter
    likes?: LikesListRelationFilter
    messages_messages_sender_idTousers?: MessagesListRelationFilter
    messages_messages_receiver_idTousers?: MessagesListRelationFilter
    subscriptions_subscriptions_user_idTousers?: SubscriptionsListRelationFilter
    subscriptions_subscriptions_subscriber_idTousers?: SubscriptionsListRelationFilter
    user_chats_user_chats_user1_idTousers?: User_chatsListRelationFilter
    user_chats_user_chats_user2_idTousers?: User_chatsListRelationFilter
    user_roles?: User_rolesListRelationFilter
    video_comments?: Video_commentsListRelationFilter
    videos?: VideosListRelationFilter
  }, "user_id">

  export type usersOrderByWithAggregationInput = {
    user_id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar?: SortOrderInput | SortOrder
    pass_word?: SortOrder
    face_app_id?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    secret_code?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"users"> | number
    full_name?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    avatar?: StringNullableWithAggregatesFilter<"users"> | string | null
    pass_word?: StringWithAggregatesFilter<"users"> | string
    face_app_id?: StringNullableWithAggregatesFilter<"users"> | string | null
    refresh_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    secret_code?: StringNullableWithAggregatesFilter<"users"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type video_commentsWhereInput = {
    AND?: video_commentsWhereInput | video_commentsWhereInput[]
    OR?: video_commentsWhereInput[]
    NOT?: video_commentsWhereInput | video_commentsWhereInput[]
    comment_id?: IntFilter<"video_comments"> | number
    created_at?: DateTimeNullableFilter<"video_comments"> | Date | string | null
    content?: StringNullableFilter<"video_comments"> | string | null
    reply_list?: StringNullableFilter<"video_comments"> | string | null
    user_id?: IntNullableFilter<"video_comments"> | number | null
    video_id?: IntNullableFilter<"video_comments"> | number | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    videos?: XOR<VideosNullableScalarRelationFilter, videosWhereInput> | null
  }

  export type video_commentsOrderByWithRelationInput = {
    comment_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    reply_list?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    video_id?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    videos?: videosOrderByWithRelationInput
    _relevance?: video_commentsOrderByRelevanceInput
  }

  export type video_commentsWhereUniqueInput = Prisma.AtLeast<{
    comment_id?: number
    AND?: video_commentsWhereInput | video_commentsWhereInput[]
    OR?: video_commentsWhereInput[]
    NOT?: video_commentsWhereInput | video_commentsWhereInput[]
    created_at?: DateTimeNullableFilter<"video_comments"> | Date | string | null
    content?: StringNullableFilter<"video_comments"> | string | null
    reply_list?: StringNullableFilter<"video_comments"> | string | null
    user_id?: IntNullableFilter<"video_comments"> | number | null
    video_id?: IntNullableFilter<"video_comments"> | number | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    videos?: XOR<VideosNullableScalarRelationFilter, videosWhereInput> | null
  }, "comment_id">

  export type video_commentsOrderByWithAggregationInput = {
    comment_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    reply_list?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    video_id?: SortOrderInput | SortOrder
    _count?: video_commentsCountOrderByAggregateInput
    _avg?: video_commentsAvgOrderByAggregateInput
    _max?: video_commentsMaxOrderByAggregateInput
    _min?: video_commentsMinOrderByAggregateInput
    _sum?: video_commentsSumOrderByAggregateInput
  }

  export type video_commentsScalarWhereWithAggregatesInput = {
    AND?: video_commentsScalarWhereWithAggregatesInput | video_commentsScalarWhereWithAggregatesInput[]
    OR?: video_commentsScalarWhereWithAggregatesInput[]
    NOT?: video_commentsScalarWhereWithAggregatesInput | video_commentsScalarWhereWithAggregatesInput[]
    comment_id?: IntWithAggregatesFilter<"video_comments"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"video_comments"> | Date | string | null
    content?: StringNullableWithAggregatesFilter<"video_comments"> | string | null
    reply_list?: StringNullableWithAggregatesFilter<"video_comments"> | string | null
    user_id?: IntNullableWithAggregatesFilter<"video_comments"> | number | null
    video_id?: IntNullableWithAggregatesFilter<"video_comments"> | number | null
  }

  export type video_typesWhereInput = {
    AND?: video_typesWhereInput | video_typesWhereInput[]
    OR?: video_typesWhereInput[]
    NOT?: video_typesWhereInput | video_typesWhereInput[]
    type_id?: IntFilter<"video_types"> | number
    type_name?: StringFilter<"video_types"> | string
    icon?: StringNullableFilter<"video_types"> | string | null
    created_at?: DateTimeNullableFilter<"video_types"> | Date | string | null
    videos?: VideosListRelationFilter
  }

  export type video_typesOrderByWithRelationInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    icon?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    videos?: videosOrderByRelationAggregateInput
    _relevance?: video_typesOrderByRelevanceInput
  }

  export type video_typesWhereUniqueInput = Prisma.AtLeast<{
    type_id?: number
    AND?: video_typesWhereInput | video_typesWhereInput[]
    OR?: video_typesWhereInput[]
    NOT?: video_typesWhereInput | video_typesWhereInput[]
    type_name?: StringFilter<"video_types"> | string
    icon?: StringNullableFilter<"video_types"> | string | null
    created_at?: DateTimeNullableFilter<"video_types"> | Date | string | null
    videos?: VideosListRelationFilter
  }, "type_id">

  export type video_typesOrderByWithAggregationInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    icon?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: video_typesCountOrderByAggregateInput
    _avg?: video_typesAvgOrderByAggregateInput
    _max?: video_typesMaxOrderByAggregateInput
    _min?: video_typesMinOrderByAggregateInput
    _sum?: video_typesSumOrderByAggregateInput
  }

  export type video_typesScalarWhereWithAggregatesInput = {
    AND?: video_typesScalarWhereWithAggregatesInput | video_typesScalarWhereWithAggregatesInput[]
    OR?: video_typesScalarWhereWithAggregatesInput[]
    NOT?: video_typesScalarWhereWithAggregatesInput | video_typesScalarWhereWithAggregatesInput[]
    type_id?: IntWithAggregatesFilter<"video_types"> | number
    type_name?: StringWithAggregatesFilter<"video_types"> | string
    icon?: StringNullableWithAggregatesFilter<"video_types"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"video_types"> | Date | string | null
  }

  export type videosWhereInput = {
    AND?: videosWhereInput | videosWhereInput[]
    OR?: videosWhereInput[]
    NOT?: videosWhereInput | videosWhereInput[]
    video_id?: IntFilter<"videos"> | number
    video_name?: StringFilter<"videos"> | string
    thumbnail?: StringNullableFilter<"videos"> | string | null
    description?: StringNullableFilter<"videos"> | string | null
    views?: IntNullableFilter<"videos"> | number | null
    type_id?: IntNullableFilter<"videos"> | number | null
    user_id?: IntNullableFilter<"videos"> | number | null
    source?: StringNullableFilter<"videos"> | string | null
    created_at?: DateTimeNullableFilter<"videos"> | Date | string | null
    likes?: LikesListRelationFilter
    video_comments?: Video_commentsListRelationFilter
    video_types?: XOR<Video_typesNullableScalarRelationFilter, video_typesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type videosOrderByWithRelationInput = {
    video_id?: SortOrder
    video_name?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    type_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    likes?: likesOrderByRelationAggregateInput
    video_comments?: video_commentsOrderByRelationAggregateInput
    video_types?: video_typesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    _relevance?: videosOrderByRelevanceInput
  }

  export type videosWhereUniqueInput = Prisma.AtLeast<{
    video_id?: number
    AND?: videosWhereInput | videosWhereInput[]
    OR?: videosWhereInput[]
    NOT?: videosWhereInput | videosWhereInput[]
    video_name?: StringFilter<"videos"> | string
    thumbnail?: StringNullableFilter<"videos"> | string | null
    description?: StringNullableFilter<"videos"> | string | null
    views?: IntNullableFilter<"videos"> | number | null
    type_id?: IntNullableFilter<"videos"> | number | null
    user_id?: IntNullableFilter<"videos"> | number | null
    source?: StringNullableFilter<"videos"> | string | null
    created_at?: DateTimeNullableFilter<"videos"> | Date | string | null
    likes?: LikesListRelationFilter
    video_comments?: Video_commentsListRelationFilter
    video_types?: XOR<Video_typesNullableScalarRelationFilter, video_typesWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "video_id">

  export type videosOrderByWithAggregationInput = {
    video_id?: SortOrder
    video_name?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    type_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: videosCountOrderByAggregateInput
    _avg?: videosAvgOrderByAggregateInput
    _max?: videosMaxOrderByAggregateInput
    _min?: videosMinOrderByAggregateInput
    _sum?: videosSumOrderByAggregateInput
  }

  export type videosScalarWhereWithAggregatesInput = {
    AND?: videosScalarWhereWithAggregatesInput | videosScalarWhereWithAggregatesInput[]
    OR?: videosScalarWhereWithAggregatesInput[]
    NOT?: videosScalarWhereWithAggregatesInput | videosScalarWhereWithAggregatesInput[]
    video_id?: IntWithAggregatesFilter<"videos"> | number
    video_name?: StringWithAggregatesFilter<"videos"> | string
    thumbnail?: StringNullableWithAggregatesFilter<"videos"> | string | null
    description?: StringNullableWithAggregatesFilter<"videos"> | string | null
    views?: IntNullableWithAggregatesFilter<"videos"> | number | null
    type_id?: IntNullableWithAggregatesFilter<"videos"> | number | null
    user_id?: IntNullableWithAggregatesFilter<"videos"> | number | null
    source?: StringNullableWithAggregatesFilter<"videos"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"videos"> | Date | string | null
  }

  export type forgot_password_codeCreateInput = {
    forgot_code?: string | null
    expired?: Date | string | null
    users?: usersCreateNestedOneWithoutForgot_password_codeInput
  }

  export type forgot_password_codeUncheckedCreateInput = {
    id?: number
    forgot_code?: string | null
    user_id?: number | null
    expired?: Date | string | null
  }

  export type forgot_password_codeUpdateInput = {
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutForgot_password_codeNestedInput
  }

  export type forgot_password_codeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type forgot_password_codeCreateManyInput = {
    id?: number
    forgot_code?: string | null
    user_id?: number | null
    expired?: Date | string | null
  }

  export type forgot_password_codeUpdateManyMutationInput = {
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type forgot_password_codeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersCreateInput = {
    joined_at?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_membersInput
    users: usersCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateInput = {
    group_member_id?: number
    group_id: number
    user_id: number
    joined_at?: Date | string | null
  }

  export type group_membersUpdateInput = {
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_membersNestedInput
    users?: usersUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersCreateManyInput = {
    group_member_id?: number
    group_id: number
    user_id: number
    joined_at?: Date | string | null
  }

  export type group_membersUpdateManyMutationInput = {
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type groupsCreateInput = {
    group_name: string
    created_at?: Date | string | null
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateInput = {
    group_id?: number
    group_name: string
    created_at?: Date | string | null
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsUpdateInput = {
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type groupsCreateManyInput = {
    group_id?: number
    group_name: string
    created_at?: Date | string | null
  }

  export type groupsUpdateManyMutationInput = {
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type groupsUncheckedUpdateManyInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesCreateInput = {
    type: $Enums.likes_type
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutLikesInput
    videos?: videosCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateInput = {
    like_id?: number
    user_id: number
    video_id?: number | null
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type likesUpdateInput = {
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutLikesNestedInput
    videos?: videosUpdateOneWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesCreateManyInput = {
    like_id?: number
    user_id: number
    video_id?: number | null
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type likesUpdateManyMutationInput = {
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menu_sidebarCreateInput = {
    item_name?: string | null
    icon?: string | null
    created_at?: Date | string | null
  }

  export type menu_sidebarUncheckedCreateInput = {
    id?: number
    item_name?: string | null
    icon?: string | null
    created_at?: Date | string | null
  }

  export type menu_sidebarUpdateInput = {
    item_name?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menu_sidebarUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    item_name?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menu_sidebarCreateManyInput = {
    id?: number
    item_name?: string | null
    icon?: string | null
    created_at?: Date | string | null
  }

  export type menu_sidebarUpdateManyMutationInput = {
    item_name?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menu_sidebarUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    item_name?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesCreateInput = {
    message_text: string
    created_at?: Date | string | null
    users_messages_sender_idTousers: usersCreateNestedOneWithoutMessages_messages_sender_idTousersInput
    users_messages_receiver_idTousers?: usersCreateNestedOneWithoutMessages_messages_receiver_idTousersInput
    groups?: groupsCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateInput = {
    message_id?: number
    sender_id: number
    receiver_id?: number | null
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesUpdateInput = {
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_messages_sender_idTousers?: usersUpdateOneRequiredWithoutMessages_messages_sender_idTousersNestedInput
    users_messages_receiver_idTousers?: usersUpdateOneWithoutMessages_messages_receiver_idTousersNestedInput
    groups?: groupsUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesCreateManyInput = {
    message_id?: number
    sender_id: number
    receiver_id?: number | null
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesUpdateManyMutationInput = {
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUncheckedUpdateManyInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionsCreateInput = {
    permission_name: string
    description?: string | null
    role_permissions?: role_permissionsCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUncheckedCreateInput = {
    permission_id?: number
    permission_name: string
    description?: string | null
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUpdateInput = {
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    role_permissions?: role_permissionsUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsUncheckedUpdateInput = {
    permission_id?: IntFieldUpdateOperationsInput | number
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsCreateManyInput = {
    permission_id?: number
    permission_name: string
    description?: string | null
  }

  export type permissionsUpdateManyMutationInput = {
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionsUncheckedUpdateManyInput = {
    permission_id?: IntFieldUpdateOperationsInput | number
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type role_permissionsCreateInput = {
    roles: rolesCreateNestedOneWithoutRole_permissionsInput
    permissions: permissionsCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateInput = {
    role_permission_id?: number
    role_id: number
    permission_id: number
  }

  export type role_permissionsUpdateInput = {
    roles?: rolesUpdateOneRequiredWithoutRole_permissionsNestedInput
    permissions?: permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type role_permissionsCreateManyInput = {
    role_permission_id?: number
    role_id: number
    permission_id: number
  }

  export type role_permissionsUpdateManyMutationInput = {

  }

  export type role_permissionsUncheckedUpdateManyInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type rolesCreateInput = {
    role_name: string
    role_permissions?: role_permissionsCreateNestedManyWithoutRolesInput
    user_roles?: user_rolesCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateInput = {
    role_id?: number
    role_name: string
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutRolesInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesUpdateInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    role_permissions?: role_permissionsUpdateManyWithoutRolesNestedInput
    user_roles?: user_rolesUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutRolesNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type rolesCreateManyInput = {
    role_id?: number
    role_name: string
  }

  export type rolesUpdateManyMutationInput = {
    role_name?: StringFieldUpdateOperationsInput | string
  }

  export type rolesUncheckedUpdateManyInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
  }

  export type subscriptionsCreateInput = {
    created_at?: Date | string | null
    users_subscriptions_user_idTousers: usersCreateNestedOneWithoutSubscriptions_subscriptions_user_idTousersInput
    users_subscriptions_subscriber_idTousers: usersCreateNestedOneWithoutSubscriptions_subscriptions_subscriber_idTousersInput
  }

  export type subscriptionsUncheckedCreateInput = {
    subscription_id?: number
    user_id: number
    subscriber_id: number
    created_at?: Date | string | null
  }

  export type subscriptionsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_subscriptions_user_idTousers?: usersUpdateOneRequiredWithoutSubscriptions_subscriptions_user_idTousersNestedInput
    users_subscriptions_subscriber_idTousers?: usersUpdateOneRequiredWithoutSubscriptions_subscriptions_subscriber_idTousersNestedInput
  }

  export type subscriptionsUncheckedUpdateInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    subscriber_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsCreateManyInput = {
    subscription_id?: number
    user_id: number
    subscriber_id: number
    created_at?: Date | string | null
  }

  export type subscriptionsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsUncheckedUpdateManyInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    subscriber_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsCreateInput = {
    created_at?: Date | string | null
    users_user_chats_user1_idTousers: usersCreateNestedOneWithoutUser_chats_user_chats_user1_idTousersInput
    users_user_chats_user2_idTousers: usersCreateNestedOneWithoutUser_chats_user_chats_user2_idTousersInput
  }

  export type user_chatsUncheckedCreateInput = {
    chat_id?: number
    user1_id: number
    user2_id: number
    created_at?: Date | string | null
  }

  export type user_chatsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_chats_user1_idTousers?: usersUpdateOneRequiredWithoutUser_chats_user_chats_user1_idTousersNestedInput
    users_user_chats_user2_idTousers?: usersUpdateOneRequiredWithoutUser_chats_user_chats_user2_idTousersNestedInput
  }

  export type user_chatsUncheckedUpdateInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user1_id?: IntFieldUpdateOperationsInput | number
    user2_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsCreateManyInput = {
    chat_id?: number
    user1_id: number
    user2_id: number
    created_at?: Date | string | null
  }

  export type user_chatsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsUncheckedUpdateManyInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user1_id?: IntFieldUpdateOperationsInput | number
    user2_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_rolesCreateInput = {
    users: usersCreateNestedOneWithoutUser_rolesInput
    roles: rolesCreateNestedOneWithoutUser_rolesInput
  }

  export type user_rolesUncheckedCreateInput = {
    user_role_id?: number
    user_id: number
    role_id: number
  }

  export type user_rolesUpdateInput = {
    users?: usersUpdateOneRequiredWithoutUser_rolesNestedInput
    roles?: rolesUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type user_rolesUncheckedUpdateInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_rolesCreateManyInput = {
    user_role_id?: number
    user_id: number
    role_id: number
  }

  export type user_rolesUpdateManyMutationInput = {

  }

  export type user_rolesUncheckedUpdateManyInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type usersCreateInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type video_commentsCreateInput = {
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    users?: usersCreateNestedOneWithoutVideo_commentsInput
    videos?: videosCreateNestedOneWithoutVideo_commentsInput
  }

  export type video_commentsUncheckedCreateInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    user_id?: number | null
    video_id?: number | null
  }

  export type video_commentsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutVideo_commentsNestedInput
    videos?: videosUpdateOneWithoutVideo_commentsNestedInput
  }

  export type video_commentsUncheckedUpdateInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type video_commentsCreateManyInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    user_id?: number | null
    video_id?: number | null
  }

  export type video_commentsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type video_commentsUncheckedUpdateManyInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type video_typesCreateInput = {
    type_name: string
    icon?: string | null
    created_at?: Date | string | null
    videos?: videosCreateNestedManyWithoutVideo_typesInput
  }

  export type video_typesUncheckedCreateInput = {
    type_id?: number
    type_name: string
    icon?: string | null
    created_at?: Date | string | null
    videos?: videosUncheckedCreateNestedManyWithoutVideo_typesInput
  }

  export type video_typesUpdateInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    videos?: videosUpdateManyWithoutVideo_typesNestedInput
  }

  export type video_typesUncheckedUpdateInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    videos?: videosUncheckedUpdateManyWithoutVideo_typesNestedInput
  }

  export type video_typesCreateManyInput = {
    type_id?: number
    type_name: string
    icon?: string | null
    created_at?: Date | string | null
  }

  export type video_typesUpdateManyMutationInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type video_typesUncheckedUpdateManyInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type videosCreateInput = {
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsCreateNestedManyWithoutVideosInput
    video_types?: video_typesCreateNestedOneWithoutVideosInput
    users?: usersCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesUncheckedCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosUpdateInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUpdateManyWithoutVideosNestedInput
    video_types?: video_typesUpdateOneWithoutVideosNestedInput
    users?: usersUpdateOneWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUncheckedUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosCreateManyInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
  }

  export type videosUpdateManyMutationInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type videosUncheckedUpdateManyInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type forgot_password_codeOrderByRelevanceInput = {
    fields: forgot_password_codeOrderByRelevanceFieldEnum | forgot_password_codeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type forgot_password_codeCountOrderByAggregateInput = {
    id?: SortOrder
    forgot_code?: SortOrder
    user_id?: SortOrder
    expired?: SortOrder
  }

  export type forgot_password_codeAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type forgot_password_codeMaxOrderByAggregateInput = {
    id?: SortOrder
    forgot_code?: SortOrder
    user_id?: SortOrder
    expired?: SortOrder
  }

  export type forgot_password_codeMinOrderByAggregateInput = {
    id?: SortOrder
    forgot_code?: SortOrder
    user_id?: SortOrder
    expired?: SortOrder
  }

  export type forgot_password_codeSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type GroupsScalarRelationFilter = {
    is?: groupsWhereInput
    isNot?: groupsWhereInput
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type group_membersCountOrderByAggregateInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
    joined_at?: SortOrder
  }

  export type group_membersAvgOrderByAggregateInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
  }

  export type group_membersMaxOrderByAggregateInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
    joined_at?: SortOrder
  }

  export type group_membersMinOrderByAggregateInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
    joined_at?: SortOrder
  }

  export type group_membersSumOrderByAggregateInput = {
    group_member_id?: SortOrder
    group_id?: SortOrder
    user_id?: SortOrder
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Group_membersListRelationFilter = {
    every?: group_membersWhereInput
    some?: group_membersWhereInput
    none?: group_membersWhereInput
  }

  export type MessagesListRelationFilter = {
    every?: messagesWhereInput
    some?: messagesWhereInput
    none?: messagesWhereInput
  }

  export type group_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type groupsOrderByRelevanceInput = {
    fields: groupsOrderByRelevanceFieldEnum | groupsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type groupsCountOrderByAggregateInput = {
    group_id?: SortOrder
    group_name?: SortOrder
    created_at?: SortOrder
  }

  export type groupsAvgOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type groupsMaxOrderByAggregateInput = {
    group_id?: SortOrder
    group_name?: SortOrder
    created_at?: SortOrder
  }

  export type groupsMinOrderByAggregateInput = {
    group_id?: SortOrder
    group_name?: SortOrder
    created_at?: SortOrder
  }

  export type groupsSumOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enumlikes_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.likes_type | Enumlikes_typeFieldRefInput<$PrismaModel>
    in?: $Enums.likes_type[]
    notIn?: $Enums.likes_type[]
    not?: NestedEnumlikes_typeFilter<$PrismaModel> | $Enums.likes_type
  }

  export type VideosNullableScalarRelationFilter = {
    is?: videosWhereInput | null
    isNot?: videosWhereInput | null
  }

  export type likesCountOrderByAggregateInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
  }

  export type likesAvgOrderByAggregateInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type likesMaxOrderByAggregateInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
  }

  export type likesMinOrderByAggregateInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
  }

  export type likesSumOrderByAggregateInput = {
    like_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type Enumlikes_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.likes_type | Enumlikes_typeFieldRefInput<$PrismaModel>
    in?: $Enums.likes_type[]
    notIn?: $Enums.likes_type[]
    not?: NestedEnumlikes_typeWithAggregatesFilter<$PrismaModel> | $Enums.likes_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumlikes_typeFilter<$PrismaModel>
    _max?: NestedEnumlikes_typeFilter<$PrismaModel>
  }

  export type menu_sidebarOrderByRelevanceInput = {
    fields: menu_sidebarOrderByRelevanceFieldEnum | menu_sidebarOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type menu_sidebarCountOrderByAggregateInput = {
    id?: SortOrder
    item_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type menu_sidebarAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type menu_sidebarMaxOrderByAggregateInput = {
    id?: SortOrder
    item_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type menu_sidebarMinOrderByAggregateInput = {
    id?: SortOrder
    item_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type menu_sidebarSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type GroupsNullableScalarRelationFilter = {
    is?: groupsWhereInput | null
    isNot?: groupsWhereInput | null
  }

  export type messagesOrderByRelevanceInput = {
    fields: messagesOrderByRelevanceFieldEnum | messagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type messagesCountOrderByAggregateInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    group_id?: SortOrder
    message_text?: SortOrder
    created_at?: SortOrder
  }

  export type messagesAvgOrderByAggregateInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    group_id?: SortOrder
  }

  export type messagesMaxOrderByAggregateInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    group_id?: SortOrder
    message_text?: SortOrder
    created_at?: SortOrder
  }

  export type messagesMinOrderByAggregateInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    group_id?: SortOrder
    message_text?: SortOrder
    created_at?: SortOrder
  }

  export type messagesSumOrderByAggregateInput = {
    message_id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    group_id?: SortOrder
  }

  export type Role_permissionsListRelationFilter = {
    every?: role_permissionsWhereInput
    some?: role_permissionsWhereInput
    none?: role_permissionsWhereInput
  }

  export type role_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionsOrderByRelevanceInput = {
    fields: permissionsOrderByRelevanceFieldEnum | permissionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type permissionsCountOrderByAggregateInput = {
    permission_id?: SortOrder
    permission_name?: SortOrder
    description?: SortOrder
  }

  export type permissionsAvgOrderByAggregateInput = {
    permission_id?: SortOrder
  }

  export type permissionsMaxOrderByAggregateInput = {
    permission_id?: SortOrder
    permission_name?: SortOrder
    description?: SortOrder
  }

  export type permissionsMinOrderByAggregateInput = {
    permission_id?: SortOrder
    permission_name?: SortOrder
    description?: SortOrder
  }

  export type permissionsSumOrderByAggregateInput = {
    permission_id?: SortOrder
  }

  export type RolesScalarRelationFilter = {
    is?: rolesWhereInput
    isNot?: rolesWhereInput
  }

  export type PermissionsScalarRelationFilter = {
    is?: permissionsWhereInput
    isNot?: permissionsWhereInput
  }

  export type role_permissionsCountOrderByAggregateInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type role_permissionsAvgOrderByAggregateInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type role_permissionsMaxOrderByAggregateInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type role_permissionsMinOrderByAggregateInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type role_permissionsSumOrderByAggregateInput = {
    role_permission_id?: SortOrder
    role_id?: SortOrder
    permission_id?: SortOrder
  }

  export type User_rolesListRelationFilter = {
    every?: user_rolesWhereInput
    some?: user_rolesWhereInput
    none?: user_rolesWhereInput
  }

  export type user_rolesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesOrderByRelevanceInput = {
    fields: rolesOrderByRelevanceFieldEnum | rolesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type rolesCountOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type subscriptionsCountOrderByAggregateInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
    created_at?: SortOrder
  }

  export type subscriptionsAvgOrderByAggregateInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
  }

  export type subscriptionsMaxOrderByAggregateInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
    created_at?: SortOrder
  }

  export type subscriptionsMinOrderByAggregateInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
    created_at?: SortOrder
  }

  export type subscriptionsSumOrderByAggregateInput = {
    subscription_id?: SortOrder
    user_id?: SortOrder
    subscriber_id?: SortOrder
  }

  export type user_chatsCountOrderByAggregateInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_chatsAvgOrderByAggregateInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
  }

  export type user_chatsMaxOrderByAggregateInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_chatsMinOrderByAggregateInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
    created_at?: SortOrder
  }

  export type user_chatsSumOrderByAggregateInput = {
    chat_id?: SortOrder
    user1_id?: SortOrder
    user2_id?: SortOrder
  }

  export type user_rolesCountOrderByAggregateInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type user_rolesAvgOrderByAggregateInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type user_rolesMaxOrderByAggregateInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type user_rolesMinOrderByAggregateInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type user_rolesSumOrderByAggregateInput = {
    user_role_id?: SortOrder
    user_id?: SortOrder
    role_id?: SortOrder
  }

  export type Forgot_password_codeListRelationFilter = {
    every?: forgot_password_codeWhereInput
    some?: forgot_password_codeWhereInput
    none?: forgot_password_codeWhereInput
  }

  export type LikesListRelationFilter = {
    every?: likesWhereInput
    some?: likesWhereInput
    none?: likesWhereInput
  }

  export type SubscriptionsListRelationFilter = {
    every?: subscriptionsWhereInput
    some?: subscriptionsWhereInput
    none?: subscriptionsWhereInput
  }

  export type User_chatsListRelationFilter = {
    every?: user_chatsWhereInput
    some?: user_chatsWhereInput
    none?: user_chatsWhereInput
  }

  export type Video_commentsListRelationFilter = {
    every?: video_commentsWhereInput
    some?: video_commentsWhereInput
    none?: video_commentsWhereInput
  }

  export type VideosListRelationFilter = {
    every?: videosWhereInput
    some?: videosWhereInput
    none?: videosWhereInput
  }

  export type forgot_password_codeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type likesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subscriptionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_chatsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type video_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type videosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelevanceInput = {
    fields: usersOrderByRelevanceFieldEnum | usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usersCountOrderByAggregateInput = {
    user_id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    pass_word?: SortOrder
    face_app_id?: SortOrder
    refresh_token?: SortOrder
    secret_code?: SortOrder
    created_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    pass_word?: SortOrder
    face_app_id?: SortOrder
    refresh_token?: SortOrder
    secret_code?: SortOrder
    created_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    user_id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    pass_word?: SortOrder
    face_app_id?: SortOrder
    refresh_token?: SortOrder
    secret_code?: SortOrder
    created_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type video_commentsOrderByRelevanceInput = {
    fields: video_commentsOrderByRelevanceFieldEnum | video_commentsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type video_commentsCountOrderByAggregateInput = {
    comment_id?: SortOrder
    created_at?: SortOrder
    content?: SortOrder
    reply_list?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type video_commentsAvgOrderByAggregateInput = {
    comment_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type video_commentsMaxOrderByAggregateInput = {
    comment_id?: SortOrder
    created_at?: SortOrder
    content?: SortOrder
    reply_list?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type video_commentsMinOrderByAggregateInput = {
    comment_id?: SortOrder
    created_at?: SortOrder
    content?: SortOrder
    reply_list?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type video_commentsSumOrderByAggregateInput = {
    comment_id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
  }

  export type video_typesOrderByRelevanceInput = {
    fields: video_typesOrderByRelevanceFieldEnum | video_typesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type video_typesCountOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type video_typesAvgOrderByAggregateInput = {
    type_id?: SortOrder
  }

  export type video_typesMaxOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type video_typesMinOrderByAggregateInput = {
    type_id?: SortOrder
    type_name?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
  }

  export type video_typesSumOrderByAggregateInput = {
    type_id?: SortOrder
  }

  export type Video_typesNullableScalarRelationFilter = {
    is?: video_typesWhereInput | null
    isNot?: video_typesWhereInput | null
  }

  export type videosOrderByRelevanceInput = {
    fields: videosOrderByRelevanceFieldEnum | videosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type videosCountOrderByAggregateInput = {
    video_id?: SortOrder
    video_name?: SortOrder
    thumbnail?: SortOrder
    description?: SortOrder
    views?: SortOrder
    type_id?: SortOrder
    user_id?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
  }

  export type videosAvgOrderByAggregateInput = {
    video_id?: SortOrder
    views?: SortOrder
    type_id?: SortOrder
    user_id?: SortOrder
  }

  export type videosMaxOrderByAggregateInput = {
    video_id?: SortOrder
    video_name?: SortOrder
    thumbnail?: SortOrder
    description?: SortOrder
    views?: SortOrder
    type_id?: SortOrder
    user_id?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
  }

  export type videosMinOrderByAggregateInput = {
    video_id?: SortOrder
    video_name?: SortOrder
    thumbnail?: SortOrder
    description?: SortOrder
    views?: SortOrder
    type_id?: SortOrder
    user_id?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
  }

  export type videosSumOrderByAggregateInput = {
    video_id?: SortOrder
    views?: SortOrder
    type_id?: SortOrder
    user_id?: SortOrder
  }

  export type usersCreateNestedOneWithoutForgot_password_codeInput = {
    create?: XOR<usersCreateWithoutForgot_password_codeInput, usersUncheckedCreateWithoutForgot_password_codeInput>
    connectOrCreate?: usersCreateOrConnectWithoutForgot_password_codeInput
    connect?: usersWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type usersUpdateOneWithoutForgot_password_codeNestedInput = {
    create?: XOR<usersCreateWithoutForgot_password_codeInput, usersUncheckedCreateWithoutForgot_password_codeInput>
    connectOrCreate?: usersCreateOrConnectWithoutForgot_password_codeInput
    upsert?: usersUpsertWithoutForgot_password_codeInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutForgot_password_codeInput, usersUpdateWithoutForgot_password_codeInput>, usersUncheckedUpdateWithoutForgot_password_codeInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type groupsCreateNestedOneWithoutGroup_membersInput = {
    create?: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_membersInput
    connect?: groupsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutGroup_membersInput = {
    create?: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_membersInput
    connect?: usersWhereUniqueInput
  }

  export type groupsUpdateOneRequiredWithoutGroup_membersNestedInput = {
    create?: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroup_membersInput
    upsert?: groupsUpsertWithoutGroup_membersInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutGroup_membersInput, groupsUpdateWithoutGroup_membersInput>, groupsUncheckedUpdateWithoutGroup_membersInput>
  }

  export type usersUpdateOneRequiredWithoutGroup_membersNestedInput = {
    create?: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    connectOrCreate?: usersCreateOrConnectWithoutGroup_membersInput
    upsert?: usersUpsertWithoutGroup_membersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutGroup_membersInput, usersUpdateWithoutGroup_membersInput>, usersUncheckedUpdateWithoutGroup_membersInput>
  }

  export type group_membersCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutGroupsInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type group_membersUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type group_membersUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutGroupsInput | group_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutGroupsInput | group_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutGroupsInput | group_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutGroupsInput | messagesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutGroupsInput | messagesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutGroupsInput | messagesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type group_membersUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput> | group_membersCreateWithoutGroupsInput[] | group_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutGroupsInput | group_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutGroupsInput | group_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: group_membersCreateManyGroupsInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutGroupsInput | group_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutGroupsInput | group_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput> | messagesCreateWithoutGroupsInput[] | messagesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutGroupsInput | messagesCreateOrConnectWithoutGroupsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutGroupsInput | messagesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: messagesCreateManyGroupsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutGroupsInput | messagesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutGroupsInput | messagesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutLikesInput = {
    create?: XOR<usersCreateWithoutLikesInput, usersUncheckedCreateWithoutLikesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLikesInput
    connect?: usersWhereUniqueInput
  }

  export type videosCreateNestedOneWithoutLikesInput = {
    create?: XOR<videosCreateWithoutLikesInput, videosUncheckedCreateWithoutLikesInput>
    connectOrCreate?: videosCreateOrConnectWithoutLikesInput
    connect?: videosWhereUniqueInput
  }

  export type Enumlikes_typeFieldUpdateOperationsInput = {
    set?: $Enums.likes_type
  }

  export type usersUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<usersCreateWithoutLikesInput, usersUncheckedCreateWithoutLikesInput>
    connectOrCreate?: usersCreateOrConnectWithoutLikesInput
    upsert?: usersUpsertWithoutLikesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutLikesInput, usersUpdateWithoutLikesInput>, usersUncheckedUpdateWithoutLikesInput>
  }

  export type videosUpdateOneWithoutLikesNestedInput = {
    create?: XOR<videosCreateWithoutLikesInput, videosUncheckedCreateWithoutLikesInput>
    connectOrCreate?: videosCreateOrConnectWithoutLikesInput
    upsert?: videosUpsertWithoutLikesInput
    disconnect?: videosWhereInput | boolean
    delete?: videosWhereInput | boolean
    connect?: videosWhereUniqueInput
    update?: XOR<XOR<videosUpdateToOneWithWhereWithoutLikesInput, videosUpdateWithoutLikesInput>, videosUncheckedUpdateWithoutLikesInput>
  }

  export type usersCreateNestedOneWithoutMessages_messages_sender_idTousersInput = {
    create?: XOR<usersCreateWithoutMessages_messages_sender_idTousersInput, usersUncheckedCreateWithoutMessages_messages_sender_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessages_messages_sender_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutMessages_messages_receiver_idTousersInput = {
    create?: XOR<usersCreateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedCreateWithoutMessages_messages_receiver_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessages_messages_receiver_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type groupsCreateNestedOneWithoutMessagesInput = {
    create?: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutMessagesInput
    connect?: groupsWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutMessages_messages_sender_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutMessages_messages_sender_idTousersInput, usersUncheckedCreateWithoutMessages_messages_sender_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessages_messages_sender_idTousersInput
    upsert?: usersUpsertWithoutMessages_messages_sender_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMessages_messages_sender_idTousersInput, usersUpdateWithoutMessages_messages_sender_idTousersInput>, usersUncheckedUpdateWithoutMessages_messages_sender_idTousersInput>
  }

  export type usersUpdateOneWithoutMessages_messages_receiver_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedCreateWithoutMessages_messages_receiver_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessages_messages_receiver_idTousersInput
    upsert?: usersUpsertWithoutMessages_messages_receiver_idTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMessages_messages_receiver_idTousersInput, usersUpdateWithoutMessages_messages_receiver_idTousersInput>, usersUncheckedUpdateWithoutMessages_messages_receiver_idTousersInput>
  }

  export type groupsUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutMessagesInput
    upsert?: groupsUpsertWithoutMessagesInput
    disconnect?: groupsWhereInput | boolean
    delete?: groupsWhereInput | boolean
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutMessagesInput, groupsUpdateWithoutMessagesInput>, groupsUncheckedUpdateWithoutMessagesInput>
  }

  export type role_permissionsCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput> | role_permissionsCreateWithoutPermissionsInput[] | role_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionsInput | role_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: role_permissionsCreateManyPermissionsInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type role_permissionsUncheckedCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput> | role_permissionsCreateWithoutPermissionsInput[] | role_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionsInput | role_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: role_permissionsCreateManyPermissionsInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type role_permissionsUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput> | role_permissionsCreateWithoutPermissionsInput[] | role_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionsInput | role_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | role_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: role_permissionsCreateManyPermissionsInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | role_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutPermissionsInput | role_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type role_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput> | role_permissionsCreateWithoutPermissionsInput[] | role_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutPermissionsInput | role_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | role_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: role_permissionsCreateManyPermissionsInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | role_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutPermissionsInput | role_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type rolesCreateNestedOneWithoutRole_permissionsInput = {
    create?: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_permissionsInput
    connect?: rolesWhereUniqueInput
  }

  export type permissionsCreateNestedOneWithoutRole_permissionsInput = {
    create?: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_permissionsInput
    connect?: permissionsWhereUniqueInput
  }

  export type rolesUpdateOneRequiredWithoutRole_permissionsNestedInput = {
    create?: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_permissionsInput
    upsert?: rolesUpsertWithoutRole_permissionsInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutRole_permissionsInput, rolesUpdateWithoutRole_permissionsInput>, rolesUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput = {
    create?: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_permissionsInput
    upsert?: permissionsUpsertWithoutRole_permissionsInput
    connect?: permissionsWhereUniqueInput
    update?: XOR<XOR<permissionsUpdateToOneWithWhereWithoutRole_permissionsInput, permissionsUpdateWithoutRole_permissionsInput>, permissionsUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type role_permissionsCreateNestedManyWithoutRolesInput = {
    create?: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput> | role_permissionsCreateWithoutRolesInput[] | role_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRolesInput | role_permissionsCreateOrConnectWithoutRolesInput[]
    createMany?: role_permissionsCreateManyRolesInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type user_rolesCreateNestedManyWithoutRolesInput = {
    create?: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput> | user_rolesCreateWithoutRolesInput[] | user_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutRolesInput | user_rolesCreateOrConnectWithoutRolesInput[]
    createMany?: user_rolesCreateManyRolesInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type role_permissionsUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput> | role_permissionsCreateWithoutRolesInput[] | role_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRolesInput | role_permissionsCreateOrConnectWithoutRolesInput[]
    createMany?: role_permissionsCreateManyRolesInputEnvelope
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
  }

  export type user_rolesUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput> | user_rolesCreateWithoutRolesInput[] | user_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutRolesInput | user_rolesCreateOrConnectWithoutRolesInput[]
    createMany?: user_rolesCreateManyRolesInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type role_permissionsUpdateManyWithoutRolesNestedInput = {
    create?: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput> | role_permissionsCreateWithoutRolesInput[] | role_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRolesInput | role_permissionsCreateOrConnectWithoutRolesInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutRolesInput | role_permissionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: role_permissionsCreateManyRolesInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutRolesInput | role_permissionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutRolesInput | role_permissionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type user_rolesUpdateManyWithoutRolesNestedInput = {
    create?: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput> | user_rolesCreateWithoutRolesInput[] | user_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutRolesInput | user_rolesCreateOrConnectWithoutRolesInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutRolesInput | user_rolesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: user_rolesCreateManyRolesInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutRolesInput | user_rolesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutRolesInput | user_rolesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type role_permissionsUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput> | role_permissionsCreateWithoutRolesInput[] | role_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_permissionsCreateOrConnectWithoutRolesInput | role_permissionsCreateOrConnectWithoutRolesInput[]
    upsert?: role_permissionsUpsertWithWhereUniqueWithoutRolesInput | role_permissionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: role_permissionsCreateManyRolesInputEnvelope
    set?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    disconnect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    delete?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    connect?: role_permissionsWhereUniqueInput | role_permissionsWhereUniqueInput[]
    update?: role_permissionsUpdateWithWhereUniqueWithoutRolesInput | role_permissionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: role_permissionsUpdateManyWithWhereWithoutRolesInput | role_permissionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
  }

  export type user_rolesUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput> | user_rolesCreateWithoutRolesInput[] | user_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutRolesInput | user_rolesCreateOrConnectWithoutRolesInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutRolesInput | user_rolesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: user_rolesCreateManyRolesInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutRolesInput | user_rolesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutRolesInput | user_rolesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutSubscriptions_subscriptions_user_idTousersInput = {
    create?: XOR<usersCreateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutSubscriptions_subscriptions_user_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    create?: XOR<usersCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutSubscriptions_subscriptions_subscriber_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutSubscriptions_subscriptions_user_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutSubscriptions_subscriptions_user_idTousersInput
    upsert?: usersUpsertWithoutSubscriptions_subscriptions_user_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSubscriptions_subscriptions_user_idTousersInput, usersUpdateWithoutSubscriptions_subscriptions_user_idTousersInput>, usersUncheckedUpdateWithoutSubscriptions_subscriptions_user_idTousersInput>
  }

  export type usersUpdateOneRequiredWithoutSubscriptions_subscriptions_subscriber_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutSubscriptions_subscriptions_subscriber_idTousersInput
    upsert?: usersUpsertWithoutSubscriptions_subscriptions_subscriber_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>, usersUncheckedUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
  }

  export type usersCreateNestedOneWithoutUser_chats_user_chats_user1_idTousersInput = {
    create?: XOR<usersCreateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user1_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_chats_user_chats_user1_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_chats_user_chats_user2_idTousersInput = {
    create?: XOR<usersCreateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user2_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_chats_user_chats_user2_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_chats_user_chats_user1_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user1_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_chats_user_chats_user1_idTousersInput
    upsert?: usersUpsertWithoutUser_chats_user_chats_user1_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_chats_user_chats_user1_idTousersInput, usersUpdateWithoutUser_chats_user_chats_user1_idTousersInput>, usersUncheckedUpdateWithoutUser_chats_user_chats_user1_idTousersInput>
  }

  export type usersUpdateOneRequiredWithoutUser_chats_user_chats_user2_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user2_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_chats_user_chats_user2_idTousersInput
    upsert?: usersUpsertWithoutUser_chats_user_chats_user2_idTousersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_chats_user_chats_user2_idTousersInput, usersUpdateWithoutUser_chats_user_chats_user2_idTousersInput>, usersUncheckedUpdateWithoutUser_chats_user_chats_user2_idTousersInput>
  }

  export type usersCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<usersCreateWithoutUser_rolesInput, usersUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_rolesInput
    connect?: usersWhereUniqueInput
  }

  export type rolesCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<rolesCreateWithoutUser_rolesInput, rolesUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUser_rolesInput
    connect?: rolesWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_rolesNestedInput = {
    create?: XOR<usersCreateWithoutUser_rolesInput, usersUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_rolesInput
    upsert?: usersUpsertWithoutUser_rolesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_rolesInput, usersUpdateWithoutUser_rolesInput>, usersUncheckedUpdateWithoutUser_rolesInput>
  }

  export type rolesUpdateOneRequiredWithoutUser_rolesNestedInput = {
    create?: XOR<rolesCreateWithoutUser_rolesInput, rolesUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUser_rolesInput
    upsert?: rolesUpsertWithoutUser_rolesInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutUser_rolesInput, rolesUpdateWithoutUser_rolesInput>, rolesUncheckedUpdateWithoutUser_rolesInput>
  }

  export type forgot_password_codeCreateNestedManyWithoutUsersInput = {
    create?: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput> | forgot_password_codeCreateWithoutUsersInput[] | forgot_password_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: forgot_password_codeCreateOrConnectWithoutUsersInput | forgot_password_codeCreateOrConnectWithoutUsersInput[]
    createMany?: forgot_password_codeCreateManyUsersInputEnvelope
    connect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
  }

  export type group_membersCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type likesCreateNestedManyWithoutUsersInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput> | messagesCreateWithoutUsers_messages_sender_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_sender_idTousersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput> | messagesCreateWithoutUsers_messages_receiver_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_receiver_idTousersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_user_idTousersInputEnvelope
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
  }

  export type subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInputEnvelope
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
  }

  export type user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user1_idTousersInputEnvelope
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
  }

  export type user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user2_idTousersInputEnvelope
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
  }

  export type user_rolesCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput> | user_rolesCreateWithoutUsersInput[] | user_rolesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUsersInput | user_rolesCreateOrConnectWithoutUsersInput[]
    createMany?: user_rolesCreateManyUsersInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type video_commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput> | video_commentsCreateWithoutUsersInput[] | video_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutUsersInput | video_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: video_commentsCreateManyUsersInputEnvelope
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
  }

  export type videosCreateNestedManyWithoutUsersInput = {
    create?: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput> | videosCreateWithoutUsersInput[] | videosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: videosCreateOrConnectWithoutUsersInput | videosCreateOrConnectWithoutUsersInput[]
    createMany?: videosCreateManyUsersInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput> | forgot_password_codeCreateWithoutUsersInput[] | forgot_password_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: forgot_password_codeCreateOrConnectWithoutUsersInput | forgot_password_codeCreateOrConnectWithoutUsersInput[]
    createMany?: forgot_password_codeCreateManyUsersInputEnvelope
    connect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
  }

  export type group_membersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
  }

  export type likesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput> | messagesCreateWithoutUsers_messages_sender_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_sender_idTousersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput> | messagesCreateWithoutUsers_messages_receiver_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_receiver_idTousersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_user_idTousersInputEnvelope
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
  }

  export type subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInputEnvelope
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
  }

  export type user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user1_idTousersInputEnvelope
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
  }

  export type user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user2_idTousersInputEnvelope
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
  }

  export type user_rolesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput> | user_rolesCreateWithoutUsersInput[] | user_rolesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUsersInput | user_rolesCreateOrConnectWithoutUsersInput[]
    createMany?: user_rolesCreateManyUsersInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type video_commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput> | video_commentsCreateWithoutUsersInput[] | video_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutUsersInput | video_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: video_commentsCreateManyUsersInputEnvelope
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
  }

  export type videosUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput> | videosCreateWithoutUsersInput[] | videosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: videosCreateOrConnectWithoutUsersInput | videosCreateOrConnectWithoutUsersInput[]
    createMany?: videosCreateManyUsersInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type forgot_password_codeUpdateManyWithoutUsersNestedInput = {
    create?: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput> | forgot_password_codeCreateWithoutUsersInput[] | forgot_password_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: forgot_password_codeCreateOrConnectWithoutUsersInput | forgot_password_codeCreateOrConnectWithoutUsersInput[]
    upsert?: forgot_password_codeUpsertWithWhereUniqueWithoutUsersInput | forgot_password_codeUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: forgot_password_codeCreateManyUsersInputEnvelope
    set?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    disconnect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    delete?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    connect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    update?: forgot_password_codeUpdateWithWhereUniqueWithoutUsersInput | forgot_password_codeUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: forgot_password_codeUpdateManyWithWhereWithoutUsersInput | forgot_password_codeUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: forgot_password_codeScalarWhereInput | forgot_password_codeScalarWhereInput[]
  }

  export type group_membersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutUsersInput | group_membersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutUsersInput | group_membersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutUsersInput | group_membersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type likesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutUsersInput | likesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutUsersInput | likesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: likesUpdateManyWithWhereWithoutUsersInput | likesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput> | messagesCreateWithoutUsers_messages_sender_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsers_messages_sender_idTousersInput | messagesUpsertWithWhereUniqueWithoutUsers_messages_sender_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_sender_idTousersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsers_messages_sender_idTousersInput | messagesUpdateWithWhereUniqueWithoutUsers_messages_sender_idTousersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsers_messages_sender_idTousersInput | messagesUpdateManyWithWhereWithoutUsers_messages_sender_idTousersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput> | messagesCreateWithoutUsers_messages_receiver_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput | messagesUpsertWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_receiver_idTousersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput | messagesUpdateWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsers_messages_receiver_idTousersInput | messagesUpdateManyWithWhereWithoutUsers_messages_receiver_idTousersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput[]
    upsert?: subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_user_idTousersInputEnvelope
    set?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    disconnect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    delete?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    update?: subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput[]
    updateMany?: subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_user_idTousersInput[]
    deleteMany?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
  }

  export type subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput[]
    upsert?: subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInputEnvelope
    set?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    disconnect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    delete?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    update?: subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput[]
    updateMany?: subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_subscriber_idTousersInput[]
    deleteMany?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
  }

  export type user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput[]
    upsert?: user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user1_idTousersInputEnvelope
    set?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    disconnect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    delete?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    update?: user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput[]
    updateMany?: user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user1_idTousersInput[]
    deleteMany?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
  }

  export type user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput[]
    upsert?: user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user2_idTousersInputEnvelope
    set?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    disconnect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    delete?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    update?: user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput[]
    updateMany?: user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user2_idTousersInput[]
    deleteMany?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
  }

  export type user_rolesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput> | user_rolesCreateWithoutUsersInput[] | user_rolesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUsersInput | user_rolesCreateOrConnectWithoutUsersInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutUsersInput | user_rolesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_rolesCreateManyUsersInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutUsersInput | user_rolesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutUsersInput | user_rolesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type video_commentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput> | video_commentsCreateWithoutUsersInput[] | video_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutUsersInput | video_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: video_commentsUpsertWithWhereUniqueWithoutUsersInput | video_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: video_commentsCreateManyUsersInputEnvelope
    set?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    disconnect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    delete?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    update?: video_commentsUpdateWithWhereUniqueWithoutUsersInput | video_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: video_commentsUpdateManyWithWhereWithoutUsersInput | video_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
  }

  export type videosUpdateManyWithoutUsersNestedInput = {
    create?: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput> | videosCreateWithoutUsersInput[] | videosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: videosCreateOrConnectWithoutUsersInput | videosCreateOrConnectWithoutUsersInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutUsersInput | videosUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: videosCreateManyUsersInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutUsersInput | videosUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: videosUpdateManyWithWhereWithoutUsersInput | videosUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput> | forgot_password_codeCreateWithoutUsersInput[] | forgot_password_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: forgot_password_codeCreateOrConnectWithoutUsersInput | forgot_password_codeCreateOrConnectWithoutUsersInput[]
    upsert?: forgot_password_codeUpsertWithWhereUniqueWithoutUsersInput | forgot_password_codeUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: forgot_password_codeCreateManyUsersInputEnvelope
    set?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    disconnect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    delete?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    connect?: forgot_password_codeWhereUniqueInput | forgot_password_codeWhereUniqueInput[]
    update?: forgot_password_codeUpdateWithWhereUniqueWithoutUsersInput | forgot_password_codeUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: forgot_password_codeUpdateManyWithWhereWithoutUsersInput | forgot_password_codeUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: forgot_password_codeScalarWhereInput | forgot_password_codeScalarWhereInput[]
  }

  export type group_membersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput> | group_membersCreateWithoutUsersInput[] | group_membersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: group_membersCreateOrConnectWithoutUsersInput | group_membersCreateOrConnectWithoutUsersInput[]
    upsert?: group_membersUpsertWithWhereUniqueWithoutUsersInput | group_membersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: group_membersCreateManyUsersInputEnvelope
    set?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    disconnect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    delete?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    connect?: group_membersWhereUniqueInput | group_membersWhereUniqueInput[]
    update?: group_membersUpdateWithWhereUniqueWithoutUsersInput | group_membersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: group_membersUpdateManyWithWhereWithoutUsersInput | group_membersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
  }

  export type likesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutUsersInput | likesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutUsersInput | likesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: likesUpdateManyWithWhereWithoutUsersInput | likesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput> | messagesCreateWithoutUsers_messages_sender_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsers_messages_sender_idTousersInput | messagesUpsertWithWhereUniqueWithoutUsers_messages_sender_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_sender_idTousersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsers_messages_sender_idTousersInput | messagesUpdateWithWhereUniqueWithoutUsers_messages_sender_idTousersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsers_messages_sender_idTousersInput | messagesUpdateManyWithWhereWithoutUsers_messages_sender_idTousersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput = {
    create?: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput> | messagesCreateWithoutUsers_messages_receiver_idTousersInput[] | messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput | messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput | messagesUpsertWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput[]
    createMany?: messagesCreateManyUsers_messages_receiver_idTousersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput | messagesUpdateWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsers_messages_receiver_idTousersInput | messagesUpdateManyWithWhereWithoutUsers_messages_receiver_idTousersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput[]
    upsert?: subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_user_idTousersInputEnvelope
    set?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    disconnect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    delete?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    update?: subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput[]
    updateMany?: subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_user_idTousersInput | subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_user_idTousersInput[]
    deleteMany?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
  }

  export type subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput = {
    create?: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput> | subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput[] | subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput[]
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput[]
    upsert?: subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput[]
    createMany?: subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInputEnvelope
    set?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    disconnect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    delete?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    connect?: subscriptionsWhereUniqueInput | subscriptionsWhereUniqueInput[]
    update?: subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput[]
    updateMany?: subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_subscriber_idTousersInput | subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_subscriber_idTousersInput[]
    deleteMany?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
  }

  export type user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput[]
    upsert?: user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user1_idTousersInputEnvelope
    set?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    disconnect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    delete?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    update?: user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput[]
    updateMany?: user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user1_idTousersInput | user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user1_idTousersInput[]
    deleteMany?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
  }

  export type user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput = {
    create?: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput> | user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput[] | user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput[]
    connectOrCreate?: user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput | user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput[]
    upsert?: user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput[]
    createMany?: user_chatsCreateManyUsers_user_chats_user2_idTousersInputEnvelope
    set?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    disconnect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    delete?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    connect?: user_chatsWhereUniqueInput | user_chatsWhereUniqueInput[]
    update?: user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput[]
    updateMany?: user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user2_idTousersInput | user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user2_idTousersInput[]
    deleteMany?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
  }

  export type user_rolesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput> | user_rolesCreateWithoutUsersInput[] | user_rolesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUsersInput | user_rolesCreateOrConnectWithoutUsersInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutUsersInput | user_rolesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_rolesCreateManyUsersInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutUsersInput | user_rolesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutUsersInput | user_rolesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type video_commentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput> | video_commentsCreateWithoutUsersInput[] | video_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutUsersInput | video_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: video_commentsUpsertWithWhereUniqueWithoutUsersInput | video_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: video_commentsCreateManyUsersInputEnvelope
    set?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    disconnect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    delete?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    update?: video_commentsUpdateWithWhereUniqueWithoutUsersInput | video_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: video_commentsUpdateManyWithWhereWithoutUsersInput | video_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
  }

  export type videosUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput> | videosCreateWithoutUsersInput[] | videosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: videosCreateOrConnectWithoutUsersInput | videosCreateOrConnectWithoutUsersInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutUsersInput | videosUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: videosCreateManyUsersInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutUsersInput | videosUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: videosUpdateManyWithWhereWithoutUsersInput | videosUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutVideo_commentsInput = {
    create?: XOR<usersCreateWithoutVideo_commentsInput, usersUncheckedCreateWithoutVideo_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutVideo_commentsInput
    connect?: usersWhereUniqueInput
  }

  export type videosCreateNestedOneWithoutVideo_commentsInput = {
    create?: XOR<videosCreateWithoutVideo_commentsInput, videosUncheckedCreateWithoutVideo_commentsInput>
    connectOrCreate?: videosCreateOrConnectWithoutVideo_commentsInput
    connect?: videosWhereUniqueInput
  }

  export type usersUpdateOneWithoutVideo_commentsNestedInput = {
    create?: XOR<usersCreateWithoutVideo_commentsInput, usersUncheckedCreateWithoutVideo_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutVideo_commentsInput
    upsert?: usersUpsertWithoutVideo_commentsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVideo_commentsInput, usersUpdateWithoutVideo_commentsInput>, usersUncheckedUpdateWithoutVideo_commentsInput>
  }

  export type videosUpdateOneWithoutVideo_commentsNestedInput = {
    create?: XOR<videosCreateWithoutVideo_commentsInput, videosUncheckedCreateWithoutVideo_commentsInput>
    connectOrCreate?: videosCreateOrConnectWithoutVideo_commentsInput
    upsert?: videosUpsertWithoutVideo_commentsInput
    disconnect?: videosWhereInput | boolean
    delete?: videosWhereInput | boolean
    connect?: videosWhereUniqueInput
    update?: XOR<XOR<videosUpdateToOneWithWhereWithoutVideo_commentsInput, videosUpdateWithoutVideo_commentsInput>, videosUncheckedUpdateWithoutVideo_commentsInput>
  }

  export type videosCreateNestedManyWithoutVideo_typesInput = {
    create?: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput> | videosCreateWithoutVideo_typesInput[] | videosUncheckedCreateWithoutVideo_typesInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideo_typesInput | videosCreateOrConnectWithoutVideo_typesInput[]
    createMany?: videosCreateManyVideo_typesInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type videosUncheckedCreateNestedManyWithoutVideo_typesInput = {
    create?: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput> | videosCreateWithoutVideo_typesInput[] | videosUncheckedCreateWithoutVideo_typesInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideo_typesInput | videosCreateOrConnectWithoutVideo_typesInput[]
    createMany?: videosCreateManyVideo_typesInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type videosUpdateManyWithoutVideo_typesNestedInput = {
    create?: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput> | videosCreateWithoutVideo_typesInput[] | videosUncheckedCreateWithoutVideo_typesInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideo_typesInput | videosCreateOrConnectWithoutVideo_typesInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutVideo_typesInput | videosUpsertWithWhereUniqueWithoutVideo_typesInput[]
    createMany?: videosCreateManyVideo_typesInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutVideo_typesInput | videosUpdateWithWhereUniqueWithoutVideo_typesInput[]
    updateMany?: videosUpdateManyWithWhereWithoutVideo_typesInput | videosUpdateManyWithWhereWithoutVideo_typesInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type videosUncheckedUpdateManyWithoutVideo_typesNestedInput = {
    create?: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput> | videosCreateWithoutVideo_typesInput[] | videosUncheckedCreateWithoutVideo_typesInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideo_typesInput | videosCreateOrConnectWithoutVideo_typesInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutVideo_typesInput | videosUpsertWithWhereUniqueWithoutVideo_typesInput[]
    createMany?: videosCreateManyVideo_typesInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutVideo_typesInput | videosUpdateWithWhereUniqueWithoutVideo_typesInput[]
    updateMany?: videosUpdateManyWithWhereWithoutVideo_typesInput | videosUpdateManyWithWhereWithoutVideo_typesInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type likesCreateNestedManyWithoutVideosInput = {
    create?: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput> | likesCreateWithoutVideosInput[] | likesUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: likesCreateOrConnectWithoutVideosInput | likesCreateOrConnectWithoutVideosInput[]
    createMany?: likesCreateManyVideosInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type video_commentsCreateNestedManyWithoutVideosInput = {
    create?: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput> | video_commentsCreateWithoutVideosInput[] | video_commentsUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutVideosInput | video_commentsCreateOrConnectWithoutVideosInput[]
    createMany?: video_commentsCreateManyVideosInputEnvelope
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
  }

  export type video_typesCreateNestedOneWithoutVideosInput = {
    create?: XOR<video_typesCreateWithoutVideosInput, video_typesUncheckedCreateWithoutVideosInput>
    connectOrCreate?: video_typesCreateOrConnectWithoutVideosInput
    connect?: video_typesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutVideosInput = {
    create?: XOR<usersCreateWithoutVideosInput, usersUncheckedCreateWithoutVideosInput>
    connectOrCreate?: usersCreateOrConnectWithoutVideosInput
    connect?: usersWhereUniqueInput
  }

  export type likesUncheckedCreateNestedManyWithoutVideosInput = {
    create?: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput> | likesCreateWithoutVideosInput[] | likesUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: likesCreateOrConnectWithoutVideosInput | likesCreateOrConnectWithoutVideosInput[]
    createMany?: likesCreateManyVideosInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type video_commentsUncheckedCreateNestedManyWithoutVideosInput = {
    create?: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput> | video_commentsCreateWithoutVideosInput[] | video_commentsUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutVideosInput | video_commentsCreateOrConnectWithoutVideosInput[]
    createMany?: video_commentsCreateManyVideosInputEnvelope
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
  }

  export type likesUpdateManyWithoutVideosNestedInput = {
    create?: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput> | likesCreateWithoutVideosInput[] | likesUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: likesCreateOrConnectWithoutVideosInput | likesCreateOrConnectWithoutVideosInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutVideosInput | likesUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: likesCreateManyVideosInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutVideosInput | likesUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: likesUpdateManyWithWhereWithoutVideosInput | likesUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type video_commentsUpdateManyWithoutVideosNestedInput = {
    create?: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput> | video_commentsCreateWithoutVideosInput[] | video_commentsUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutVideosInput | video_commentsCreateOrConnectWithoutVideosInput[]
    upsert?: video_commentsUpsertWithWhereUniqueWithoutVideosInput | video_commentsUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: video_commentsCreateManyVideosInputEnvelope
    set?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    disconnect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    delete?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    update?: video_commentsUpdateWithWhereUniqueWithoutVideosInput | video_commentsUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: video_commentsUpdateManyWithWhereWithoutVideosInput | video_commentsUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
  }

  export type video_typesUpdateOneWithoutVideosNestedInput = {
    create?: XOR<video_typesCreateWithoutVideosInput, video_typesUncheckedCreateWithoutVideosInput>
    connectOrCreate?: video_typesCreateOrConnectWithoutVideosInput
    upsert?: video_typesUpsertWithoutVideosInput
    disconnect?: video_typesWhereInput | boolean
    delete?: video_typesWhereInput | boolean
    connect?: video_typesWhereUniqueInput
    update?: XOR<XOR<video_typesUpdateToOneWithWhereWithoutVideosInput, video_typesUpdateWithoutVideosInput>, video_typesUncheckedUpdateWithoutVideosInput>
  }

  export type usersUpdateOneWithoutVideosNestedInput = {
    create?: XOR<usersCreateWithoutVideosInput, usersUncheckedCreateWithoutVideosInput>
    connectOrCreate?: usersCreateOrConnectWithoutVideosInput
    upsert?: usersUpsertWithoutVideosInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVideosInput, usersUpdateWithoutVideosInput>, usersUncheckedUpdateWithoutVideosInput>
  }

  export type likesUncheckedUpdateManyWithoutVideosNestedInput = {
    create?: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput> | likesCreateWithoutVideosInput[] | likesUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: likesCreateOrConnectWithoutVideosInput | likesCreateOrConnectWithoutVideosInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutVideosInput | likesUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: likesCreateManyVideosInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutVideosInput | likesUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: likesUpdateManyWithWhereWithoutVideosInput | likesUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type video_commentsUncheckedUpdateManyWithoutVideosNestedInput = {
    create?: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput> | video_commentsCreateWithoutVideosInput[] | video_commentsUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: video_commentsCreateOrConnectWithoutVideosInput | video_commentsCreateOrConnectWithoutVideosInput[]
    upsert?: video_commentsUpsertWithWhereUniqueWithoutVideosInput | video_commentsUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: video_commentsCreateManyVideosInputEnvelope
    set?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    disconnect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    delete?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    connect?: video_commentsWhereUniqueInput | video_commentsWhereUniqueInput[]
    update?: video_commentsUpdateWithWhereUniqueWithoutVideosInput | video_commentsUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: video_commentsUpdateManyWithWhereWithoutVideosInput | video_commentsUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumlikes_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.likes_type | Enumlikes_typeFieldRefInput<$PrismaModel>
    in?: $Enums.likes_type[]
    notIn?: $Enums.likes_type[]
    not?: NestedEnumlikes_typeFilter<$PrismaModel> | $Enums.likes_type
  }

  export type NestedEnumlikes_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.likes_type | Enumlikes_typeFieldRefInput<$PrismaModel>
    in?: $Enums.likes_type[]
    notIn?: $Enums.likes_type[]
    not?: NestedEnumlikes_typeWithAggregatesFilter<$PrismaModel> | $Enums.likes_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumlikes_typeFilter<$PrismaModel>
    _max?: NestedEnumlikes_typeFilter<$PrismaModel>
  }

  export type usersCreateWithoutForgot_password_codeInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutForgot_password_codeInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutForgot_password_codeInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutForgot_password_codeInput, usersUncheckedCreateWithoutForgot_password_codeInput>
  }

  export type usersUpsertWithoutForgot_password_codeInput = {
    update: XOR<usersUpdateWithoutForgot_password_codeInput, usersUncheckedUpdateWithoutForgot_password_codeInput>
    create: XOR<usersCreateWithoutForgot_password_codeInput, usersUncheckedCreateWithoutForgot_password_codeInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutForgot_password_codeInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutForgot_password_codeInput, usersUncheckedUpdateWithoutForgot_password_codeInput>
  }

  export type usersUpdateWithoutForgot_password_codeInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutForgot_password_codeInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type groupsCreateWithoutGroup_membersInput = {
    group_name: string
    created_at?: Date | string | null
    messages?: messagesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutGroup_membersInput = {
    group_id?: number
    group_name: string
    created_at?: Date | string | null
    messages?: messagesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutGroup_membersInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
  }

  export type usersCreateWithoutGroup_membersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutGroup_membersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutGroup_membersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
  }

  export type groupsUpsertWithoutGroup_membersInput = {
    update: XOR<groupsUpdateWithoutGroup_membersInput, groupsUncheckedUpdateWithoutGroup_membersInput>
    create: XOR<groupsCreateWithoutGroup_membersInput, groupsUncheckedCreateWithoutGroup_membersInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutGroup_membersInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutGroup_membersInput, groupsUncheckedUpdateWithoutGroup_membersInput>
  }

  export type groupsUpdateWithoutGroup_membersInput = {
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    messages?: messagesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutGroup_membersInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    messages?: messagesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type usersUpsertWithoutGroup_membersInput = {
    update: XOR<usersUpdateWithoutGroup_membersInput, usersUncheckedUpdateWithoutGroup_membersInput>
    create: XOR<usersCreateWithoutGroup_membersInput, usersUncheckedCreateWithoutGroup_membersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutGroup_membersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutGroup_membersInput, usersUncheckedUpdateWithoutGroup_membersInput>
  }

  export type usersUpdateWithoutGroup_membersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutGroup_membersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type group_membersCreateWithoutGroupsInput = {
    joined_at?: Date | string | null
    users: usersCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateWithoutGroupsInput = {
    group_member_id?: number
    user_id: number
    joined_at?: Date | string | null
  }

  export type group_membersCreateOrConnectWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    create: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput>
  }

  export type group_membersCreateManyGroupsInputEnvelope = {
    data: group_membersCreateManyGroupsInput | group_membersCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutGroupsInput = {
    message_text: string
    created_at?: Date | string | null
    users_messages_sender_idTousers: usersCreateNestedOneWithoutMessages_messages_sender_idTousersInput
    users_messages_receiver_idTousers?: usersCreateNestedOneWithoutMessages_messages_receiver_idTousersInput
  }

  export type messagesUncheckedCreateWithoutGroupsInput = {
    message_id?: number
    sender_id: number
    receiver_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesCreateOrConnectWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput>
  }

  export type messagesCreateManyGroupsInputEnvelope = {
    data: messagesCreateManyGroupsInput | messagesCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type group_membersUpsertWithWhereUniqueWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    update: XOR<group_membersUpdateWithoutGroupsInput, group_membersUncheckedUpdateWithoutGroupsInput>
    create: XOR<group_membersCreateWithoutGroupsInput, group_membersUncheckedCreateWithoutGroupsInput>
  }

  export type group_membersUpdateWithWhereUniqueWithoutGroupsInput = {
    where: group_membersWhereUniqueInput
    data: XOR<group_membersUpdateWithoutGroupsInput, group_membersUncheckedUpdateWithoutGroupsInput>
  }

  export type group_membersUpdateManyWithWhereWithoutGroupsInput = {
    where: group_membersScalarWhereInput
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyWithoutGroupsInput>
  }

  export type group_membersScalarWhereInput = {
    AND?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
    OR?: group_membersScalarWhereInput[]
    NOT?: group_membersScalarWhereInput | group_membersScalarWhereInput[]
    group_member_id?: IntFilter<"group_members"> | number
    group_id?: IntFilter<"group_members"> | number
    user_id?: IntFilter<"group_members"> | number
    joined_at?: DateTimeNullableFilter<"group_members"> | Date | string | null
  }

  export type messagesUpsertWithWhereUniqueWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutGroupsInput, messagesUncheckedUpdateWithoutGroupsInput>
    create: XOR<messagesCreateWithoutGroupsInput, messagesUncheckedCreateWithoutGroupsInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutGroupsInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutGroupsInput, messagesUncheckedUpdateWithoutGroupsInput>
  }

  export type messagesUpdateManyWithWhereWithoutGroupsInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutGroupsInput>
  }

  export type messagesScalarWhereInput = {
    AND?: messagesScalarWhereInput | messagesScalarWhereInput[]
    OR?: messagesScalarWhereInput[]
    NOT?: messagesScalarWhereInput | messagesScalarWhereInput[]
    message_id?: IntFilter<"messages"> | number
    sender_id?: IntFilter<"messages"> | number
    receiver_id?: IntNullableFilter<"messages"> | number | null
    group_id?: IntNullableFilter<"messages"> | number | null
    message_text?: StringFilter<"messages"> | string
    created_at?: DateTimeNullableFilter<"messages"> | Date | string | null
  }

  export type usersCreateWithoutLikesInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutLikesInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutLikesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutLikesInput, usersUncheckedCreateWithoutLikesInput>
  }

  export type videosCreateWithoutLikesInput = {
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    source?: string | null
    created_at?: Date | string | null
    video_comments?: video_commentsCreateNestedManyWithoutVideosInput
    video_types?: video_typesCreateNestedOneWithoutVideosInput
    users?: usersCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutLikesInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutLikesInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutLikesInput, videosUncheckedCreateWithoutLikesInput>
  }

  export type usersUpsertWithoutLikesInput = {
    update: XOR<usersUpdateWithoutLikesInput, usersUncheckedUpdateWithoutLikesInput>
    create: XOR<usersCreateWithoutLikesInput, usersUncheckedCreateWithoutLikesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutLikesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutLikesInput, usersUncheckedUpdateWithoutLikesInput>
  }

  export type usersUpdateWithoutLikesInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutLikesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type videosUpsertWithoutLikesInput = {
    update: XOR<videosUpdateWithoutLikesInput, videosUncheckedUpdateWithoutLikesInput>
    create: XOR<videosCreateWithoutLikesInput, videosUncheckedCreateWithoutLikesInput>
    where?: videosWhereInput
  }

  export type videosUpdateToOneWithWhereWithoutLikesInput = {
    where?: videosWhereInput
    data: XOR<videosUpdateWithoutLikesInput, videosUncheckedUpdateWithoutLikesInput>
  }

  export type videosUpdateWithoutLikesInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    video_comments?: video_commentsUpdateManyWithoutVideosNestedInput
    video_types?: video_typesUpdateOneWithoutVideosNestedInput
    users?: usersUpdateOneWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutLikesInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    video_comments?: video_commentsUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type usersCreateWithoutMessages_messages_sender_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMessages_messages_sender_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMessages_messages_sender_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMessages_messages_sender_idTousersInput, usersUncheckedCreateWithoutMessages_messages_sender_idTousersInput>
  }

  export type usersCreateWithoutMessages_messages_receiver_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMessages_messages_receiver_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMessages_messages_receiver_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedCreateWithoutMessages_messages_receiver_idTousersInput>
  }

  export type groupsCreateWithoutMessagesInput = {
    group_name: string
    created_at?: Date | string | null
    group_members?: group_membersCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutMessagesInput = {
    group_id?: number
    group_name: string
    created_at?: Date | string | null
    group_members?: group_membersUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutMessagesInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
  }

  export type usersUpsertWithoutMessages_messages_sender_idTousersInput = {
    update: XOR<usersUpdateWithoutMessages_messages_sender_idTousersInput, usersUncheckedUpdateWithoutMessages_messages_sender_idTousersInput>
    create: XOR<usersCreateWithoutMessages_messages_sender_idTousersInput, usersUncheckedCreateWithoutMessages_messages_sender_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMessages_messages_sender_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMessages_messages_sender_idTousersInput, usersUncheckedUpdateWithoutMessages_messages_sender_idTousersInput>
  }

  export type usersUpdateWithoutMessages_messages_sender_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMessages_messages_sender_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutMessages_messages_receiver_idTousersInput = {
    update: XOR<usersUpdateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedUpdateWithoutMessages_messages_receiver_idTousersInput>
    create: XOR<usersCreateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedCreateWithoutMessages_messages_receiver_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMessages_messages_receiver_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMessages_messages_receiver_idTousersInput, usersUncheckedUpdateWithoutMessages_messages_receiver_idTousersInput>
  }

  export type usersUpdateWithoutMessages_messages_receiver_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMessages_messages_receiver_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type groupsUpsertWithoutMessagesInput = {
    update: XOR<groupsUpdateWithoutMessagesInput, groupsUncheckedUpdateWithoutMessagesInput>
    create: XOR<groupsCreateWithoutMessagesInput, groupsUncheckedCreateWithoutMessagesInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutMessagesInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutMessagesInput, groupsUncheckedUpdateWithoutMessagesInput>
  }

  export type groupsUpdateWithoutMessagesInput = {
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutMessagesInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    group_members?: group_membersUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type role_permissionsCreateWithoutPermissionsInput = {
    roles: rolesCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateWithoutPermissionsInput = {
    role_permission_id?: number
    role_id: number
  }

  export type role_permissionsCreateOrConnectWithoutPermissionsInput = {
    where: role_permissionsWhereUniqueInput
    create: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type role_permissionsCreateManyPermissionsInputEnvelope = {
    data: role_permissionsCreateManyPermissionsInput | role_permissionsCreateManyPermissionsInput[]
    skipDuplicates?: boolean
  }

  export type role_permissionsUpsertWithWhereUniqueWithoutPermissionsInput = {
    where: role_permissionsWhereUniqueInput
    update: XOR<role_permissionsUpdateWithoutPermissionsInput, role_permissionsUncheckedUpdateWithoutPermissionsInput>
    create: XOR<role_permissionsCreateWithoutPermissionsInput, role_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type role_permissionsUpdateWithWhereUniqueWithoutPermissionsInput = {
    where: role_permissionsWhereUniqueInput
    data: XOR<role_permissionsUpdateWithoutPermissionsInput, role_permissionsUncheckedUpdateWithoutPermissionsInput>
  }

  export type role_permissionsUpdateManyWithWhereWithoutPermissionsInput = {
    where: role_permissionsScalarWhereInput
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyWithoutPermissionsInput>
  }

  export type role_permissionsScalarWhereInput = {
    AND?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
    OR?: role_permissionsScalarWhereInput[]
    NOT?: role_permissionsScalarWhereInput | role_permissionsScalarWhereInput[]
    role_permission_id?: IntFilter<"role_permissions"> | number
    role_id?: IntFilter<"role_permissions"> | number
    permission_id?: IntFilter<"role_permissions"> | number
  }

  export type rolesCreateWithoutRole_permissionsInput = {
    role_name: string
    user_roles?: user_rolesCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutRole_permissionsInput = {
    role_id?: number
    role_name: string
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutRole_permissionsInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
  }

  export type permissionsCreateWithoutRole_permissionsInput = {
    permission_name: string
    description?: string | null
  }

  export type permissionsUncheckedCreateWithoutRole_permissionsInput = {
    permission_id?: number
    permission_name: string
    description?: string | null
  }

  export type permissionsCreateOrConnectWithoutRole_permissionsInput = {
    where: permissionsWhereUniqueInput
    create: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
  }

  export type rolesUpsertWithoutRole_permissionsInput = {
    update: XOR<rolesUpdateWithoutRole_permissionsInput, rolesUncheckedUpdateWithoutRole_permissionsInput>
    create: XOR<rolesCreateWithoutRole_permissionsInput, rolesUncheckedCreateWithoutRole_permissionsInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutRole_permissionsInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutRole_permissionsInput, rolesUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type rolesUpdateWithoutRole_permissionsInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    user_roles?: user_rolesUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutRole_permissionsInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    user_roles?: user_rolesUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type permissionsUpsertWithoutRole_permissionsInput = {
    update: XOR<permissionsUpdateWithoutRole_permissionsInput, permissionsUncheckedUpdateWithoutRole_permissionsInput>
    create: XOR<permissionsCreateWithoutRole_permissionsInput, permissionsUncheckedCreateWithoutRole_permissionsInput>
    where?: permissionsWhereInput
  }

  export type permissionsUpdateToOneWithWhereWithoutRole_permissionsInput = {
    where?: permissionsWhereInput
    data: XOR<permissionsUpdateWithoutRole_permissionsInput, permissionsUncheckedUpdateWithoutRole_permissionsInput>
  }

  export type permissionsUpdateWithoutRole_permissionsInput = {
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionsUncheckedUpdateWithoutRole_permissionsInput = {
    permission_id?: IntFieldUpdateOperationsInput | number
    permission_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type role_permissionsCreateWithoutRolesInput = {
    permissions: permissionsCreateNestedOneWithoutRole_permissionsInput
  }

  export type role_permissionsUncheckedCreateWithoutRolesInput = {
    role_permission_id?: number
    permission_id: number
  }

  export type role_permissionsCreateOrConnectWithoutRolesInput = {
    where: role_permissionsWhereUniqueInput
    create: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput>
  }

  export type role_permissionsCreateManyRolesInputEnvelope = {
    data: role_permissionsCreateManyRolesInput | role_permissionsCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type user_rolesCreateWithoutRolesInput = {
    users: usersCreateNestedOneWithoutUser_rolesInput
  }

  export type user_rolesUncheckedCreateWithoutRolesInput = {
    user_role_id?: number
    user_id: number
  }

  export type user_rolesCreateOrConnectWithoutRolesInput = {
    where: user_rolesWhereUniqueInput
    create: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput>
  }

  export type user_rolesCreateManyRolesInputEnvelope = {
    data: user_rolesCreateManyRolesInput | user_rolesCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type role_permissionsUpsertWithWhereUniqueWithoutRolesInput = {
    where: role_permissionsWhereUniqueInput
    update: XOR<role_permissionsUpdateWithoutRolesInput, role_permissionsUncheckedUpdateWithoutRolesInput>
    create: XOR<role_permissionsCreateWithoutRolesInput, role_permissionsUncheckedCreateWithoutRolesInput>
  }

  export type role_permissionsUpdateWithWhereUniqueWithoutRolesInput = {
    where: role_permissionsWhereUniqueInput
    data: XOR<role_permissionsUpdateWithoutRolesInput, role_permissionsUncheckedUpdateWithoutRolesInput>
  }

  export type role_permissionsUpdateManyWithWhereWithoutRolesInput = {
    where: role_permissionsScalarWhereInput
    data: XOR<role_permissionsUpdateManyMutationInput, role_permissionsUncheckedUpdateManyWithoutRolesInput>
  }

  export type user_rolesUpsertWithWhereUniqueWithoutRolesInput = {
    where: user_rolesWhereUniqueInput
    update: XOR<user_rolesUpdateWithoutRolesInput, user_rolesUncheckedUpdateWithoutRolesInput>
    create: XOR<user_rolesCreateWithoutRolesInput, user_rolesUncheckedCreateWithoutRolesInput>
  }

  export type user_rolesUpdateWithWhereUniqueWithoutRolesInput = {
    where: user_rolesWhereUniqueInput
    data: XOR<user_rolesUpdateWithoutRolesInput, user_rolesUncheckedUpdateWithoutRolesInput>
  }

  export type user_rolesUpdateManyWithWhereWithoutRolesInput = {
    where: user_rolesScalarWhereInput
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyWithoutRolesInput>
  }

  export type user_rolesScalarWhereInput = {
    AND?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
    OR?: user_rolesScalarWhereInput[]
    NOT?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
    user_role_id?: IntFilter<"user_roles"> | number
    user_id?: IntFilter<"user_roles"> | number
    role_id?: IntFilter<"user_roles"> | number
  }

  export type usersCreateWithoutSubscriptions_subscriptions_user_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSubscriptions_subscriptions_user_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSubscriptions_subscriptions_user_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_user_idTousersInput>
  }

  export type usersCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
  }

  export type usersUpsertWithoutSubscriptions_subscriptions_user_idTousersInput = {
    update: XOR<usersUpdateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedUpdateWithoutSubscriptions_subscriptions_user_idTousersInput>
    create: XOR<usersCreateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_user_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSubscriptions_subscriptions_user_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSubscriptions_subscriptions_user_idTousersInput, usersUncheckedUpdateWithoutSubscriptions_subscriptions_user_idTousersInput>
  }

  export type usersUpdateWithoutSubscriptions_subscriptions_user_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSubscriptions_subscriptions_user_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    update: XOR<usersUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
    create: XOR<usersCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedCreateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput, usersUncheckedUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput>
  }

  export type usersUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSubscriptions_subscriptions_subscriber_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_chats_user_chats_user1_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_chats_user_chats_user1_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_chats_user_chats_user1_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user1_idTousersInput>
  }

  export type usersCreateWithoutUser_chats_user_chats_user2_idTousersInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_chats_user_chats_user2_idTousersInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_chats_user_chats_user2_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user2_idTousersInput>
  }

  export type usersUpsertWithoutUser_chats_user_chats_user1_idTousersInput = {
    update: XOR<usersUpdateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedUpdateWithoutUser_chats_user_chats_user1_idTousersInput>
    create: XOR<usersCreateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user1_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_chats_user_chats_user1_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_chats_user_chats_user1_idTousersInput, usersUncheckedUpdateWithoutUser_chats_user_chats_user1_idTousersInput>
  }

  export type usersUpdateWithoutUser_chats_user_chats_user1_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_chats_user_chats_user1_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutUser_chats_user_chats_user2_idTousersInput = {
    update: XOR<usersUpdateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedUpdateWithoutUser_chats_user_chats_user2_idTousersInput>
    create: XOR<usersCreateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedCreateWithoutUser_chats_user_chats_user2_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_chats_user_chats_user2_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_chats_user_chats_user2_idTousersInput, usersUncheckedUpdateWithoutUser_chats_user_chats_user2_idTousersInput>
  }

  export type usersUpdateWithoutUser_chats_user_chats_user2_idTousersInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_chats_user_chats_user2_idTousersInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_rolesInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_rolesInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_rolesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_rolesInput, usersUncheckedCreateWithoutUser_rolesInput>
  }

  export type rolesCreateWithoutUser_rolesInput = {
    role_name: string
    role_permissions?: role_permissionsCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutUser_rolesInput = {
    role_id?: number
    role_name: string
    role_permissions?: role_permissionsUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutUser_rolesInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutUser_rolesInput, rolesUncheckedCreateWithoutUser_rolesInput>
  }

  export type usersUpsertWithoutUser_rolesInput = {
    update: XOR<usersUpdateWithoutUser_rolesInput, usersUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<usersCreateWithoutUser_rolesInput, usersUncheckedCreateWithoutUser_rolesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_rolesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_rolesInput, usersUncheckedUpdateWithoutUser_rolesInput>
  }

  export type usersUpdateWithoutUser_rolesInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_rolesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type rolesUpsertWithoutUser_rolesInput = {
    update: XOR<rolesUpdateWithoutUser_rolesInput, rolesUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<rolesCreateWithoutUser_rolesInput, rolesUncheckedCreateWithoutUser_rolesInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutUser_rolesInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutUser_rolesInput, rolesUncheckedUpdateWithoutUser_rolesInput>
  }

  export type rolesUpdateWithoutUser_rolesInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    role_permissions?: role_permissionsUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutUser_rolesInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    role_permissions?: role_permissionsUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type forgot_password_codeCreateWithoutUsersInput = {
    forgot_code?: string | null
    expired?: Date | string | null
  }

  export type forgot_password_codeUncheckedCreateWithoutUsersInput = {
    id?: number
    forgot_code?: string | null
    expired?: Date | string | null
  }

  export type forgot_password_codeCreateOrConnectWithoutUsersInput = {
    where: forgot_password_codeWhereUniqueInput
    create: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput>
  }

  export type forgot_password_codeCreateManyUsersInputEnvelope = {
    data: forgot_password_codeCreateManyUsersInput | forgot_password_codeCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type group_membersCreateWithoutUsersInput = {
    joined_at?: Date | string | null
    groups: groupsCreateNestedOneWithoutGroup_membersInput
  }

  export type group_membersUncheckedCreateWithoutUsersInput = {
    group_member_id?: number
    group_id: number
    joined_at?: Date | string | null
  }

  export type group_membersCreateOrConnectWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    create: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput>
  }

  export type group_membersCreateManyUsersInputEnvelope = {
    data: group_membersCreateManyUsersInput | group_membersCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type likesCreateWithoutUsersInput = {
    type: $Enums.likes_type
    created_at?: Date | string | null
    videos?: videosCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateWithoutUsersInput = {
    like_id?: number
    video_id?: number | null
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type likesCreateOrConnectWithoutUsersInput = {
    where: likesWhereUniqueInput
    create: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput>
  }

  export type likesCreateManyUsersInputEnvelope = {
    data: likesCreateManyUsersInput | likesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutUsers_messages_sender_idTousersInput = {
    message_text: string
    created_at?: Date | string | null
    users_messages_receiver_idTousers?: usersCreateNestedOneWithoutMessages_messages_receiver_idTousersInput
    groups?: groupsCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput = {
    message_id?: number
    receiver_id?: number | null
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesCreateOrConnectWithoutUsers_messages_sender_idTousersInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput>
  }

  export type messagesCreateManyUsers_messages_sender_idTousersInputEnvelope = {
    data: messagesCreateManyUsers_messages_sender_idTousersInput | messagesCreateManyUsers_messages_sender_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutUsers_messages_receiver_idTousersInput = {
    message_text: string
    created_at?: Date | string | null
    users_messages_sender_idTousers: usersCreateNestedOneWithoutMessages_messages_sender_idTousersInput
    groups?: groupsCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput = {
    message_id?: number
    sender_id: number
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesCreateOrConnectWithoutUsers_messages_receiver_idTousersInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput>
  }

  export type messagesCreateManyUsers_messages_receiver_idTousersInputEnvelope = {
    data: messagesCreateManyUsers_messages_receiver_idTousersInput | messagesCreateManyUsers_messages_receiver_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput = {
    created_at?: Date | string | null
    users_subscriptions_subscriber_idTousers: usersCreateNestedOneWithoutSubscriptions_subscriptions_subscriber_idTousersInput
  }

  export type subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput = {
    subscription_id?: number
    subscriber_id: number
    created_at?: Date | string | null
  }

  export type subscriptionsCreateOrConnectWithoutUsers_subscriptions_user_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    create: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput>
  }

  export type subscriptionsCreateManyUsers_subscriptions_user_idTousersInputEnvelope = {
    data: subscriptionsCreateManyUsers_subscriptions_user_idTousersInput | subscriptionsCreateManyUsers_subscriptions_user_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput = {
    created_at?: Date | string | null
    users_subscriptions_user_idTousers: usersCreateNestedOneWithoutSubscriptions_subscriptions_user_idTousersInput
  }

  export type subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput = {
    subscription_id?: number
    user_id: number
    created_at?: Date | string | null
  }

  export type subscriptionsCreateOrConnectWithoutUsers_subscriptions_subscriber_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    create: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput>
  }

  export type subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInputEnvelope = {
    data: subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInput | subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput = {
    created_at?: Date | string | null
    users_user_chats_user2_idTousers: usersCreateNestedOneWithoutUser_chats_user_chats_user2_idTousersInput
  }

  export type user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput = {
    chat_id?: number
    user2_id: number
    created_at?: Date | string | null
  }

  export type user_chatsCreateOrConnectWithoutUsers_user_chats_user1_idTousersInput = {
    where: user_chatsWhereUniqueInput
    create: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput>
  }

  export type user_chatsCreateManyUsers_user_chats_user1_idTousersInputEnvelope = {
    data: user_chatsCreateManyUsers_user_chats_user1_idTousersInput | user_chatsCreateManyUsers_user_chats_user1_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput = {
    created_at?: Date | string | null
    users_user_chats_user1_idTousers: usersCreateNestedOneWithoutUser_chats_user_chats_user1_idTousersInput
  }

  export type user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput = {
    chat_id?: number
    user1_id: number
    created_at?: Date | string | null
  }

  export type user_chatsCreateOrConnectWithoutUsers_user_chats_user2_idTousersInput = {
    where: user_chatsWhereUniqueInput
    create: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput>
  }

  export type user_chatsCreateManyUsers_user_chats_user2_idTousersInputEnvelope = {
    data: user_chatsCreateManyUsers_user_chats_user2_idTousersInput | user_chatsCreateManyUsers_user_chats_user2_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_rolesCreateWithoutUsersInput = {
    roles: rolesCreateNestedOneWithoutUser_rolesInput
  }

  export type user_rolesUncheckedCreateWithoutUsersInput = {
    user_role_id?: number
    role_id: number
  }

  export type user_rolesCreateOrConnectWithoutUsersInput = {
    where: user_rolesWhereUniqueInput
    create: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput>
  }

  export type user_rolesCreateManyUsersInputEnvelope = {
    data: user_rolesCreateManyUsersInput | user_rolesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type video_commentsCreateWithoutUsersInput = {
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    videos?: videosCreateNestedOneWithoutVideo_commentsInput
  }

  export type video_commentsUncheckedCreateWithoutUsersInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    video_id?: number | null
  }

  export type video_commentsCreateOrConnectWithoutUsersInput = {
    where: video_commentsWhereUniqueInput
    create: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput>
  }

  export type video_commentsCreateManyUsersInputEnvelope = {
    data: video_commentsCreateManyUsersInput | video_commentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type videosCreateWithoutUsersInput = {
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsCreateNestedManyWithoutVideosInput
    video_types?: video_typesCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutUsersInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesUncheckedCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutUsersInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput>
  }

  export type videosCreateManyUsersInputEnvelope = {
    data: videosCreateManyUsersInput | videosCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type forgot_password_codeUpsertWithWhereUniqueWithoutUsersInput = {
    where: forgot_password_codeWhereUniqueInput
    update: XOR<forgot_password_codeUpdateWithoutUsersInput, forgot_password_codeUncheckedUpdateWithoutUsersInput>
    create: XOR<forgot_password_codeCreateWithoutUsersInput, forgot_password_codeUncheckedCreateWithoutUsersInput>
  }

  export type forgot_password_codeUpdateWithWhereUniqueWithoutUsersInput = {
    where: forgot_password_codeWhereUniqueInput
    data: XOR<forgot_password_codeUpdateWithoutUsersInput, forgot_password_codeUncheckedUpdateWithoutUsersInput>
  }

  export type forgot_password_codeUpdateManyWithWhereWithoutUsersInput = {
    where: forgot_password_codeScalarWhereInput
    data: XOR<forgot_password_codeUpdateManyMutationInput, forgot_password_codeUncheckedUpdateManyWithoutUsersInput>
  }

  export type forgot_password_codeScalarWhereInput = {
    AND?: forgot_password_codeScalarWhereInput | forgot_password_codeScalarWhereInput[]
    OR?: forgot_password_codeScalarWhereInput[]
    NOT?: forgot_password_codeScalarWhereInput | forgot_password_codeScalarWhereInput[]
    id?: IntFilter<"forgot_password_code"> | number
    forgot_code?: StringNullableFilter<"forgot_password_code"> | string | null
    user_id?: IntNullableFilter<"forgot_password_code"> | number | null
    expired?: DateTimeNullableFilter<"forgot_password_code"> | Date | string | null
  }

  export type group_membersUpsertWithWhereUniqueWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    update: XOR<group_membersUpdateWithoutUsersInput, group_membersUncheckedUpdateWithoutUsersInput>
    create: XOR<group_membersCreateWithoutUsersInput, group_membersUncheckedCreateWithoutUsersInput>
  }

  export type group_membersUpdateWithWhereUniqueWithoutUsersInput = {
    where: group_membersWhereUniqueInput
    data: XOR<group_membersUpdateWithoutUsersInput, group_membersUncheckedUpdateWithoutUsersInput>
  }

  export type group_membersUpdateManyWithWhereWithoutUsersInput = {
    where: group_membersScalarWhereInput
    data: XOR<group_membersUpdateManyMutationInput, group_membersUncheckedUpdateManyWithoutUsersInput>
  }

  export type likesUpsertWithWhereUniqueWithoutUsersInput = {
    where: likesWhereUniqueInput
    update: XOR<likesUpdateWithoutUsersInput, likesUncheckedUpdateWithoutUsersInput>
    create: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput>
  }

  export type likesUpdateWithWhereUniqueWithoutUsersInput = {
    where: likesWhereUniqueInput
    data: XOR<likesUpdateWithoutUsersInput, likesUncheckedUpdateWithoutUsersInput>
  }

  export type likesUpdateManyWithWhereWithoutUsersInput = {
    where: likesScalarWhereInput
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyWithoutUsersInput>
  }

  export type likesScalarWhereInput = {
    AND?: likesScalarWhereInput | likesScalarWhereInput[]
    OR?: likesScalarWhereInput[]
    NOT?: likesScalarWhereInput | likesScalarWhereInput[]
    like_id?: IntFilter<"likes"> | number
    user_id?: IntFilter<"likes"> | number
    video_id?: IntNullableFilter<"likes"> | number | null
    type?: Enumlikes_typeFilter<"likes"> | $Enums.likes_type
    created_at?: DateTimeNullableFilter<"likes"> | Date | string | null
  }

  export type messagesUpsertWithWhereUniqueWithoutUsers_messages_sender_idTousersInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedUpdateWithoutUsers_messages_sender_idTousersInput>
    create: XOR<messagesCreateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_sender_idTousersInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutUsers_messages_sender_idTousersInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutUsers_messages_sender_idTousersInput, messagesUncheckedUpdateWithoutUsers_messages_sender_idTousersInput>
  }

  export type messagesUpdateManyWithWhereWithoutUsers_messages_sender_idTousersInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersInput>
  }

  export type messagesUpsertWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedUpdateWithoutUsers_messages_receiver_idTousersInput>
    create: XOR<messagesCreateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedCreateWithoutUsers_messages_receiver_idTousersInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutUsers_messages_receiver_idTousersInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutUsers_messages_receiver_idTousersInput, messagesUncheckedUpdateWithoutUsers_messages_receiver_idTousersInput>
  }

  export type messagesUpdateManyWithWhereWithoutUsers_messages_receiver_idTousersInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersInput>
  }

  export type subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    update: XOR<subscriptionsUpdateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedUpdateWithoutUsers_subscriptions_user_idTousersInput>
    create: XOR<subscriptionsCreateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_user_idTousersInput>
  }

  export type subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_user_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    data: XOR<subscriptionsUpdateWithoutUsers_subscriptions_user_idTousersInput, subscriptionsUncheckedUpdateWithoutUsers_subscriptions_user_idTousersInput>
  }

  export type subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_user_idTousersInput = {
    where: subscriptionsScalarWhereInput
    data: XOR<subscriptionsUpdateManyMutationInput, subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersInput>
  }

  export type subscriptionsScalarWhereInput = {
    AND?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
    OR?: subscriptionsScalarWhereInput[]
    NOT?: subscriptionsScalarWhereInput | subscriptionsScalarWhereInput[]
    subscription_id?: IntFilter<"subscriptions"> | number
    user_id?: IntFilter<"subscriptions"> | number
    subscriber_id?: IntFilter<"subscriptions"> | number
    created_at?: DateTimeNullableFilter<"subscriptions"> | Date | string | null
  }

  export type subscriptionsUpsertWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    update: XOR<subscriptionsUpdateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedUpdateWithoutUsers_subscriptions_subscriber_idTousersInput>
    create: XOR<subscriptionsCreateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedCreateWithoutUsers_subscriptions_subscriber_idTousersInput>
  }

  export type subscriptionsUpdateWithWhereUniqueWithoutUsers_subscriptions_subscriber_idTousersInput = {
    where: subscriptionsWhereUniqueInput
    data: XOR<subscriptionsUpdateWithoutUsers_subscriptions_subscriber_idTousersInput, subscriptionsUncheckedUpdateWithoutUsers_subscriptions_subscriber_idTousersInput>
  }

  export type subscriptionsUpdateManyWithWhereWithoutUsers_subscriptions_subscriber_idTousersInput = {
    where: subscriptionsScalarWhereInput
    data: XOR<subscriptionsUpdateManyMutationInput, subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersInput>
  }

  export type user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput = {
    where: user_chatsWhereUniqueInput
    update: XOR<user_chatsUpdateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedUpdateWithoutUsers_user_chats_user1_idTousersInput>
    create: XOR<user_chatsCreateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user1_idTousersInput>
  }

  export type user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user1_idTousersInput = {
    where: user_chatsWhereUniqueInput
    data: XOR<user_chatsUpdateWithoutUsers_user_chats_user1_idTousersInput, user_chatsUncheckedUpdateWithoutUsers_user_chats_user1_idTousersInput>
  }

  export type user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user1_idTousersInput = {
    where: user_chatsScalarWhereInput
    data: XOR<user_chatsUpdateManyMutationInput, user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersInput>
  }

  export type user_chatsScalarWhereInput = {
    AND?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
    OR?: user_chatsScalarWhereInput[]
    NOT?: user_chatsScalarWhereInput | user_chatsScalarWhereInput[]
    chat_id?: IntFilter<"user_chats"> | number
    user1_id?: IntFilter<"user_chats"> | number
    user2_id?: IntFilter<"user_chats"> | number
    created_at?: DateTimeNullableFilter<"user_chats"> | Date | string | null
  }

  export type user_chatsUpsertWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput = {
    where: user_chatsWhereUniqueInput
    update: XOR<user_chatsUpdateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedUpdateWithoutUsers_user_chats_user2_idTousersInput>
    create: XOR<user_chatsCreateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedCreateWithoutUsers_user_chats_user2_idTousersInput>
  }

  export type user_chatsUpdateWithWhereUniqueWithoutUsers_user_chats_user2_idTousersInput = {
    where: user_chatsWhereUniqueInput
    data: XOR<user_chatsUpdateWithoutUsers_user_chats_user2_idTousersInput, user_chatsUncheckedUpdateWithoutUsers_user_chats_user2_idTousersInput>
  }

  export type user_chatsUpdateManyWithWhereWithoutUsers_user_chats_user2_idTousersInput = {
    where: user_chatsScalarWhereInput
    data: XOR<user_chatsUpdateManyMutationInput, user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersInput>
  }

  export type user_rolesUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_rolesWhereUniqueInput
    update: XOR<user_rolesUpdateWithoutUsersInput, user_rolesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_rolesCreateWithoutUsersInput, user_rolesUncheckedCreateWithoutUsersInput>
  }

  export type user_rolesUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_rolesWhereUniqueInput
    data: XOR<user_rolesUpdateWithoutUsersInput, user_rolesUncheckedUpdateWithoutUsersInput>
  }

  export type user_rolesUpdateManyWithWhereWithoutUsersInput = {
    where: user_rolesScalarWhereInput
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyWithoutUsersInput>
  }

  export type video_commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: video_commentsWhereUniqueInput
    update: XOR<video_commentsUpdateWithoutUsersInput, video_commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<video_commentsCreateWithoutUsersInput, video_commentsUncheckedCreateWithoutUsersInput>
  }

  export type video_commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: video_commentsWhereUniqueInput
    data: XOR<video_commentsUpdateWithoutUsersInput, video_commentsUncheckedUpdateWithoutUsersInput>
  }

  export type video_commentsUpdateManyWithWhereWithoutUsersInput = {
    where: video_commentsScalarWhereInput
    data: XOR<video_commentsUpdateManyMutationInput, video_commentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type video_commentsScalarWhereInput = {
    AND?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
    OR?: video_commentsScalarWhereInput[]
    NOT?: video_commentsScalarWhereInput | video_commentsScalarWhereInput[]
    comment_id?: IntFilter<"video_comments"> | number
    created_at?: DateTimeNullableFilter<"video_comments"> | Date | string | null
    content?: StringNullableFilter<"video_comments"> | string | null
    reply_list?: StringNullableFilter<"video_comments"> | string | null
    user_id?: IntNullableFilter<"video_comments"> | number | null
    video_id?: IntNullableFilter<"video_comments"> | number | null
  }

  export type videosUpsertWithWhereUniqueWithoutUsersInput = {
    where: videosWhereUniqueInput
    update: XOR<videosUpdateWithoutUsersInput, videosUncheckedUpdateWithoutUsersInput>
    create: XOR<videosCreateWithoutUsersInput, videosUncheckedCreateWithoutUsersInput>
  }

  export type videosUpdateWithWhereUniqueWithoutUsersInput = {
    where: videosWhereUniqueInput
    data: XOR<videosUpdateWithoutUsersInput, videosUncheckedUpdateWithoutUsersInput>
  }

  export type videosUpdateManyWithWhereWithoutUsersInput = {
    where: videosScalarWhereInput
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyWithoutUsersInput>
  }

  export type videosScalarWhereInput = {
    AND?: videosScalarWhereInput | videosScalarWhereInput[]
    OR?: videosScalarWhereInput[]
    NOT?: videosScalarWhereInput | videosScalarWhereInput[]
    video_id?: IntFilter<"videos"> | number
    video_name?: StringFilter<"videos"> | string
    thumbnail?: StringNullableFilter<"videos"> | string | null
    description?: StringNullableFilter<"videos"> | string | null
    views?: IntNullableFilter<"videos"> | number | null
    type_id?: IntNullableFilter<"videos"> | number | null
    user_id?: IntNullableFilter<"videos"> | number | null
    source?: StringNullableFilter<"videos"> | string | null
    created_at?: DateTimeNullableFilter<"videos"> | Date | string | null
  }

  export type usersCreateWithoutVideo_commentsInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    videos?: videosCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutVideo_commentsInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    videos?: videosUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutVideo_commentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVideo_commentsInput, usersUncheckedCreateWithoutVideo_commentsInput>
  }

  export type videosCreateWithoutVideo_commentsInput = {
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesCreateNestedManyWithoutVideosInput
    video_types?: video_typesCreateNestedOneWithoutVideosInput
    users?: usersCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutVideo_commentsInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutVideo_commentsInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutVideo_commentsInput, videosUncheckedCreateWithoutVideo_commentsInput>
  }

  export type usersUpsertWithoutVideo_commentsInput = {
    update: XOR<usersUpdateWithoutVideo_commentsInput, usersUncheckedUpdateWithoutVideo_commentsInput>
    create: XOR<usersCreateWithoutVideo_commentsInput, usersUncheckedCreateWithoutVideo_commentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVideo_commentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVideo_commentsInput, usersUncheckedUpdateWithoutVideo_commentsInput>
  }

  export type usersUpdateWithoutVideo_commentsInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    videos?: videosUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutVideo_commentsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    videos?: videosUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type videosUpsertWithoutVideo_commentsInput = {
    update: XOR<videosUpdateWithoutVideo_commentsInput, videosUncheckedUpdateWithoutVideo_commentsInput>
    create: XOR<videosCreateWithoutVideo_commentsInput, videosUncheckedCreateWithoutVideo_commentsInput>
    where?: videosWhereInput
  }

  export type videosUpdateToOneWithWhereWithoutVideo_commentsInput = {
    where?: videosWhereInput
    data: XOR<videosUpdateWithoutVideo_commentsInput, videosUncheckedUpdateWithoutVideo_commentsInput>
  }

  export type videosUpdateWithoutVideo_commentsInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUpdateManyWithoutVideosNestedInput
    video_types?: video_typesUpdateOneWithoutVideosNestedInput
    users?: usersUpdateOneWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutVideo_commentsInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosCreateWithoutVideo_typesInput = {
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsCreateNestedManyWithoutVideosInput
    users?: usersCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutVideo_typesInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
    likes?: likesUncheckedCreateNestedManyWithoutVideosInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutVideo_typesInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput>
  }

  export type videosCreateManyVideo_typesInputEnvelope = {
    data: videosCreateManyVideo_typesInput | videosCreateManyVideo_typesInput[]
    skipDuplicates?: boolean
  }

  export type videosUpsertWithWhereUniqueWithoutVideo_typesInput = {
    where: videosWhereUniqueInput
    update: XOR<videosUpdateWithoutVideo_typesInput, videosUncheckedUpdateWithoutVideo_typesInput>
    create: XOR<videosCreateWithoutVideo_typesInput, videosUncheckedCreateWithoutVideo_typesInput>
  }

  export type videosUpdateWithWhereUniqueWithoutVideo_typesInput = {
    where: videosWhereUniqueInput
    data: XOR<videosUpdateWithoutVideo_typesInput, videosUncheckedUpdateWithoutVideo_typesInput>
  }

  export type videosUpdateManyWithWhereWithoutVideo_typesInput = {
    where: videosScalarWhereInput
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyWithoutVideo_typesInput>
  }

  export type likesCreateWithoutVideosInput = {
    type: $Enums.likes_type
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateWithoutVideosInput = {
    like_id?: number
    user_id: number
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type likesCreateOrConnectWithoutVideosInput = {
    where: likesWhereUniqueInput
    create: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput>
  }

  export type likesCreateManyVideosInputEnvelope = {
    data: likesCreateManyVideosInput | likesCreateManyVideosInput[]
    skipDuplicates?: boolean
  }

  export type video_commentsCreateWithoutVideosInput = {
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    users?: usersCreateNestedOneWithoutVideo_commentsInput
  }

  export type video_commentsUncheckedCreateWithoutVideosInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    user_id?: number | null
  }

  export type video_commentsCreateOrConnectWithoutVideosInput = {
    where: video_commentsWhereUniqueInput
    create: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput>
  }

  export type video_commentsCreateManyVideosInputEnvelope = {
    data: video_commentsCreateManyVideosInput | video_commentsCreateManyVideosInput[]
    skipDuplicates?: boolean
  }

  export type video_typesCreateWithoutVideosInput = {
    type_name: string
    icon?: string | null
    created_at?: Date | string | null
  }

  export type video_typesUncheckedCreateWithoutVideosInput = {
    type_id?: number
    type_name: string
    icon?: string | null
    created_at?: Date | string | null
  }

  export type video_typesCreateOrConnectWithoutVideosInput = {
    where: video_typesWhereUniqueInput
    create: XOR<video_typesCreateWithoutVideosInput, video_typesUncheckedCreateWithoutVideosInput>
  }

  export type usersCreateWithoutVideosInput = {
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeCreateNestedManyWithoutUsersInput
    group_members?: group_membersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutVideosInput = {
    user_id?: number
    full_name: string
    email: string
    avatar?: string | null
    pass_word: string
    face_app_id?: string | null
    refresh_token?: string | null
    secret_code?: string | null
    created_at?: Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedCreateNestedManyWithoutUsersInput
    group_members?: group_membersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    messages_messages_sender_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_sender_idTousersInput
    messages_messages_receiver_idTousers?: messagesUncheckedCreateNestedManyWithoutUsers_messages_receiver_idTousersInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_user_idTousersInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedCreateNestedManyWithoutUsers_subscriptions_subscriber_idTousersInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user1_idTousersInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedCreateNestedManyWithoutUsers_user_chats_user2_idTousersInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUsersInput
    video_comments?: video_commentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutVideosInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVideosInput, usersUncheckedCreateWithoutVideosInput>
  }

  export type likesUpsertWithWhereUniqueWithoutVideosInput = {
    where: likesWhereUniqueInput
    update: XOR<likesUpdateWithoutVideosInput, likesUncheckedUpdateWithoutVideosInput>
    create: XOR<likesCreateWithoutVideosInput, likesUncheckedCreateWithoutVideosInput>
  }

  export type likesUpdateWithWhereUniqueWithoutVideosInput = {
    where: likesWhereUniqueInput
    data: XOR<likesUpdateWithoutVideosInput, likesUncheckedUpdateWithoutVideosInput>
  }

  export type likesUpdateManyWithWhereWithoutVideosInput = {
    where: likesScalarWhereInput
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyWithoutVideosInput>
  }

  export type video_commentsUpsertWithWhereUniqueWithoutVideosInput = {
    where: video_commentsWhereUniqueInput
    update: XOR<video_commentsUpdateWithoutVideosInput, video_commentsUncheckedUpdateWithoutVideosInput>
    create: XOR<video_commentsCreateWithoutVideosInput, video_commentsUncheckedCreateWithoutVideosInput>
  }

  export type video_commentsUpdateWithWhereUniqueWithoutVideosInput = {
    where: video_commentsWhereUniqueInput
    data: XOR<video_commentsUpdateWithoutVideosInput, video_commentsUncheckedUpdateWithoutVideosInput>
  }

  export type video_commentsUpdateManyWithWhereWithoutVideosInput = {
    where: video_commentsScalarWhereInput
    data: XOR<video_commentsUpdateManyMutationInput, video_commentsUncheckedUpdateManyWithoutVideosInput>
  }

  export type video_typesUpsertWithoutVideosInput = {
    update: XOR<video_typesUpdateWithoutVideosInput, video_typesUncheckedUpdateWithoutVideosInput>
    create: XOR<video_typesCreateWithoutVideosInput, video_typesUncheckedCreateWithoutVideosInput>
    where?: video_typesWhereInput
  }

  export type video_typesUpdateToOneWithWhereWithoutVideosInput = {
    where?: video_typesWhereInput
    data: XOR<video_typesUpdateWithoutVideosInput, video_typesUncheckedUpdateWithoutVideosInput>
  }

  export type video_typesUpdateWithoutVideosInput = {
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type video_typesUncheckedUpdateWithoutVideosInput = {
    type_id?: IntFieldUpdateOperationsInput | number
    type_name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutVideosInput = {
    update: XOR<usersUpdateWithoutVideosInput, usersUncheckedUpdateWithoutVideosInput>
    create: XOR<usersCreateWithoutVideosInput, usersUncheckedCreateWithoutVideosInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVideosInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVideosInput, usersUncheckedUpdateWithoutVideosInput>
  }

  export type usersUpdateWithoutVideosInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutVideosInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    pass_word?: StringFieldUpdateOperationsInput | string
    face_app_id?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    secret_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    forgot_password_code?: forgot_password_codeUncheckedUpdateManyWithoutUsersNestedInput
    group_members?: group_membersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    messages_messages_sender_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersNestedInput
    messages_messages_receiver_idTousers?: messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersNestedInput
    subscriptions_subscriptions_user_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersNestedInput
    subscriptions_subscriptions_subscriber_idTousers?: subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersNestedInput
    user_chats_user_chats_user1_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersNestedInput
    user_chats_user_chats_user2_idTousers?: user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUsersNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type group_membersCreateManyGroupsInput = {
    group_member_id?: number
    user_id: number
    joined_at?: Date | string | null
  }

  export type messagesCreateManyGroupsInput = {
    message_id?: number
    sender_id: number
    receiver_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type group_membersUpdateWithoutGroupsInput = {
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateWithoutGroupsInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyWithoutGroupsInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUpdateWithoutGroupsInput = {
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_messages_sender_idTousers?: usersUpdateOneRequiredWithoutMessages_messages_sender_idTousersNestedInput
    users_messages_receiver_idTousers?: usersUpdateOneWithoutMessages_messages_receiver_idTousersNestedInput
  }

  export type messagesUncheckedUpdateWithoutGroupsInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUncheckedUpdateManyWithoutGroupsInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_permissionsCreateManyPermissionsInput = {
    role_permission_id?: number
    role_id: number
  }

  export type role_permissionsUpdateWithoutPermissionsInput = {
    roles?: rolesUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateWithoutPermissionsInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type role_permissionsUncheckedUpdateManyWithoutPermissionsInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type role_permissionsCreateManyRolesInput = {
    role_permission_id?: number
    permission_id: number
  }

  export type user_rolesCreateManyRolesInput = {
    user_role_id?: number
    user_id: number
  }

  export type role_permissionsUpdateWithoutRolesInput = {
    permissions?: permissionsUpdateOneRequiredWithoutRole_permissionsNestedInput
  }

  export type role_permissionsUncheckedUpdateWithoutRolesInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type role_permissionsUncheckedUpdateManyWithoutRolesInput = {
    role_permission_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_rolesUpdateWithoutRolesInput = {
    users?: usersUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type user_rolesUncheckedUpdateWithoutRolesInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_rolesUncheckedUpdateManyWithoutRolesInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type forgot_password_codeCreateManyUsersInput = {
    id?: number
    forgot_code?: string | null
    expired?: Date | string | null
  }

  export type group_membersCreateManyUsersInput = {
    group_member_id?: number
    group_id: number
    joined_at?: Date | string | null
  }

  export type likesCreateManyUsersInput = {
    like_id?: number
    video_id?: number | null
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type messagesCreateManyUsers_messages_sender_idTousersInput = {
    message_id?: number
    receiver_id?: number | null
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type messagesCreateManyUsers_messages_receiver_idTousersInput = {
    message_id?: number
    sender_id: number
    group_id?: number | null
    message_text: string
    created_at?: Date | string | null
  }

  export type subscriptionsCreateManyUsers_subscriptions_user_idTousersInput = {
    subscription_id?: number
    subscriber_id: number
    created_at?: Date | string | null
  }

  export type subscriptionsCreateManyUsers_subscriptions_subscriber_idTousersInput = {
    subscription_id?: number
    user_id: number
    created_at?: Date | string | null
  }

  export type user_chatsCreateManyUsers_user_chats_user1_idTousersInput = {
    chat_id?: number
    user2_id: number
    created_at?: Date | string | null
  }

  export type user_chatsCreateManyUsers_user_chats_user2_idTousersInput = {
    chat_id?: number
    user1_id: number
    created_at?: Date | string | null
  }

  export type user_rolesCreateManyUsersInput = {
    user_role_id?: number
    role_id: number
  }

  export type video_commentsCreateManyUsersInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    video_id?: number | null
  }

  export type videosCreateManyUsersInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    type_id?: number | null
    source?: string | null
    created_at?: Date | string | null
  }

  export type forgot_password_codeUpdateWithoutUsersInput = {
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type forgot_password_codeUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type forgot_password_codeUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    forgot_code?: NullableStringFieldUpdateOperationsInput | string | null
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUpdateWithoutUsersInput = {
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    groups?: groupsUpdateOneRequiredWithoutGroup_membersNestedInput
  }

  export type group_membersUncheckedUpdateWithoutUsersInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type group_membersUncheckedUpdateManyWithoutUsersInput = {
    group_member_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUpdateWithoutUsersInput = {
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    videos?: videosUpdateOneWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateWithoutUsersInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyWithoutUsersInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUpdateWithoutUsers_messages_sender_idTousersInput = {
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_messages_receiver_idTousers?: usersUpdateOneWithoutMessages_messages_receiver_idTousersNestedInput
    groups?: groupsUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutUsers_messages_sender_idTousersInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUncheckedUpdateManyWithoutUsers_messages_sender_idTousersInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUpdateWithoutUsers_messages_receiver_idTousersInput = {
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_messages_sender_idTousers?: usersUpdateOneRequiredWithoutMessages_messages_sender_idTousersNestedInput
    groups?: groupsUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutUsers_messages_receiver_idTousersInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUncheckedUpdateManyWithoutUsers_messages_receiver_idTousersInput = {
    message_id?: IntFieldUpdateOperationsInput | number
    sender_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    message_text?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsUpdateWithoutUsers_subscriptions_user_idTousersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_subscriptions_subscriber_idTousers?: usersUpdateOneRequiredWithoutSubscriptions_subscriptions_subscriber_idTousersNestedInput
  }

  export type subscriptionsUncheckedUpdateWithoutUsers_subscriptions_user_idTousersInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    subscriber_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_user_idTousersInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    subscriber_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsUpdateWithoutUsers_subscriptions_subscriber_idTousersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_subscriptions_user_idTousers?: usersUpdateOneRequiredWithoutSubscriptions_subscriptions_user_idTousersNestedInput
  }

  export type subscriptionsUncheckedUpdateWithoutUsers_subscriptions_subscriber_idTousersInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsUncheckedUpdateManyWithoutUsers_subscriptions_subscriber_idTousersInput = {
    subscription_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsUpdateWithoutUsers_user_chats_user1_idTousersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_chats_user2_idTousers?: usersUpdateOneRequiredWithoutUser_chats_user_chats_user2_idTousersNestedInput
  }

  export type user_chatsUncheckedUpdateWithoutUsers_user_chats_user1_idTousersInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user2_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user1_idTousersInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user2_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsUpdateWithoutUsers_user_chats_user2_idTousersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_user_chats_user1_idTousers?: usersUpdateOneRequiredWithoutUser_chats_user_chats_user1_idTousersNestedInput
  }

  export type user_chatsUncheckedUpdateWithoutUsers_user_chats_user2_idTousersInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user1_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_chatsUncheckedUpdateManyWithoutUsers_user_chats_user2_idTousersInput = {
    chat_id?: IntFieldUpdateOperationsInput | number
    user1_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_rolesUpdateWithoutUsersInput = {
    roles?: rolesUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type user_rolesUncheckedUpdateWithoutUsersInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_rolesUncheckedUpdateManyWithoutUsersInput = {
    user_role_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
  }

  export type video_commentsUpdateWithoutUsersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: videosUpdateOneWithoutVideo_commentsNestedInput
  }

  export type video_commentsUncheckedUpdateWithoutUsersInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type video_commentsUncheckedUpdateManyWithoutUsersInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    video_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type videosUpdateWithoutUsersInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUpdateManyWithoutVideosNestedInput
    video_types?: video_typesUpdateOneWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutUsersInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUncheckedUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateManyWithoutUsersInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type videosCreateManyVideo_typesInput = {
    video_id?: number
    video_name: string
    thumbnail?: string | null
    description?: string | null
    views?: number | null
    user_id?: number | null
    source?: string | null
    created_at?: Date | string | null
  }

  export type videosUpdateWithoutVideo_typesInput = {
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUpdateManyWithoutVideosNestedInput
    users?: usersUpdateOneWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutVideo_typesInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: likesUncheckedUpdateManyWithoutVideosNestedInput
    video_comments?: video_commentsUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateManyWithoutVideo_typesInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_name?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesCreateManyVideosInput = {
    like_id?: number
    user_id: number
    type: $Enums.likes_type
    created_at?: Date | string | null
  }

  export type video_commentsCreateManyVideosInput = {
    comment_id?: number
    created_at?: Date | string | null
    content?: string | null
    reply_list?: string | null
    user_id?: number | null
  }

  export type likesUpdateWithoutVideosInput = {
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateWithoutVideosInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyWithoutVideosInput = {
    like_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: Enumlikes_typeFieldUpdateOperationsInput | $Enums.likes_type
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type video_commentsUpdateWithoutVideosInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutVideo_commentsNestedInput
  }

  export type video_commentsUncheckedUpdateWithoutVideosInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type video_commentsUncheckedUpdateManyWithoutVideosInput = {
    comment_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    reply_list?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}